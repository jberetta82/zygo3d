#ifndef LUTaddr
#define     LUTaddr             (0x25C7A960)
#define     returnLUTaddr(n)    (LUTaddr + (0x20 * n))
#define     LUTidx(n)           (Uint16)(62764 + (4 * n))
#define     CRAM_Base           (0x25f00200)
#define     returnCRAMaddr(n)   (CRAM_Base + (0x20 * n))
#define     LUTcramIdx(n)       ((256 + (16 * n)))
#endif

/**Gouraud shading*/
#define	GRreal(n)	    (0x1c38+(n))
#define	GRaddr	        0x1c38
#define GOUR_REAL_MAX   950

/**depth table*/
#define	GRTBL(r,g,b)	(((b&0x1f)<<10) | ((g&0x1f)<<5) | (r&0x1f) )

/**tileset start*/
#define ENEMY_TILESET	(9)
#define MAP_TILESET	(23)
 
//grreal

GOURAUDTBL	GRreal[] = {
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},
{C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16),C_RGB(16,16,16)},

};


static	Uint16	DepthDataBlack[32] = {
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 16, 16, 16 ),
	GRTBL( 15, 15, 15 ),
	GRTBL( 14, 14, 14 ),
	GRTBL( 13, 13, 13 ),
	GRTBL( 12, 12, 12 ),
	GRTBL( 11, 11, 11 ),
	GRTBL( 10, 10, 10 ),
	GRTBL(  9,  9,  9 ),
	GRTBL(  8,  8,  8 ),
	GRTBL(  7,  7,  7 ),
	GRTBL(  6,  6,  6 ),
	GRTBL(  5,  5,  5 ),
	GRTBL(  4,  4,  4 ),
	GRTBL(  3,  3,  3 ),
	GRTBL(  2,  2,  2 ),
	GRTBL(  1,  1,  1 ),
	GRTBL(  0,  0,  0 ),
	
};


/////////


////////


POINT point_ham_shadow[] = {
       POStoFIXED(-16, 18.4173, 16),
       POStoFIXED(16, 18.4173, 16),
       POStoFIXED(-16, 18.4173, -16),
       POStoFIXED(16, 18.4173, -16),
};

POLYGON polygon_ham_shadow[] = {
       NORMAL(0, 1, 0), VERTICES(2, 3, 1, 0),
};

ATTR attribute_ham_shadow[] = {
       ATTRIBUTE(Dual_Plane, SORT_CEN, 6, 0xfc1f, CL32KRGB | No_Gouraud, Window_In|MESHoff|HSSon|ECdis|CL32KRGB|CL_Trans, sprNoflip, UseClip),
};

VECTOR normal_ham_shadow[] = {
       POStoFIXED(0, 1, 0),
       POStoFIXED(0, 1, 0),
       POStoFIXED(0, 1, 0),
       POStoFIXED(0, 1, 0),
};

XPDATA xpdata_ham_shadow[] = {
   {
       point_ham_shadow, sizeof(point_ham_shadow)/sizeof(POINT),
       polygon_ham_shadow, sizeof(polygon_ham_shadow)/sizeof(POLYGON),
       attribute_ham_shadow,
       normal_ham_shadow
  }
};

POINT point_splash_effect[] = {
       POStoFIXED(0, 17.6983, -13.5463),
       POStoFIXED(-11.7314, 17.6983, -6.77313),
       POStoFIXED(-11.7314, 17.6983, 6.77313),
       POStoFIXED(0, 17.6983, 13.5463),
       POStoFIXED(11.7314, 17.6983, 6.77313),
       POStoFIXED(11.7314, 17.6983, -6.77313),
       POStoFIXED(0, -17.3827, -16.7454),
       POStoFIXED(-14.502, -17.3827, -8.37271),
       POStoFIXED(-14.502, -17.3827, 8.37271),
       POStoFIXED(0, -17.3827, 16.7454),
       POStoFIXED(14.502, -17.3827, 8.37271),
       POStoFIXED(14.502, -17.3827, -8.37271),
};

POLYGON polygon_splash_effect[] = {
       NORMAL(0.498444, 0.0787201, 0.863327), VERTICES(4, 10, 9, 3),
       NORMAL(-0.996887, 0.0787201, 0), VERTICES(2, 8, 7, 1),
       NORMAL(0.996887, 0.0787201, 0), VERTICES(5, 11, 10, 4),
       NORMAL(-0.498444, 0.0787201, 0.863327), VERTICES(3, 9, 8, 2),
       NORMAL(-0.498444, 0.0787201, -0.863327), VERTICES(1, 7, 6, 0),
       NORMAL(0.498444, 0.0787201, -0.863327), VERTICES(0, 6, 11, 5),
};

ATTR attribute_splash_effect[] = {
      ATTRIBUTE(Dual_Plane, SORT_CEN, MAP_TILESET+33, LUTidx(MAP_TILESET+33), GRreal(86),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, MAP_TILESET+33, LUTidx(MAP_TILESET+33), GRreal(87),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, MAP_TILESET+33, LUTidx(MAP_TILESET+33), GRreal(88),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, MAP_TILESET+33, LUTidx(MAP_TILESET+33), GRreal(89),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, MAP_TILESET+33, LUTidx(MAP_TILESET+33), GRreal(90),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, MAP_TILESET+33, LUTidx(MAP_TILESET+33), GRreal(91),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_splash_effect[] = {
       POStoFIXED(0, 0.0787201, -0.863327),
       POStoFIXED(-0.747665, 0.0787201, -0.431656),
       POStoFIXED(-0.747665, 0.0787201, 0.431656),
       POStoFIXED(0, 0.0787201, 0.863327),
       POStoFIXED(0.747665, 0.0787201, 0.431656),
       POStoFIXED(0.747665, 0.0787201, -0.431656),
       POStoFIXED(0, 0.0787201, -0.863327),
       POStoFIXED(-0.747665, 0.0787201, -0.431656),
       POStoFIXED(-0.747665, 0.0787201, 0.431656),
       POStoFIXED(0, 0.0787201, 0.863327),
       POStoFIXED(0.747665, 0.0787201, 0.431656),
       POStoFIXED(0.747665, 0.0787201, -0.431656),
};

XPDATA xpdata_splash_effect[] = {
   {
       point_splash_effect, sizeof(point_splash_effect)/sizeof(POINT),
       polygon_splash_effect, sizeof(polygon_splash_effect)/sizeof(POLYGON),
       attribute_splash_effect,
       normal_splash_effect
  }
};

POINT point_die_effect[] = {
       POStoFIXED(0, 17.6983, -13.5463),
       POStoFIXED(-11.7314, 17.6983, -6.77313),
       POStoFIXED(-11.7314, 17.6983, 6.77313),
       POStoFIXED(0, 17.6983, 13.5463),
       POStoFIXED(11.7314, 17.6983, 6.77313),
       POStoFIXED(11.7314, 17.6983, -6.77313),
       POStoFIXED(0, -17.3827, -16.7454),
       POStoFIXED(-14.502, -17.3827, -8.37271),
       POStoFIXED(-14.502, -17.3827, 8.37271),
       POStoFIXED(0, -17.3827, 16.7454),
       POStoFIXED(14.502, -17.3827, 8.37271),
       POStoFIXED(14.502, -17.3827, -8.37271),
};

POLYGON polygon_die_effect[] = {
       NORMAL(0.498444, 0.0787201, 0.863327), VERTICES(4, 10, 9, 3),
       NORMAL(-0.996887, 0.0787201, 0), VERTICES(2, 8, 7, 1),
       NORMAL(0.996887, 0.0787201, 0), VERTICES(5, 11, 10, 4),
       NORMAL(-0.498444, 0.0787201, 0.863327), VERTICES(3, 9, 8, 2),
       NORMAL(-0.498444, 0.0787201, -0.863327), VERTICES(1, 7, 6, 0),
       NORMAL(0.498444, 0.0787201, -0.863327), VERTICES(0, 6, 11, 5),
};

ATTR attribute_die_effect[] = {
      ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+1, LUTidx(ENEMY_TILESET+1), GRreal(817),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+1, LUTidx(ENEMY_TILESET+1), GRreal(818),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+1, LUTidx(ENEMY_TILESET+1), GRreal(819),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+1, LUTidx(ENEMY_TILESET+1), GRreal(820),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+1, LUTidx(ENEMY_TILESET+1), GRreal(821),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+1, LUTidx(ENEMY_TILESET+1), GRreal(822),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_die_effect[] = {
       POStoFIXED(0, 0.0787201, -0.863327),
       POStoFIXED(-0.747665, 0.0787201, -0.431656),
       POStoFIXED(-0.747665, 0.0787201, 0.431656),
       POStoFIXED(0, 0.0787201, 0.863327),
       POStoFIXED(0.747665, 0.0787201, 0.431656),
       POStoFIXED(0.747665, 0.0787201, -0.431656),
       POStoFIXED(0, 0.0787201, -0.863327),
       POStoFIXED(-0.747665, 0.0787201, -0.431656),
       POStoFIXED(-0.747665, 0.0787201, 0.431656),
       POStoFIXED(0, 0.0787201, 0.863327),
       POStoFIXED(0.747665, 0.0787201, 0.431656),
       POStoFIXED(0.747665, 0.0787201, -0.431656),
};

XPDATA xpdata_die_effect[] = {
   {
       point_die_effect, sizeof(point_die_effect)/sizeof(POINT),
       polygon_die_effect, sizeof(polygon_die_effect)/sizeof(POLYGON),
       attribute_die_effect,
       normal_die_effect
  }
};

POINT point_spin_effect[] = {
       POStoFIXED(-26.1138, 13.3647, 7.21643),
       POStoFIXED(-6.80725, 22.014, 26.2234),
       POStoFIXED(19.3065, 25.7524, 19.007),
       POStoFIXED(26.8147, 21.0085, -7.41013),
       POStoFIXED(6.80725, -5.02414, -26.2234),
       POStoFIXED(-19.3065, 0.235474, -19.007),
       POStoFIXED(-32.2809, 4.38773, 8.92072),
       POStoFIXED(-8.41489, 12.6145, 32.4165),
       POStoFIXED(23.866, 19.6377, 23.4958),
       POStoFIXED(28.3416, 17.8205, -7.83209),
       POStoFIXED(8.41489, -10.8112, -32.4165),
       POStoFIXED(-23.866, -9.94058, -23.4958),
       POStoFIXED(26.0427, 2.57756, -8.08589),
       POStoFIXED(27.6503, -0.518524, -14.279),
};

POLYGON polygon_spin_effect[] = {
       NORMAL(0.127686, 0.829086, -0.544327), VERTICES(13, 12, 4, 10),
       NORMAL(0.116989, 0.583252, 0.803802), VERTICES(2, 8, 7, 1),
       NORMAL(-0.149841, 0.595779, -0.789032), VERTICES(5, 11, 10, 4),
       NORMAL(0.840759, 0.528717, 0.116425), VERTICES(3, 9, 8, 2),
       NORMAL(-0.696289, 0.514938, 0.499985), VERTICES(1, 7, 6, 0),
       NORMAL(-0.759171, 0.49025, -0.428101), VERTICES(0, 6, 11, 5),
};

ATTR attribute_spin_effect[] = {
    ATTRIBUTE(Dual_Plane, SORT_CEN, 7, LUTidx(7), GRreal(86),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, 7, LUTidx(7), GRreal(87),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, 7, LUTidx(7), GRreal(88),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, 7, LUTidx(7), GRreal(89),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, 7, LUTidx(7), GRreal(90),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
    ATTRIBUTE(Dual_Plane, SORT_CEN, 7, LUTidx(7), GRreal(91),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_spin_effect[] = {
       POStoFIXED(-0.727722, 0.502594, 0.0359344),
       POStoFIXED(-0.289642, 0.549088, 0.651886),
       POStoFIXED(0.478867, 0.555984, 0.460114),
       POStoFIXED(0.840759, 0.528717, 0.116425),
       POStoFIXED(-0.0110779, 0.712433, -0.666672),
       POStoFIXED(-0.454498, 0.543015, -0.608566),
       POStoFIXED(-0.727722, 0.502594, 0.0359344),
       POStoFIXED(-0.289642, 0.549088, 0.651886),
       POStoFIXED(0.478867, 0.555984, 0.460114),
       POStoFIXED(0.840759, 0.528717, 0.116425),
       POStoFIXED(-0.0110779, 0.712433, -0.666672),
       POStoFIXED(-0.454498, 0.543015, -0.608566),
       POStoFIXED(0.127686, 0.829086, -0.544327),
       POStoFIXED(0.127686, 0.829086, -0.544327),
};

XPDATA xpdata_spin_effect[] = {
   {
       point_spin_effect, sizeof(point_spin_effect)/sizeof(POINT),
       polygon_spin_effect, sizeof(polygon_spin_effect)/sizeof(POLYGON),
       attribute_spin_effect,
       normal_spin_effect
  }
};

POINT point_ham_head[] = {
       POStoFIXED(-7.46631, -8.02452, -10.9777),
       POStoFIXED(-8.27385, -14.5172, -11.2482),
       POStoFIXED(-6.80769, -16.5532, -9.22208),
       POStoFIXED(-4.72108, -8.13887, -12.5631),
       POStoFIXED(-4.9371, -10.8938, -13.3978),
       POStoFIXED(-4.68372, -14.4728, -12.6343),
       POStoFIXED(-4.06244, -16.6676, -10.8075),
       POStoFIXED(-1.98753, -7.61452, -11.0413),
       POStoFIXED(-0.0873566, -10.3207, -11.4787),
       POStoFIXED(0.164215, -13.5784, -10.8081),
       POStoFIXED(-1.3289, -16.1432, -9.28572),
       POStoFIXED(-3.9964, -17.0356, -7.49304),
       POStoFIXED(-7.47801, -7.38582, -7.87041),
       POStoFIXED(-8.97115, -9.95067, -6.34804),
       POStoFIXED(-8.71956, -13.2083, -5.67746),
       POStoFIXED(-6.81938, -15.9145, -6.11482),
       POStoFIXED(-8.52722, -10.9382, -12.0117),
       POStoFIXED(-0.0449219, -17.2198, -8.68584),
       POStoFIXED(0.0689697, -8.36259, -12.5999),
       POStoFIXED(-0.0115814, -3.80879, -13.0487),
       POStoFIXED(-4.1418, -18.4938, -5.9892),
       POStoFIXED(-7.01085, -8.36259, -10.8471),
       POStoFIXED(-5.53183, -3.57941, -10.5277),
       POStoFIXED(-6.70309, -23.1927, 3.76982),
       POStoFIXED(-13.2806, -5.83786, -1.82864),
       POStoFIXED(-9.40538, 3.51761, -1.82864),
       POStoFIXED(-1.9317, -19.5202, 2.95842),
       POStoFIXED(-9.40538, -8.33708, 7.99545),
       POStoFIXED(-6.66522, 1.0184, 5.25528),
       POStoFIXED(-0.049881, 1.98328, -8.27795),
       POStoFIXED(-0.0498962, -17.6926, 6.26962),
       POStoFIXED(-0.049881, -8.33708, 10.5646),
       POStoFIXED(-0.049881, 1.0184, 7.99544),
       POStoFIXED(-0.0498962, -20.2188, -1.36006),
       POStoFIXED(1.83189, -19.5202, 2.9584),
       POStoFIXED(9.3056, -8.3371, 7.99544),
       POStoFIXED(6.56544, 1.01839, 5.25528),
       POStoFIXED(6.0755, -23.1927, 3.76981),
       POStoFIXED(13.1799, -5.83823, -1.82924),
       POStoFIXED(9.3056, 3.51759, -1.82866),
       POStoFIXED(4.06157, -18.4963, -6.61438),
       POStoFIXED(7.14879, -8.36261, -10.8471),
       POStoFIXED(6.31573, -3.70476, -10.5358),
       POStoFIXED(-5.51483, -15.7945, -8.47047),
       POStoFIXED(-9.66516, -14.4722, -1.19215),
       POStoFIXED(-4.32198, -15.4254, 5.91933),
       POStoFIXED(-0.0498962, -15.4254, 8.31918),
       POStoFIXED(4.22217, -15.4254, 5.91933),
       POStoFIXED(9.56422, -14.4699, -1.19798),
       POStoFIXED(4.97481, -15.7971, -9.08546),
       POStoFIXED(-0.00610352, -13.4621, -12.0136),
       POStoFIXED(3.74963, -5.53699, -11.3513),
       POStoFIXED(3.74557, -10.0317, -11.351),
       POStoFIXED(1.29625, -6.72537, -14.5873),
       POStoFIXED(2.20549, -8.96776, -14.5186),
       POStoFIXED(-3.73941, -5.77351, -11.8528),
       POStoFIXED(-3.73528, -10.0328, -11.3506),
       POStoFIXED(-1.29419, -6.70598, -14.6085),
       POStoFIXED(-2.19833, -8.95982, -14.5335),
       POStoFIXED(-0.271912, 2.0143, -12.153),
       POStoFIXED(-0.674088, -4.00539, -12.1481),
       POStoFIXED(-2.817, 2.0143, -10.985),
       POStoFIXED(-2.27815, -3.83597, -11.4311),
       POStoFIXED(2.87244, 2.0143, -11.0995),
       POStoFIXED(2.29607, -3.85651, -11.4963),
       POStoFIXED(0.236969, 2.0143, -12.046),
       POStoFIXED(0.644043, -4.01114, -12.0727),
       POStoFIXED(3.98923, -8.12715, -12.446),
       POStoFIXED(3.99246, -14.6147, -13.3357),
       POStoFIXED(3.35056, -16.7101, -10.9697),
       POStoFIXED(6.91335, -8.13319, -11.2162),
       POStoFIXED(7.56433, -10.8541, -11.9273),
       POStoFIXED(7.26111, -14.4573, -11.31),
       POStoFIXED(6.27467, -16.7162, -9.73987),
       POStoFIXED(7.32944, -7.63019, -8.11183),
       POStoFIXED(8.93927, -10.2862, -6.89552),
       POStoFIXED(8.69534, -13.5646, -6.33163),
       POStoFIXED(6.69077, -16.2132, -6.63551),
       POStoFIXED(3.69125, -17.2202, -7.69112),
       POStoFIXED(1.48119, -7.6181, -10.5715),
       POStoFIXED(-0.523361, -10.2666, -10.8754),
       POStoFIXED(-0.767319, -13.5451, -10.3115),
       POStoFIXED(0.842514, -16.2011, -9.09523),
       POStoFIXED(4.29568, -11.0115, -13.953),
};

POLYGON polygon_ham_head[] = {
       NORMAL(-0.328156, 0.0319366, -0.944077), VERTICES(22, 21, 18, 19),
       NORMAL(-0.338547, 0.625946, -0.70253), VERTICES(29, 25, 22, 19),
       NORMAL(-0.753586, 0.291611, -0.589111), VERTICES(25, 24, 21, 22),
       NORMAL(-0.8284, 0.356659, 0.431885), VERTICES(28, 27, 24, 25),
       NORMAL(0.828445, 0.356613, 0.431839), VERTICES(39, 38, 35, 36),
       NORMAL(0.801987, 0.251114, -0.541962), VERTICES(42, 41, 38, 39),
       NORMAL(0.305191, 0.0146942, -0.952164), VERTICES(19, 18, 41, 42),
       NORMAL(0.321182, 0.640549, -0.69751), VERTICES(29, 19, 42, 39),
       NORMAL(0.0860443, -0.906296, -0.413788), VERTICES(23, 23, 33, 20),
       NORMAL(0.60434, -0.70192, 0.376892), VERTICES(26, 26, 33, 23),
       NORMAL(-0.399353, -0.167908, 0.901276), VERTICES(45, 26, 23, 44),
       NORMAL(-0.309311, 0.30043, 0.902252), VERTICES(32, 31, 27, 28),
       NORMAL(-0.427673, -0.636475, 0.641846), VERTICES(46, 30, 26, 45),
       NORMAL(0.309311, 0.30043, 0.902237), VERTICES(36, 35, 31, 32),
       NORMAL(0.427673, -0.636475, 0.641846), VERTICES(47, 34, 30, 46),
       NORMAL(-0.644501, -0.659134, 0.387466), VERTICES(37, 37, 33, 34),
       NORMAL(0.395279, -0.181992, 0.900345), VERTICES(48, 37, 34, 47),
       NORMAL(-0.116379, -0.913239, -0.390442), VERTICES(40, 40, 33, 37),
       NORMAL(-0.0298767, -0.920258, -0.390121), VERTICES(20, 33, 40, 17),
       NORMAL(0, -0.94725, 0.32045), VERTICES(34, 33, 26, 30),
       NORMAL(-0.208511, -0.679047, -0.703842), VERTICES(17, 50, 43, 20),
       NORMAL(0.824997, -0.361038, -0.434738), VERTICES(41, 49, 48, 38),
       NORMAL(0.803864, -0.476074, 0.356552), VERTICES(38, 48, 47, 35),
       NORMAL(0.350281, -0.380798, 0.855728), VERTICES(35, 47, 46, 31),
       NORMAL(-0.350281, -0.380798, 0.855728), VERTICES(31, 46, 45, 27),
       NORMAL(-0.803818, -0.475876, 0.356903), VERTICES(27, 45, 44, 24),
       NORMAL(-0.827606, -0.344391, -0.443222), VERTICES(24, 44, 43, 21),
       NORMAL(0.133713, -0.674545, -0.726013), VERTICES(49, 50, 17, 40),
       NORMAL(0.844528, 0.15831, -0.511551), VERTICES(53, 54, 52, 51),
       NORMAL(0.00561523, -0.0319061, -0.999466), VERTICES(57, 58, 54, 53),
       NORMAL(-0.831787, 0.120026, -0.541946), VERTICES(55, 56, 58, 57),
       NORMAL(-0.000244141, -0.947769, -0.318909), VERTICES(56, 52, 54, 58),
       NORMAL(-0.715942, -0.633621, -0.293137), VERTICES(44, 44, 20, 43),
       NORMAL(-0.745789, -0.502304, -0.437592), VERTICES(44, 44, 23, 20),
       NORMAL(0.750244, -0.566254, -0.341263), VERTICES(40, 40, 48, 49),
       NORMAL(0.760818, -0.523056, -0.384109), VERTICES(48, 48, 40, 37),
       NORMAL(-0.397858, 0.362839, -0.842636), VERTICES(4, 3, 0, 16),
       NORMAL(-0.103394, -0.988785, -0.107712), VERTICES(6, 6, 2, 11),
       NORMAL(-0.308701, -0.716568, -0.625458), VERTICES(6, 5, 1, 2),
       NORMAL(0.43187, -0.566269, -0.701996), VERTICES(10, 9, 5, 6),
       NORMAL(0.366989, 0.311508, -0.876495), VERTICES(8, 7, 3, 4),
       NORMAL(0.246872, -0.96257, -0.111786), VERTICES(10, 10, 6, 11),
       NORMAL(0.376831, -0.163193, -0.911774), VERTICES(9, 8, 4, 5),
       NORMAL(-0.82695, -0.555359, 0.0878448), VERTICES(2, 1, 14, 15),
       NORMAL(-0.904984, 0.409592, -0.114929), VERTICES(16, 0, 12, 13),
       NORMAL(-0.279648, -0.940643, 0.192291), VERTICES(2, 2, 15, 11),
       NORMAL(-0.994385, -0.0863953, -0.0610657), VERTICES(1, 16, 13, 14),
       NORMAL(-0.411102, 0.0291748, -0.911118), VERTICES(61, 62, 60, 59),
       NORMAL(0.332367, 0.0288544, -0.942703), VERTICES(65, 66, 64, 63),
       NORMAL(0.415344, 0.391266, -0.821198), VERTICES(71, 70, 67, 83),
       NORMAL(0.0652618, -0.984955, -0.160004), VERTICES(73, 73, 69, 78),
       NORMAL(0.34201, -0.694702, -0.632767), VERTICES(73, 72, 68, 69),
       NORMAL(0.843597, -0.529907, -0.0866699), VERTICES(77, 76, 72, 73),
       NORMAL(0.906158, 0.35321, -0.232574), VERTICES(75, 74, 70, 71),
       NORMAL(0.278809, -0.953171, 0.117065), VERTICES(77, 77, 73, 78),
       NORMAL(0.960312, -0.119385, -0.25206), VERTICES(76, 75, 71, 72),
       NORMAL(-0.545547, -0.571243, -0.613235), VERTICES(69, 68, 81, 82),
       NORMAL(-0.472092, 0.399979, -0.785583), VERTICES(83, 67, 79, 80),
       NORMAL(-0.282013, -0.952026, -0.11879), VERTICES(69, 69, 82, 78),
       NORMAL(-0.547897, -0.0991364, -0.830643), VERTICES(68, 83, 80, 81),
       NORMAL(-0.34906, -0.21907, -0.911118), VERTICES(5, 4, 16, 1),
       NORMAL(0.524002, -0.186478, -0.831039), VERTICES(72, 71, 83, 68),
};

ATTR attribute_ham_head[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(547),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(548),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(549),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(550),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(551),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(552),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(553),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(554),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(555),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(556),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(557),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(558),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(559),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(560),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(561),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(562),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(563),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(564),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(565),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(566),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(567),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(568),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(569),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(570),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(571),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(572),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(573),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(574),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(575),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(576),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(577),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(578),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(579),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(580),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(581),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(582),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(583),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(584),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(585),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(586),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(587),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(588),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(589),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(590),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(591),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(592),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(593),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(594),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(595),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(596),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(597),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(598),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(599),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(600),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(601),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(602),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(603),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(604),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(605),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(606),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 3, LUTidx(3), GRreal(607),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 3, LUTidx(3), GRreal(608),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_ham_head[] = {
       POStoFIXED(-0.651413, 0.386215, -0.478775),
       POStoFIXED(-0.619766, -0.394348, -0.377441),
       POStoFIXED(-0.359665, -0.8284, -0.0521393),
       POStoFIXED(-0.0154266, 0.337173, -0.859558),
       POStoFIXED(-0.000762939, 0.0730133, -0.885498),
       POStoFIXED(0.037735, -0.416275, -0.787582),
       POStoFIXED(0.0326385, -0.844589, -0.330933),
       POStoFIXED(0.366989, 0.311508, -0.876495),
       POStoFIXED(0.371902, 0.0741577, -0.894135),
       POStoFIXED(0.404343, -0.364731, -0.806885),
       POStoFIXED(0.308533, -0.83046, -0.308517),
       POStoFIXED(-0.0453796, -0.963989, -0.00906372),
       POStoFIXED(-0.904984, 0.409592, -0.114929),
       POStoFIXED(-0.949677, 0.161591, -0.0879974),
       POStoFIXED(-0.91066, -0.320877, 0.013382),
       POStoFIXED(-0.553299, -0.748001, 0.14006),
       POStoFIXED(-0.66156, 0.11673, -0.482437),
       POStoFIXED(-0.0348816, -0.75795, -0.606659),
       POStoFIXED(-0.0114746, 0.0233154, -0.94812),
       POStoFIXED(-0.0100708, 0.328278, -0.824066),
       POStoFIXED(-0.322815, -0.728302, -0.447693),
       POStoFIXED(-0.636444, -0.00694275, -0.658798),
       POStoFIXED(-0.473419, 0.316498, -0.745239),
       POStoFIXED(-0.0737305, -0.636932, 0.00259399),
       POStoFIXED(-0.803345, -0.0429993, -0.0608826),
       POStoFIXED(-0.640167, 0.424728, -0.286575),
       POStoFIXED(0.0763245, -0.631088, 0.523468),
       POStoFIXED(-0.572952, -0.0498962, 0.636688),
       POStoFIXED(-0.568848, 0.328537, 0.667068),
       POStoFIXED(-0.00868225, 0.63324, -0.700012),
       POStoFIXED(0, -0.740067, 0.534714),
       POStoFIXED(0, -0.0401764, 0.878983),
       POStoFIXED(0, 0.30043, 0.902237),
       POStoFIXED(-0.0167236, -0.841339, -0.0182495),
       POStoFIXED(0.0446014, -0.606201, 0.562515),
       POStoFIXED(0.572968, -0.0499573, 0.636581),
       POStoFIXED(0.568878, 0.328522, 0.667038),
       POStoFIXED(-0.0498505, -0.587311, 0.180145),
       POStoFIXED(0.814819, -0.0573425, -0.0470734),
       POStoFIXED(0.650528, 0.416092, -0.269211),
       POStoFIXED(0.304626, -0.72525, -0.42337),
       POStoFIXED(0.644058, -0.0317383, -0.642944),
       POStoFIXED(0.47612, 0.302109, -0.730545),
       POStoFIXED(-0.584015, -0.552353, -0.480057),
       POStoFIXED(-0.707748, -0.465714, -0.0923462),
       POStoFIXED(-0.49527, -0.415253, 0.688934),
       POStoFIXED(0, -0.508636, 0.748779),
       POStoFIXED(0.494263, -0.418823, 0.688614),
       POStoFIXED(0.716003, -0.438568, -0.0478821),
       POStoFIXED(0.569641, -0.533936, -0.500671),
       POStoFIXED(-0.0373993, -0.676788, -0.71492),
       POStoFIXED(0.844528, 0.15831, -0.511551),
       POStoFIXED(0.422134, -0.39473, -0.415222),
       POStoFIXED(0.425064, 0.0632019, -0.755508),
       POStoFIXED(0.283295, -0.273788, -0.60997),
       POStoFIXED(-0.831787, 0.120026, -0.541946),
       POStoFIXED(-0.416016, -0.413864, -0.43042),
       POStoFIXED(-0.413086, 0.0440521, -0.770706),
       POStoFIXED(-0.275467, -0.286545, -0.620102),
       POStoFIXED(-0.411102, 0.0291748, -0.911118),
       POStoFIXED(-0.411102, 0.0291748, -0.911118),
       POStoFIXED(-0.411102, 0.0291748, -0.911118),
       POStoFIXED(-0.411102, 0.0291748, -0.911118),
       POStoFIXED(0.332367, 0.0288544, -0.942703),
       POStoFIXED(0.332367, 0.0288544, -0.942703),
       POStoFIXED(0.332367, 0.0288544, -0.942703),
       POStoFIXED(0.332367, 0.0288544, -0.942703),
       POStoFIXED(-0.0283661, 0.395615, -0.803391),
       POStoFIXED(-0.0568542, -0.387878, -0.726913),
       POStoFIXED(-0.140457, -0.830978, -0.328705),
       POStoFIXED(0.660751, 0.372238, -0.526886),
       POStoFIXED(0.701447, 0.10965, -0.53421),
       POStoFIXED(0.66748, -0.382614, -0.450623),
       POStoFIXED(0.318985, -0.829529, -0.184464),
       POStoFIXED(0.906158, 0.35321, -0.232574),
       POStoFIXED(0.933228, 0.116913, -0.24231),
       POStoFIXED(0.901947, -0.324646, -0.169357),
       POStoFIXED(0.467072, -0.812073, 0.0491486),
       POStoFIXED(0.0206757, -0.963379, -0.0539093),
       POStoFIXED(-0.472092, 0.399979, -0.785583),
       POStoFIXED(-0.509995, 0.150421, -0.808105),
       POStoFIXED(-0.546722, -0.33519, -0.721939),
       POStoFIXED(-0.413773, -0.761627, -0.366013),
       POStoFIXED(-0.0201569, 0.126404, -0.817108),
};

XPDATA xpdata_ham_head[] = {
   {
       point_ham_head, sizeof(point_ham_head)/sizeof(POINT),
       polygon_ham_head, sizeof(polygon_ham_head)/sizeof(POLYGON),
       attribute_ham_head,
       normal_ham_head
  }
};

//MESH NO.0 : HAM_BODY_Sphere.004
POINT point_ham_body[] = {
       POStoFIXED(5.66711, 14.3441, 4.33246),
       POStoFIXED(6.3311, 1.03513, 5.27246),
       POStoFIXED(7.93927, 6.4487, 5.82806),
       POStoFIXED(-0.06073, 9.34911, -7.71196),
       POStoFIXED(-0.06073, 0.928833, -4.88647),
       POStoFIXED(8.97868, 3.44989, -1.57214),
       POStoFIXED(8.95625, 9.47102, -2.73862),
       POStoFIXED(7.08463, 12.8245, 5.31934),
       POStoFIXED(4.58321, 14.8494, -1.60466),
       POStoFIXED(-0.0607147, 15.4151, -4.25056),
       POStoFIXED(-5.66708, 14.3441, 4.33246),
       POStoFIXED(-6.3311, 1.03514, 5.27246),
       POStoFIXED(-7.93925, 6.44872, 5.82808),
       POStoFIXED(0.0607452, 6.44872, 9.14177),
       POStoFIXED(0.06073, 1.03513, 7.92004),
       POStoFIXED(-8.97868, 3.44991, -1.57214),
       POStoFIXED(-8.95624, 9.47104, -2.7386),
       POStoFIXED(-7.08459, 12.8245, 5.31934),
       POStoFIXED(-4.58319, 14.8494, -1.60464),
       POStoFIXED(0.0607452, 12.5326, 13.0037),
};

POLYGON polygon_ham_body[] = {
       NORMAL(0.432693, -0.228836, -0.872009), VERTICES(6, 3, 4, 5),
       NORMAL(0.449219, 0.477783, -0.754913), VERTICES(8, 9, 3, 6),
       NORMAL(-0.437439, -0.228241, -0.869781), VERTICES(16, 15, 4, 3),
       NORMAL(-0.455917, 0.478668, -0.75032), VERTICES(18, 16, 3, 9),
       NORMAL(0.380127, -0.204529, 0.902023), VERTICES(14, 13, 2, 1),
       NORMAL(0.754883, 0.65065, -0.082428), VERTICES(0, 0, 8, 7),
       NORMAL(0.972321, -0.122879, 0.198669), VERTICES(2, 6, 5, 1),
       NORMAL(0.92186, 0.387192, 0.0153198), VERTICES(7, 8, 6, 2),
       NORMAL(0.572281, -0.166031, 0.80307), VERTICES(7, 2, 13, 19),
       NORMAL(-0.754883, 0.65065, -0.082428), VERTICES(18, 18, 10, 17),
       NORMAL(-0.972321, -0.122879, 0.198669), VERTICES(15, 16, 12, 11),
       NORMAL(-0.374619, -0.204102, 0.904419), VERTICES(11, 12, 13, 14),
       NORMAL(-0.92186, 0.387192, 0.0153198), VERTICES(16, 18, 17, 12),
       NORMAL(-0.566483, -0.167282, 0.8069), VERTICES(12, 17, 19, 13),
};

ATTR attribute_ham_body[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(609),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(610),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(611),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(612),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(613),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(614),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(615),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(616),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(617),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(618),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(619),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(620),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(621),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(622),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_ham_body[] = {
       POStoFIXED(0.754883, 0.65065, -0.082428),
       POStoFIXED(0.676224, -0.163696, 0.550339),
       POStoFIXED(0.711639, -0.0265503, 0.479767),
       POStoFIXED(-0.00285339, 0.124832, -0.811752),
       POStoFIXED(-0.00236511, -0.228531, -0.870895),
       POStoFIXED(0.702499, -0.175858, -0.33667),
       POStoFIXED(0.694016, 0.128311, -0.353226),
       POStoFIXED(0.749664, 0.290604, 0.245316),
       POStoFIXED(0.708649, 0.505203, -0.274002),
       POStoFIXED(-0.00334167, 0.478226, -0.752609),
       POStoFIXED(-0.754883, 0.65065, -0.082428),
       POStoFIXED(-0.673462, -0.163483, 0.551544),
       POStoFIXED(-0.708817, -0.0267639, 0.481323),
       POStoFIXED(0.00282288, -0.185486, 0.854095),
       POStoFIXED(0.00274658, -0.204315, 0.903214),
       POStoFIXED(-0.70488, -0.175552, -0.335556),
       POStoFIXED(-0.696884, 0.128677, -0.351517),
       POStoFIXED(-0.747742, 0.290176, 0.246597),
       POStoFIXED(-0.721878, 0.541779, -0.22496),
       POStoFIXED(0.00289917, -0.166656, 0.804977),
};

XPDATA xpdata_ham_body[] = {
   {
       point_ham_body, sizeof(point_ham_body)/sizeof(POINT),
       polygon_ham_body, sizeof(polygon_ham_body)/sizeof(POLYGON),
       attribute_ham_body,
       normal_ham_body
  }
};

//MESH NO.1 : HAM_RARM_Sphere
POINT point_ham_rarm[] = {
       POStoFIXED(-9.26961, 3.40894, -1.87411),
       POStoFIXED(-11.7834, 7.12915, -4.85063),
       POStoFIXED(-10.6921, 5.30606, 1.69835),
       POStoFIXED(-13.2059, 9.02626, -1.27815),
       POStoFIXED(-12.3413, 9.61018, -3.44214),
       POStoFIXED(-7.84712, 6.47813, 0.760559),
       POStoFIXED(-10.3609, 10.1983, -2.21594),
};

POLYGON polygon_ham_rarm[] = {
       NORMAL(-0.819855, -0.572098, -0.0226288), VERTICES(3, 2, 0, 1),
       NORMAL(0, 0.624725, 0.780823), VERTICES(6, 5, 2, 3),
       NORMAL(0.819855, 0.103424, -0.563141), VERTICES(1, 0, 5, 6),
       NORMAL(0.466644, -0.690598, 0.552536), VERTICES(2, 2, 5, 0),
       NORMAL(-0.928757, 0.00157166, -0.370651), VERTICES(3, 3, 1, 4),
       NORMAL(-0.346451, 0.931244, 0.112854), VERTICES(6, 6, 3, 4),
       NORMAL(0.332077, 0.521042, -0.78627), VERTICES(1, 1, 6, 4),
};

ATTR attribute_ham_rarm[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(623),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(624),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(625),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(626),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(627),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(628),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(629),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_ham_rarm[] = {
       POStoFIXED(0.155548, -0.386414, -0.0110779),
       POStoFIXED(-0.0529175, 0.11499, -0.505783),
       POStoFIXED(0.0283508, -0.332138, 0.465805),
       POStoFIXED(-0.604752, 0.197403, 0.0259399),
       POStoFIXED(-0.314377, 0.484619, -0.348022),
       POStoFIXED(0.428833, 0.0125122, 0.256729),
       POStoFIXED(0.0917969, 0.62233, -0.068573),
};

XPDATA xpdata_ham_rarm[] = {
   {
       point_ham_rarm, sizeof(point_ham_rarm)/sizeof(POINT),
       polygon_ham_rarm, sizeof(polygon_ham_rarm)/sizeof(POLYGON),
       attribute_ham_rarm,
       normal_ham_rarm
  }
};

//MESH NO.2 : HAM_LARM_Sphere.002
POINT point_ham_larm[] = {
       POStoFIXED(9.07593, 3.40892, -1.87413),
       POStoFIXED(11.5897, 7.12914, -4.85066),
       POStoFIXED(10.4984, 5.30605, 1.69833),
       POStoFIXED(13.0122, 9.02625, -1.27818),
       POStoFIXED(12.1476, 9.61017, -3.44215),
       POStoFIXED(7.65344, 6.47812, 0.760559),
       POStoFIXED(10.1673, 10.1983, -2.21596),
};

POLYGON polygon_ham_larm[] = {
       NORMAL(0.819855, -0.572098, -0.0226288), VERTICES(0, 2, 3, 1),
       NORMAL(0, 0.624725, 0.780823), VERTICES(2, 5, 6, 3),
       NORMAL(-0.819855, 0.103424, -0.563126), VERTICES(5, 0, 1, 6),
       NORMAL(-0.466644, -0.690598, 0.552536), VERTICES(5, 5, 2, 0),
       NORMAL(0.928757, 0.00158691, -0.370651), VERTICES(1, 1, 3, 4),
       NORMAL(0.346451, 0.931244, 0.112854), VERTICES(3, 3, 6, 4),
       NORMAL(-0.332077, 0.521042, -0.78627), VERTICES(6, 6, 1, 4),
};

ATTR attribute_ham_larm[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(630),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(631),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(632),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(633),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(634),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(635),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(636),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_ham_larm[] = {
       POStoFIXED(-0.155548, -0.386414, -0.0110626),
       POStoFIXED(0.305084, 0.0111084, -0.422653),
       POStoFIXED(0.117737, -0.212646, 0.436905),
       POStoFIXED(0.488297, 0.383331, 0.12265),
       POStoFIXED(0.314377, 0.484619, -0.348022),
       POStoFIXED(-0.438278, -0.163254, 0.330688),
       POStoFIXED(-0.227509, 0.540283, -0.248398),
};

XPDATA xpdata_ham_larm[] = {
   {
       point_ham_larm, sizeof(point_ham_larm)/sizeof(POINT),
       polygon_ham_larm, sizeof(polygon_ham_larm)/sizeof(POLYGON),
       attribute_ham_larm,
       normal_ham_larm
  }
};

//MESH NO.3 : HAM_RLEG_Sphere.003
POINT point_ham_rleg[] = {
       POStoFIXED(-10.1864, 8.69714, -3.94339),
       POStoFIXED(-6.76511, 16.8012, -0.682755),
       POStoFIXED(-4.34154, 9.0146, 4.70177),
       POStoFIXED(-4.79997, 17.118, 2.45689),
       POStoFIXED(-8.69923, 18.2586, -0.479813),
       POStoFIXED(-11.9902, 10.8218, 2.77736),
       POStoFIXED(-9.99646, 18.1566, 3.05321),
       POStoFIXED(-7.71626, 12.8147, -2.4406),
       POStoFIXED(-4.9319, 13.1362, 2.92201),
       POStoFIXED(-8.71851, 13.907, 2.27644),
};

POLYGON polygon_ham_rleg[] = {
       NORMAL(0.844742, -0.209, -0.492661), VERTICES(0, 2, 8, 7),
       NORMAL(-0.12204, 0.338425, 0.933029), VERTICES(2, 5, 9, 8),
       NORMAL(-0.711456, 0.61554, -0.338989), VERTICES(5, 0, 7, 9),
       NORMAL(-0.878326, 0.107361, -0.46582), VERTICES(9, 7, 1, 6),
       NORMAL(-0.0348206, -0.0414124, 0.99852), VERTICES(8, 9, 6, 3),
       NORMAL(0.868881, -0.0368958, -0.493622), VERTICES(7, 8, 3, 1),
       NORMAL(-0.276627, -0.93512, 0.221359), VERTICES(5, 5, 2, 0),
       NORMAL(-0.59993, -0.762466, -0.242279), VERTICES(6, 6, 1, 4),
};

ATTR attribute_ham_rleg[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(637),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(638),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(639),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(640),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(641),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(642),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(643),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(644),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_ham_rleg[] = {
       POStoFIXED(-0.0477753, -0.176193, -0.20343),
       POStoFIXED(-0.203125, -0.230667, -0.400574),
       POStoFIXED(0.148682, -0.268555, 0.220566),
       POStoFIXED(0.417023, -0.0391541, 0.252441),
       POStoFIXED(-0.59993, -0.762466, -0.242279),
       POStoFIXED(-0.34668, -0.229065, 0.259186),
       POStoFIXED(-0.528244, -0.364746, 0.0120239),
       POStoFIXED(0.0309601, 0.119247, -0.447769),
       POStoFIXED(0.389191, 0.0127716, 0.236313),
       POStoFIXED(-0.436661, 0.254974, 0.281677),
};

XPDATA xpdata_ham_rleg[] = {
   {
       point_ham_rleg, sizeof(point_ham_rleg)/sizeof(POINT),
       polygon_ham_rleg, sizeof(polygon_ham_rleg)/sizeof(POLYGON),
       attribute_ham_rleg,
       normal_ham_rleg
  }
};

//MESH NO.4 : HAM_LLEG_Sphere.005
POINT point_ham_lleg[] = {
       POStoFIXED(10.2982, 8.69716, -3.37218),
       POStoFIXED(6.7005, 16.8013, -0.307266),
       POStoFIXED(3.98067, 9.01462, 4.93384),
       POStoFIXED(4.56346, 17.118, 2.71799),
       POStoFIXED(8.62032, 18.2586, 0.00311279),
       POStoFIXED(11.7247, 10.8218, 3.43861),
       POStoFIXED(9.71864, 18.1566, 3.60295),
       POStoFIXED(7.74814, 12.8147, -2.00938),
       POStoFIXED(4.66927, 13.1363, 3.18973),
       POStoFIXED(8.48598, 13.907, 2.75616),
};

POLYGON polygon_ham_lleg[] = {
       NORMAL(-0.815964, -0.209, -0.538971), VERTICES(8, 2, 0, 7),
       NORMAL(0.0698547, 0.338425, 0.938385), VERTICES(9, 5, 2, 8),
       NORMAL(0.729233, 0.61554, -0.298828), VERTICES(7, 0, 5, 9),
       NORMAL(0.26387, -0.93512, 0.236435), VERTICES(2, 2, 5, 0),
       NORMAL(0.902924, 0.107361, -0.416153), VERTICES(1, 7, 9, 6),
       NORMAL(-0.0208588, -0.0414124, 0.998917), VERTICES(6, 9, 8, 3),
       NORMAL(-0.840027, -0.0368958, -0.541275), VERTICES(3, 8, 7, 1),
       NORMAL(0.612488, -0.762482, -0.208466), VERTICES(1, 1, 6, 4),
};

ATTR attribute_ham_lleg[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(645),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(646),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(647),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(648),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(649),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(650),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 0, LUTidx(0), GRreal(651),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 1, LUTidx(1), GRreal(652),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_ham_lleg[] = {
       POStoFIXED(0.0590363, -0.176193, -0.200455),
       POStoFIXED(0.32196, -0.363617, -0.343582),
       POStoFIXED(-0.0545807, -0.435196, 0.218063),
       POStoFIXED(-0.430435, -0.0391541, 0.228821),
       POStoFIXED(0.612488, -0.762482, -0.208466),
       POStoFIXED(0.354309, 0.00627136, 0.291992),
       POStoFIXED(0.498184, -0.232178, 0.124756),
       POStoFIXED(-0.00595093, 0.119247, -0.448807),
       POStoFIXED(-0.401749, 0.0127716, 0.214264),
       POStoFIXED(0.420288, 0.254974, 0.305573),
};

XPDATA xpdata_ham_lleg[] = {
   {
       point_ham_lleg, sizeof(point_ham_lleg)/sizeof(POINT),
       polygon_ham_lleg, sizeof(polygon_ham_lleg)/sizeof(POLYGON),
       attribute_ham_lleg,
       normal_ham_lleg
  }
};


POINT point_ham_rwing[] = {
       POStoFIXED(-42.2947, 2.25458, 12.2372),
       POStoFIXED(-6.19234, 1.64513, 1.57445),
       POStoFIXED(-42.4453, 1.15567, 6.7979),
       POStoFIXED(-7.0332, -2.35555, -9.09428),
       POStoFIXED(-31.9507, -3.58501, 13.1958),
       POStoFIXED(-17.3983, -0.202103, 13.0425),
       POStoFIXED(-19.4341, -5.60678, -9.4173),
       POStoFIXED(-31.5479, -5.47296, -4.56841),
};

POLYGON polygon_ham_rwing[] = {
       NORMAL(-0.315353, 0.914536, -0.253281), VERTICES(6, 3, 1, 5),
       NORMAL(0.450943, 0.882019, -0.136597), VERTICES(2, 7, 4, 0),
       NORMAL(-0.141037, 0.97644, -0.163254), VERTICES(7, 6, 5, 4),
};

ATTR attribute_ham_rwing[] = {
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(620),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(621),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(622),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_ham_rwing[] = {
       POStoFIXED(0.450943, 0.882019, -0.136597),
       POStoFIXED(-0.315353, 0.914536, -0.253281),
       POStoFIXED(0.450943, 0.882019, -0.136597),
       POStoFIXED(-0.315353, 0.914536, -0.253281),
       POStoFIXED(0.154953, 0.92923, -0.149918),
       POStoFIXED(-0.228195, 0.94548, -0.208267),
       POStoFIXED(-0.228195, 0.94548, -0.208267),
       POStoFIXED(0.154953, 0.92923, -0.149918),
};

XPDATA xpdata_ham_rwing[] = {
   {
       point_ham_rwing, sizeof(point_ham_rwing)/sizeof(POINT),
       polygon_ham_rwing, sizeof(polygon_ham_rwing)/sizeof(POLYGON),
       attribute_ham_rwing,
       normal_ham_rwing
  }
};

//MESH NO.3 : ham_Lwing_Plane.002
POINT point_ham_lwing[] = {
       POStoFIXED(42.2448, 2.25459, 12.0547),
       POStoFIXED(6.09676, 1.64513, 1.54793),
       POStoFIXED(42.3719, 1.15569, 6.61485),
       POStoFIXED(6.89157, -2.35555, -9.12433),
       POStoFIXED(31.905, -3.58499, 13.058),
       POStoFIXED(17.3521, -0.202087, 12.9675),
       POStoFIXED(19.291, -5.60678, -9.50087),
       POStoFIXED(31.4256, -5.47296, -4.70432),
};

POLYGON polygon_ham_lwing[] = {
       NORMAL(0.314255, 0.914536, -0.254639), VERTICES(1, 3, 6, 5),
       NORMAL(-0.451538, 0.882019, -0.134644), VERTICES(4, 7, 2, 0),
       NORMAL(0.140335, 0.97644, -0.163864), VERTICES(5, 6, 7, 4),
};

ATTR attribute_ham_lwing[] = {
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(623),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(624),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(625),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_ham_lwing[] = {
       POStoFIXED(-0.451538, 0.882019, -0.134644),
       POStoFIXED(0.314255, 0.914536, -0.254639),
       POStoFIXED(-0.451538, 0.882019, -0.134644),
       POStoFIXED(0.314255, 0.914536, -0.254639),
       POStoFIXED(-0.155594, 0.92923, -0.149246),
       POStoFIXED(0.227295, 0.94548, -0.209244),
       POStoFIXED(0.227295, 0.94548, -0.209244),
       POStoFIXED(-0.155594, 0.92923, -0.149246),
};

XPDATA xpdata_ham_lwing[] = {
   {
       point_ham_lwing, sizeof(point_ham_lwing)/sizeof(POINT),
       polygon_ham_lwing, sizeof(polygon_ham_lwing)/sizeof(POLYGON),
       attribute_ham_lwing,
       normal_ham_lwing
  }
};



POINT point_ham_LL2[] = {
       POStoFIXED(5.6676, 1.88708, 7.81558),
       POStoFIXED(9.03839, -3.9975, 6.25735),
       POStoFIXED(24.5091, -12.4171, 17.7827),
       POStoFIXED(20.0501, -8.3364, 17.3065),
       POStoFIXED(23.2051, -8.60004, 13.9031),
       POStoFIXED(27.815, 14.8246, 19.1683),
       POStoFIXED(10.7083, 1.53836, 3.08401),
       POStoFIXED(26.731, 14.6784, 20.1586),
       POStoFIXED(27.5929, 14.7235, 20.02),
       POStoFIXED(9.57231, 1.88708, 1.25537),
       POStoFIXED(10.7574, -3.9975, -2.26396),
       POStoFIXED(29.7623, -12.4171, -5.57901),
       POStoFIXED(26.3516, -8.3364, -2.66762),
       POStoFIXED(26.0481, -8.60005, -7.29851),
       POStoFIXED(33.041, 14.8246, -7.02788),
       POStoFIXED(9.6003, 1.53836, -5.65807),
       POStoFIXED(33.0152, 14.6784, -5.55989),
       POStoFIXED(33.5069, 14.7235, -6.28113),
};

POLYGON polygon_ham_LL2[] = {
       NORMAL(-0.6763, -0.607849, 0.416046), VERTICES(3, 2, 1, 0),
       NORMAL(0.192001, -0.619614, -0.761047), VERTICES(2, 4, 6, 1),
       NORMAL(-0.00137329, -0.102142, 0.994766), VERTICES(8, 2, 3, 7),
       NORMAL(0.986588, -0.139175, -0.085144), VERTICES(8, 5, 4, 2),
       NORMAL(-0.162643, -0.607849, 0.777206), VERTICES(12, 11, 10, 9),
       NORMAL(-0.420792, -0.619614, -0.662552), VERTICES(11, 13, 15, 10),
       NORMAL(0.721588, -0.102142, 0.684738), VERTICES(17, 11, 12, 16),
       NORMAL(0.616272, -0.139175, -0.775116), VERTICES(17, 14, 13, 11),
};

ATTR attribute_ham_LL2[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(609),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(610),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(611),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(612),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(613),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(614),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(615),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(616),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_ham_LL2[] = {
       POStoFIXED(-0.6763, -0.607849, 0.416046),
       POStoFIXED(-0.242142, -0.613724, -0.172501),
       POStoFIXED(0.125229, -0.367188, 0.141144),
       POStoFIXED(-0.338837, -0.354996, 0.705399),
       POStoFIXED(0.589294, -0.379395, -0.423096),
       POStoFIXED(0.986588, -0.139175, -0.085144),
       POStoFIXED(0.192001, -0.619614, -0.761047),
       POStoFIXED(-0.00137329, -0.102142, 0.994766),
       POStoFIXED(0.492599, -0.120651, 0.454803),
       POStoFIXED(-0.162643, -0.607849, 0.777206),
       POStoFIXED(-0.291718, -0.613724, 0.0573273),
       POStoFIXED(0.188599, -0.367188, 0.00605774),
       POStoFIXED(0.279465, -0.354996, 0.730972),
       POStoFIXED(0.0977325, -0.379395, -0.718826),
       POStoFIXED(0.616272, -0.139175, -0.775116),
       POStoFIXED(-0.420792, -0.619614, -0.662552),
       POStoFIXED(0.721588, -0.102142, 0.684738),
       POStoFIXED(0.66893, -0.120651, -0.0451813),
};

XPDATA xpdata_ham_LL2[] = {
   {
       point_ham_LL2, sizeof(point_ham_LL2)/sizeof(POINT),
       polygon_ham_LL2, sizeof(polygon_ham_LL2)/sizeof(POLYGON),
       attribute_ham_LL2,
       normal_ham_LL2
  }
};

//MESH NO.2 : ham_LL1_Sphere_Sphere.005
POINT point_ham_LL1[] = {
       POStoFIXED(8.41747, 1.88708, 4.72772),
       POStoFIXED(10.8272, -3.9975, 1.90224),
       POStoFIXED(29.7007, -12.4171, 5.89838),
       POStoFIXED(25.4514, -8.3364, 7.33127),
       POStoFIXED(26.8933, -8.60005, 2.9201),
       POStoFIXED(33.283, 14.8246, 5.77382),
       POStoFIXED(11.0164, 1.53836, -1.67868),
       POStoFIXED(32.7128, 14.6784, 7.12674),
       POStoFIXED(33.4376, 14.7235, 6.64035),
       POStoFIXED(9.21957, 1.88708, -2.86435),
       POStoFIXED(8.82364, -3.9975, -6.5567),
       POStoFIXED(24.6987, -12.4171, -17.5184),
       POStoFIXED(22.8188, -8.3364, -13.4472),
       POStoFIXED(20.6058, -8.60004, -17.5264),
       POStoFIXED(27.0705, 14.8246, -20.2061),
       POStoFIXED(7.68398, 6.73836, -9.15544),
       POStoFIXED(27.6612, 14.6784, -18.8619),
       POStoFIXED(27.8061, 14.7235, -19.7227),
};

POLYGON polygon_ham_LL1[] = {
       NORMAL(-0.440216, -0.607849, 0.660828), VERTICES(3, 2, 1, 0),
       NORMAL(-0.143982, -0.619614, -0.771576), VERTICES(2, 4, 6, 1),
       NORMAL(0.414902, -0.102142, 0.904099), VERTICES(8, 2, 3, 7),
       NORMAL(0.860489, -0.139175, -0.490082), VERTICES(8, 5, 4, 2),
       NORMAL(0.177383, -0.607849, 0.773972), VERTICES(12, 11, 10, 9),
       NORMAL(-0.739258, -0.522217, -0.425171), VERTICES(11, 13, 15, 10),
       NORMAL(0.941864, -0.102142, 0.320053), VERTICES(17, 11, 12, 16),
       NORMAL(0.235489, -0.139175, -0.961853), VERTICES(17, 14, 13, 11),
};

ATTR attribute_ham_LL1[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(617),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(618),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(619),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(620),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(621),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(622),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(623),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(624),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_ham_LL1[] = {
       POStoFIXED(-0.440216, -0.607849, 0.660828),
       POStoFIXED(-0.292099, -0.613724, -0.0553741),
       POStoFIXED(0.172791, -0.367188, 0.0758057),
       POStoFIXED(-0.0126495, -0.354996, 0.782455),
       POStoFIXED(0.358246, -0.379395, -0.630829),
       POStoFIXED(0.860489, -0.139175, -0.490082),
       POStoFIXED(-0.143982, -0.619614, -0.771576),
       POStoFIXED(0.414902, -0.102142, 0.904099),
       POStoFIXED(0.637695, -0.120651, 0.207001),
       POStoFIXED(0.177383, -0.607849, 0.773972),
       POStoFIXED(-0.28093, -0.565033, 0.174393),
       POStoFIXED(0.15387, -0.342834, -0.0732422),
       POStoFIXED(0.559616, -0.354996, 0.547012),
       POStoFIXED(-0.251877, -0.330688, -0.693512),
       POStoFIXED(0.235489, -0.139175, -0.961853),
       POStoFIXED(-0.739258, -0.522217, -0.425171),
       POStoFIXED(0.941864, -0.102142, 0.320053),
       POStoFIXED(0.588669, -0.120651, -0.320892),
};

XPDATA xpdata_ham_LL1[] = {
   {
       point_ham_LL1, sizeof(point_ham_LL1)/sizeof(POINT),
       polygon_ham_LL1, sizeof(polygon_ham_LL1)/sizeof(POLYGON),
       attribute_ham_LL1,
       normal_ham_LL1
  }
};

//MESH NO.3 : ham_RL2_Sphere_Sphere.008
POINT point_ham_RL1[] = {
       POStoFIXED(-8.41747, 1.88708, -4.72772),
       POStoFIXED(-10.8272, -3.9975, -1.90224),
       POStoFIXED(-29.7007, -12.4171, -5.89838),
       POStoFIXED(-25.4514, -8.33641, -7.33127),
       POStoFIXED(-26.8933, -8.60005, -2.9201),
       POStoFIXED(-33.283, 14.8246, -5.77382),
       POStoFIXED(-11.0164, 1.53836, 1.67868),
       POStoFIXED(-32.7128, 14.6784, -7.12674),
       POStoFIXED(-33.4376, 14.7235, -6.64035),
       POStoFIXED(-9.21957, 1.88708, 2.86435),
       POStoFIXED(-8.82364, -3.9975, 6.5567),
       POStoFIXED(-24.6987, -12.4171, 17.5185),
       POStoFIXED(-22.8188, -8.3364, 13.4472),
       POStoFIXED(-20.6058, -8.60004, 17.5264),
       POStoFIXED(-27.0705, 14.8246, 20.206),
       POStoFIXED(-6.35274, 1.53836, 9.15544),
       POStoFIXED(-27.6612, 14.6784, 18.8619),
       POStoFIXED(-27.8061, 14.7235, 19.7227),
};

POLYGON polygon_ham_RL1[] = {
       NORMAL(0.440216, -0.607849, -0.660828), VERTICES(3, 2, 1, 0),
       NORMAL(0.143982, -0.619614, 0.771576), VERTICES(2, 4, 6, 1),
       NORMAL(-0.414902, -0.102142, -0.904099), VERTICES(8, 2, 3, 7),
       NORMAL(-0.860489, -0.139175, 0.490082), VERTICES(8, 5, 4, 2),
       NORMAL(-0.177383, -0.607849, -0.773972), VERTICES(12, 11, 10, 9),
       NORMAL(0.659393, -0.619614, 0.425751), VERTICES(11, 13, 15, 10),
       NORMAL(-0.941864, -0.102142, -0.320053), VERTICES(17, 11, 12, 16),
       NORMAL(-0.235474, -0.139175, 0.961853), VERTICES(17, 14, 13, 11),
};

ATTR attribute_ham_RL1[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(625),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(626),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(627),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(628),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(629),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(630),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(631),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(632),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_ham_RL1[] = {
       POStoFIXED(0.440216, -0.607849, -0.660828),
       POStoFIXED(0.292099, -0.613724, 0.0553741),
       POStoFIXED(-0.172791, -0.367188, -0.0758057),
       POStoFIXED(0.0126495, -0.354996, -0.782455),
       POStoFIXED(-0.358246, -0.379395, 0.630829),
       POStoFIXED(-0.860489, -0.139175, 0.490082),
       POStoFIXED(0.143982, -0.619614, 0.771576),
       POStoFIXED(-0.414902, -0.102142, -0.904099),
       POStoFIXED(-0.637695, -0.120651, -0.207001),
       POStoFIXED(-0.177383, -0.607849, -0.773972),
       POStoFIXED(0.240997, -0.613724, -0.174103),
       POStoFIXED(-0.173828, -0.367188, 0.0733948),
       POStoFIXED(-0.559616, -0.354996, -0.547012),
       POStoFIXED(0.21196, -0.379395, 0.693802),
       POStoFIXED(-0.235474, -0.139175, 0.961853),
       POStoFIXED(0.659393, -0.619614, 0.425751),
       POStoFIXED(-0.941864, -0.102142, -0.320053),
       POStoFIXED(-0.588669, -0.120651, 0.320892),
};

XPDATA xpdata_ham_RL1[] = {
   {
       point_ham_RL1, sizeof(point_ham_RL1)/sizeof(POINT),
       polygon_ham_RL1, sizeof(polygon_ham_RL1)/sizeof(POLYGON),
       attribute_ham_RL1,
       normal_ham_RL1
  }
};

//MESH NO.4 : ham_RL1_Sphere_Sphere.009
POINT point_ham_RL2[] = {
       POStoFIXED(-8.56613, 5.74686, -7.81558),
       POStoFIXED(-9.03839, -3.9975, -6.25735),
       POStoFIXED(-24.5091, -12.4171, -17.7827),
       POStoFIXED(-20.0501, -8.3364, -17.3065),
       POStoFIXED(-23.2051, -8.60005, -13.9031),
       POStoFIXED(-27.815, 14.8246, -19.1683),
       POStoFIXED(-10.7083, 1.53836, -3.08401),
       POStoFIXED(-26.731, 14.6784, -20.1586),
       POStoFIXED(-27.5929, 14.7235, -20.02),
       POStoFIXED(-9.57231, 1.88708, -1.25537),
       POStoFIXED(-10.7574, -3.9975, 2.26398),
       POStoFIXED(-29.7623, -12.4171, 5.57901),
       POStoFIXED(-26.3516, -8.3364, 2.66762),
       POStoFIXED(-26.0481, -8.60004, 7.29851),
       POStoFIXED(-33.041, 14.8246, 7.02788),
       POStoFIXED(-9.6003, 1.53836, 5.65807),
       POStoFIXED(-33.0152, 14.6784, 5.55989),
       POStoFIXED(-33.5069, 14.7235, 6.28113),
};

POLYGON polygon_ham_RL2[] = {
       NORMAL(0.762054, -0.48262, -0.431641), VERTICES(3, 2, 1, 0),
       NORMAL(-0.192001, -0.619614, 0.761047), VERTICES(2, 4, 6, 1),
       NORMAL(0.00137329, -0.102142, -0.994766), VERTICES(8, 2, 3, 7),
       NORMAL(-0.986588, -0.139175, 0.085144), VERTICES(8, 5, 4, 2),
       NORMAL(0.162643, -0.607849, -0.777191), VERTICES(12, 11, 10, 9),
       NORMAL(0.420792, -0.619614, 0.662567), VERTICES(11, 13, 15, 10),
       NORMAL(-0.721588, -0.102142, -0.684738), VERTICES(17, 11, 12, 16),
       NORMAL(-0.616272, -0.139175, 0.775116), VERTICES(17, 14, 13, 11),
};

ATTR attribute_ham_RL2[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(633),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(634),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(635),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(636),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(637),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(638),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(639),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(640),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_ham_RL2[] = {
       POStoFIXED(0.762054, -0.48262, -0.431641),
       POStoFIXED(0.285019, -0.551117, 0.164703),
       POStoFIXED(-0.10379, -0.335876, -0.14505),
       POStoFIXED(0.381714, -0.292374, -0.713196),
       POStoFIXED(-0.589294, -0.379395, 0.423096),
       POStoFIXED(-0.986588, -0.139175, 0.085144),
       POStoFIXED(-0.192001, -0.619614, 0.761047),
       POStoFIXED(0.00137329, -0.102142, -0.994766),
       POStoFIXED(-0.492599, -0.120651, -0.454803),
       POStoFIXED(0.162643, -0.607849, -0.777191),
       POStoFIXED(0.291718, -0.613724, -0.057312),
       POStoFIXED(-0.188599, -0.367188, -0.00605774),
       POStoFIXED(-0.279465, -0.354996, -0.730957),
       POStoFIXED(-0.0977325, -0.379395, 0.718842),
       POStoFIXED(-0.616272, -0.139175, 0.775116),
       POStoFIXED(0.420792, -0.619614, 0.662567),
       POStoFIXED(-0.721588, -0.102142, -0.684738),
       POStoFIXED(-0.66893, -0.120651, 0.0451813),
};

XPDATA xpdata_ham_RL2[] = {
   {
       point_ham_RL2, sizeof(point_ham_RL2)/sizeof(POINT),
       polygon_ham_RL2, sizeof(polygon_ham_RL2)/sizeof(POLYGON),
       attribute_ham_RL2,
       normal_ham_RL2
  }
};

POINT point_spider_body[] = {
       POStoFIXED(11.3137, -9.79794, -5.65686),
       POStoFIXED(16, 0, 0),
       POStoFIXED(4.01938, 6.59125, 3.82819),
       POStoFIXED(5.65685, -4.89897, -14.1421),
       POStoFIXED(8, 6.92821, -12),
       POStoFIXED(1.99942, 8.34059, 0.798233),
       POStoFIXED(-5.65686, -4.89897, -14.1421),
       POStoFIXED(-8, 6.92821, -12),
       POStoFIXED(-2.04051, 8.34059, 0.798233),
       POStoFIXED(-11.3137, -9.79794, -5.65686),
       POStoFIXED(-16, 0, 0),
       POStoFIXED(-4.06047, 6.59125, 3.82819),
       POStoFIXED(-4.93083, -13.052, 0.501282),
       POStoFIXED(-8, -6.92821, 12),
       POStoFIXED(-2.04051, 4.8419, 6.85814),
       POStoFIXED(4.93083, -13.052, 0.501266),
       POStoFIXED(8, -6.92821, 12),
       POStoFIXED(1.99942, 4.8419, 6.85814),
       POStoFIXED(-11.5707, -14.2196, -10.3064),
       POStoFIXED(-6.26257, -9.28903, -13.2981),
       POStoFIXED(-6.06706, -14.1604, -10.5981),
       POStoFIXED(-3.31477, -6.94142, -9.27594),
       POStoFIXED(-3.11929, -11.8128, -6.57596),
       POStoFIXED(-8.46829, -14.2277, -4.01903),
       POStoFIXED(-8.85014, -3.91595, -9.00359),
       POStoFIXED(-14.3221, -7.05981, -8.69257),
       POStoFIXED(-14.1266, -11.9312, -5.99257),
       POStoFIXED(-11.7662, -9.34824, -13.0064),
       POStoFIXED(-3.01343, -6.53833, -4.64168),
       POStoFIXED(-8.36246, -8.95326, -2.08475),
       POStoFIXED(-14.0207, -6.65674, -4.05827),
       POStoFIXED(-3.97919, -14.7451, -15.3716),
       POStoFIXED(4.07368, -7.5791, -19.5266),
       POStoFIXED(4.14398, -14.6575, -15.3598),
       POStoFIXED(8.08804, -3.96683, -11.8144),
       POStoFIXED(8.15831, -11.0453, -7.64763),
       POStoFIXED(0.0802612, -14.5206, -4.22784),
       POStoFIXED(-0.0802612, 0.489883, -11.9702),
       POStoFIXED(-8.15831, -4.14198, -11.8379),
       POStoFIXED(-8.08804, -11.2204, -7.67114),
       POStoFIXED(-4.04948, -7.66667, -19.5383),
       POStoFIXED(1.92352, -20.0424, -3.63551),
       POStoFIXED(6.90523, -16.6703, -7.49391),
       POStoFIXED(6.94872, -19.9888, -3.64603),
       POStoFIXED(9.38858, -13.3479, -4.65665),
       POStoFIXED(9.43207, -16.6664, -0.808762),
       POStoFIXED(4.43481, -18.0226, 1.88538),
       POStoFIXED(4.33549, -10.768, -5.63377),
       POStoFIXED(-0.661758, -13.4552, -4.6356),
       POStoFIXED(-0.618271, -16.7737, -0.78772),
       POStoFIXED(1.88005, -16.7239, -7.48338),
       POStoFIXED(9.43207, -11.5432, -0.808762),
       POStoFIXED(4.43481, -12.8994, 1.88538),
       POStoFIXED(-0.618271, -11.6504, -0.78772),
       POStoFIXED(-7.02203, -20.0424, -3.63551),
       POStoFIXED(-2.04034, -16.6703, -7.49391),
       POStoFIXED(-1.99687, -19.9888, -3.64603),
       POStoFIXED(0.442993, -13.3479, -4.65665),
       POStoFIXED(0.486465, -16.6664, -0.808762),
       POStoFIXED(-4.51077, -18.0226, 1.88538),
       POStoFIXED(-4.61009, -10.768, -5.63377),
       POStoFIXED(-9.60733, -13.4552, -4.6356),
       POStoFIXED(-9.56386, -16.7737, -0.78772),
       POStoFIXED(-7.06552, -16.7239, -7.48338),
       POStoFIXED(0.486465, -11.5432, -0.808762),
       POStoFIXED(-4.51077, -12.8994, 1.88538),
       POStoFIXED(-9.56386, -11.6504, -0.78772),
       POStoFIXED(6.18851, -14.2196, -10.9335),
       POStoFIXED(12.0756, -9.28903, -12.5047),
       POStoFIXED(11.5906, -14.1604, -9.84145),
       POStoFIXED(13.9254, -6.94142, -7.87379),
       POStoFIXED(13.4404, -11.8128, -5.21054),
       POStoFIXED(7.62231, -14.2277, -4.07057),
       POStoFIXED(8.49748, -3.91595, -8.99252),
       POStoFIXED(3.12129, -7.05981, -10.058),
       POStoFIXED(2.63626, -11.9312, -7.39471),
       POStoFIXED(6.67352, -9.34824, -13.5968),
       POStoFIXED(13.0598, -6.53835, -3.31113),
       POStoFIXED(7.24171, -8.95326, -2.17114),
       POStoFIXED(2.25568, -6.65674, -5.4953),
};

POLYGON polygon_spider_body[] = {
       NORMAL(0.512405, 0.846085, 0.146866), VERTICES(5, 4, 1, 2),
       NORMAL(0.815155, -0.0570831, -0.576401), VERTICES(4, 3, 0, 1),
       NORMAL(0, 0.178207, -0.983978), VERTICES(7, 6, 3, 4),
       NORMAL(-0.51355, 0.845566, 0.145813), VERTICES(11, 10, 7, 8),
       NORMAL(-0.815155, -0.0570831, -0.576401), VERTICES(10, 9, 6, 7),
       NORMAL(-0.514175, 0.548416, 0.659424), VERTICES(14, 13, 10, 11),
       NORMAL(-0.730057, -0.631363, 0.26149), VERTICES(13, 12, 9, 10),
       NORMAL(0, 0.400314, 0.916367), VERTICES(17, 16, 13, 14),
       NORMAL(0, -0.882629, 0.470047), VERTICES(16, 15, 12, 13),
       NORMAL(0.513031, 0.549591, 0.659332), VERTICES(2, 1, 16, 17),
       NORMAL(0.730057, -0.631363, 0.26149), VERTICES(1, 0, 15, 16),
       NORMAL(0.0104065, -0.999924, -0.00642395), VERTICES(20, 20, 18, 23),
       NORMAL(-0.0484924, 0.609253, -0.791489), VERTICES(19, 19, 24, 27),
       NORMAL(0.469482, -0.867859, 0.16246), VERTICES(22, 22, 20, 23),
       NORMAL(0.844223, -0.233505, -0.482422), VERTICES(22, 21, 19, 20),
       NORMAL(-0.429886, -0.877869, 0.210983), VERTICES(18, 18, 26, 23),
       NORMAL(-0.885284, -0.252106, -0.390762), VERTICES(18, 27, 25, 26),
       NORMAL(-0.421524, 0.673615, -0.607086), VERTICES(27, 27, 24, 25),
       NORMAL(-0.42157, -0.304733, 0.85405), VERTICES(30, 29, 23, 26),
       NORMAL(0.518982, -0.303452, 0.799088), VERTICES(29, 28, 22, 23),
       NORMAL(0.997849, 0.00389099, -0.0652161), VERTICES(28, 28, 21, 22),
       NORMAL(0.0107422, -0.999802, 0.0162201), VERTICES(33, 33, 31, 36),
       NORMAL(-0.00628662, 0.681793, -0.731506), VERTICES(32, 32, 37, 40),
       NORMAL(0.45076, -0.875244, 0.175308), VERTICES(35, 35, 33, 36),
       NORMAL(0.904068, -0.210098, -0.372162), VERTICES(35, 34, 32, 33),
       NORMAL(0.407288, 0.727158, -0.552582), VERTICES(34, 34, 37, 32),
       NORMAL(-0.431335, -0.885056, 0.174957), VERTICES(31, 31, 39, 36),
       NORMAL(-0.898438, -0.229324, -0.37442), VERTICES(31, 40, 38, 39),
       NORMAL(-0.421051, 0.718521, -0.553558), VERTICES(40, 40, 37, 38),
       NORMAL(0.0107422, -0.940628, 0.339233), VERTICES(43, 43, 41, 46),
       NORMAL(-0.00517273, 0.298523, -0.954376), VERTICES(42, 42, 47, 50),
       NORMAL(0.4599, -0.749878, 0.475555), VERTICES(45, 45, 43, 46),
       NORMAL(0.869324, -0.369354, -0.328369), VERTICES(45, 44, 42, 43),
       NORMAL(0.375565, 0.42334, -0.824448), VERTICES(44, 44, 47, 42),
       NORMAL(-0.440781, -0.759521, 0.478363), VERTICES(41, 41, 49, 46),
       NORMAL(-0.86261, -0.387848, -0.324738), VERTICES(41, 50, 48, 49),
       NORMAL(-0.387726, 0.41539, -0.822861), VERTICES(50, 50, 47, 48),
       NORMAL(-0.46759, 0, 0.883926), VERTICES(53, 52, 46, 49),
       NORMAL(0.474548, 0, 0.880219), VERTICES(52, 51, 45, 46),
       NORMAL(0.999924, 0, -0.0112915), VERTICES(51, 51, 44, 45),
       NORMAL(0.0107422, -0.940628, 0.339233), VERTICES(56, 56, 54, 59),
       NORMAL(-0.00517273, 0.298523, -0.954376), VERTICES(55, 55, 60, 63),
       NORMAL(0.4599, -0.749878, 0.475555), VERTICES(58, 58, 56, 59),
       NORMAL(0.869324, -0.369354, -0.328369), VERTICES(58, 57, 55, 56),
       NORMAL(0.375565, 0.42334, -0.824448), VERTICES(57, 57, 60, 55),
       NORMAL(-0.440781, -0.759521, 0.478363), VERTICES(54, 54, 62, 59),
       NORMAL(-0.86261, -0.387848, -0.324738), VERTICES(54, 63, 61, 62),
       NORMAL(-0.387726, 0.41539, -0.822861), VERTICES(63, 63, 60, 61),
       NORMAL(-0.46759, 0, 0.883926), VERTICES(66, 65, 59, 62),
       NORMAL(0.474548, 0, 0.880219), VERTICES(65, 64, 58, 59),
       NORMAL(-0.999924, 0, 0.0112915), VERTICES(61, 61, 66, 62),
       NORMAL(0.0116882, -0.999924, -0.00361633), VERTICES(69, 69, 67, 72),
       NORMAL(0.150696, 0.609253, -0.778519), VERTICES(68, 68, 73, 76),
       NORMAL(0.414017, -0.867859, 0.274567), VERTICES(71, 71, 69, 72),
       NORMAL(0.937958, -0.233505, -0.256287), VERTICES(71, 70, 68, 69),
       NORMAL(0.491623, 0.681625, -0.541916), VERTICES(70, 70, 73, 68),
       NORMAL(-0.468964, -0.877869, 0.0969238), VERTICES(67, 67, 75, 72),
       NORMAL(-0.759628, -0.252106, -0.599472), VERTICES(67, 76, 74, 75),
       NORMAL(-0.621506, -0.304733, 0.721695), VERTICES(79, 78, 72, 75),
       NORMAL(0.302963, -0.303452, 0.903381), VERTICES(78, 77, 71, 72),
       NORMAL(0.982529, 0.00389099, 0.18605), VERTICES(77, 77, 70, 71),
       NORMAL(-0.0410461, -0.485626, -0.873199), VERTICES(20, 19, 27, 18),
       NORMAL(0.00671387, -0.507217, -0.861786), VERTICES(33, 32, 40, 31),
       NORMAL(0.00669861, -0.757217, -0.653122), VERTICES(43, 42, 50, 41),
       NORMAL(0.00669861, -0.757217, -0.653122), VERTICES(56, 55, 63, 54),
       NORMAL(0.178314, -0.485611, -0.855774), VERTICES(69, 68, 76, 67),
};

ATTR attribute_spider_body[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(653),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(654),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(655),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(656),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(657),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(658),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(659),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(660),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(661),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(662),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(663),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(664),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(665),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(666),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(667),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(668),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(669),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(670),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(671),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(672),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(673),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(674),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(675),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(676),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(677),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(678),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(679),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(680),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(681),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(682),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(683),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(684),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(685),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(686),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(687),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(688),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(689),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(690),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(691),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(692),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(693),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(694),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(695),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(696),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(697),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(698),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(699),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(700),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(701),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(702),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(703),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(704),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(705),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(706),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(707),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(708),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(709),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(710),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(711),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(712),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(713),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 3, LUTidx(3), GRreal(714),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 3, LUTidx(3), GRreal(715),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 3, LUTidx(3), GRreal(716),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 3, LUTidx(3), GRreal(717),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 3, LUTidx(3), GRreal(718),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_spider_body[] = {
       POStoFIXED(0.772598, -0.344223, -0.157455),
       POStoFIXED(0.642654, 0.176804, 0.122818),
       POStoFIXED(0.512711, 0.69783, 0.403091),
       POStoFIXED(0.407578, 0.0605621, -0.780182),
       POStoFIXED(0.44252, 0.322403, -0.471161),
       POStoFIXED(0.512405, 0.846085, 0.146866),
       POStoFIXED(-0.407578, 0.0605621, -0.780182),
       POStoFIXED(-0.442902, 0.32222, -0.471512),
       POStoFIXED(-0.51355, 0.845566, 0.145813),
       POStoFIXED(-0.772598, -0.344223, -0.157455),
       POStoFIXED(-0.643234, 0.176376, 0.122574),
       POStoFIXED(-0.513855, 0.696991, 0.402618),
       POStoFIXED(-0.365021, -0.756989, 0.365768),
       POStoFIXED(-0.31105, -0.141312, 0.576828),
       POStoFIXED(-0.25708, 0.474365, 0.787888),
       POStoFIXED(0.365021, -0.756989, 0.365768),
       POStoFIXED(0.31076, -0.141022, 0.576797),
       POStoFIXED(0.256516, 0.474945, 0.787842),
       POStoFIXED(-0.355133, -0.698669, -0.169678),
       POStoFIXED(0.176544, 0.124832, -0.73465),
       POStoFIXED(0.258682, -0.717361, -0.241196),
       POStoFIXED(0.921036, -0.114807, -0.273819),
       POStoFIXED(0.660004, -0.453751, 0.115265),
       POStoFIXED(0.02948, -0.670761, 0.404022),
       POStoFIXED(-0.235001, 0.641434, -0.69928),
       POStoFIXED(-0.653397, 0.210754, -0.498917),
       POStoFIXED(-0.578903, -0.478226, 0.224747),
       POStoFIXED(-0.363571, 0.243744, -0.653915),
       POStoFIXED(0.838226, -0.0985565, 0.222885),
       POStoFIXED(0.0487061, -0.304092, 0.826569),
       POStoFIXED(-0.42157, -0.304733, 0.85405),
       POStoFIXED(-0.348724, -0.701279, -0.174011),
       POStoFIXED(0.261093, 0.274673, -0.649902),
       POStoFIXED(0.276596, -0.71843, -0.205231),
       POStoFIXED(0.572876, 0.414734, -0.492432),
       POStoFIXED(0.601852, -0.653519, -0.00717163),
       POStoFIXED(0.0100555, -0.920029, 0.122162),
       POStoFIXED(-0.00668335, 0.709152, -0.612549),
       POStoFIXED(-0.659744, 0.244598, -0.463989),
       POStoFIXED(-0.664886, -0.55719, -0.0997314),
       POStoFIXED(-0.348022, 0.276459, -0.61496),
       POStoFIXED(-0.345337, -0.720947, 0.0636139),
       POStoFIXED(0.248245, -0.021225, -0.742935),
       POStoFIXED(0.271469, -0.751541, 0.0345001),
       POStoFIXED(0.65509, 0.119324, -0.497131),
       POStoFIXED(0.65271, -0.37381, 0.298325),
       POStoFIXED(0.00735474, -0.490005, 0.61145),
       POStoFIXED(-0.00576782, 0.379074, -0.867218),
       POStoFIXED(-0.625168, 0.0137634, -0.573792),
       POStoFIXED(-0.590317, -0.382446, 0.34584),
       POStoFIXED(-0.327301, -0.00314331, -0.715591),
       POStoFIXED(0.824799, 0, 0.285873),
       POStoFIXED(0.003479, 0, 0.882065),
       POStoFIXED(-0.46759, 0, 0.883926),
       POStoFIXED(-0.345337, -0.720947, 0.0636139),
       POStoFIXED(0.248245, -0.021225, -0.742935),
       POStoFIXED(0.271469, -0.751541, 0.0345001),
       POStoFIXED(0.540146, 0.159103, -0.659088),
       POStoFIXED(0.565918, -0.46727, 0.375732),
       POStoFIXED(0.00735474, -0.490005, 0.61145),
       POStoFIXED(-0.00576782, 0.379074, -0.867218),
       POStoFIXED(-0.812546, 0.00688171, -0.28125),
       POStoFIXED(-0.692719, -0.286835, 0.262207),
       POStoFIXED(-0.327301, -0.00314331, -0.715591),
       POStoFIXED(0.474548, 0, 0.880219),
       POStoFIXED(0.003479, 0, 0.882065),
       POStoFIXED(-0.733749, 0, 0.447601),
       POStoFIXED(-0.301498, -0.698669, -0.252991),
       POStoFIXED(0.381851, 0.236191, -0.642197),
       POStoFIXED(0.31073, -0.717361, -0.168945),
       POStoFIXED(0.725922, 0.283401, -0.288513),
       POStoFIXED(0.610291, -0.453751, 0.276443),
       POStoFIXED(-0.0723572, -0.670761, 0.39859),
       POStoFIXED(0.321152, 0.645432, -0.660217),
       POStoFIXED(-0.759628, -0.252106, -0.599472),
       POStoFIXED(-0.616699, -0.478226, 0.0730438),
       POStoFIXED(-0.143539, -0.0428162, -0.744583),
       POStoFIXED(0.755997, -0.0985565, 0.425156),
       POStoFIXED(-0.159271, -0.304092, 0.812531),
       POStoFIXED(-0.621506, -0.304733, 0.721695),
};

XPDATA xpdata_spider_body = {
   
       point_spider_body, sizeof(point_spider_body)/sizeof(POINT),
       polygon_spider_body, sizeof(polygon_spider_body)/sizeof(POLYGON),
       attribute_spider_body,
       normal_spider_body
  
};

//MESH NO.1 : SPIDER_LL2_Sphere_Sphere.003
POINT point_spider_LL2[] = {
       POStoFIXED(5.6676, 1.88708, 7.81558),
       POStoFIXED(9.03839, -3.9975, 6.25735),
       POStoFIXED(24.5091, -12.4171, 17.7827),
       POStoFIXED(20.0501, -8.3364, 17.3065),
       POStoFIXED(23.2051, -8.60004, 13.9031),
       POStoFIXED(27.815, 14.8246, 19.1683),
       POStoFIXED(10.7083, 1.53836, 3.08401),
       POStoFIXED(26.731, 14.6784, 20.1586),
       POStoFIXED(27.5929, 14.7235, 20.02),
       POStoFIXED(9.57231, 1.88708, 1.25537),
       POStoFIXED(10.7574, -3.9975, -2.26396),
       POStoFIXED(29.7623, -12.4171, -5.57901),
       POStoFIXED(26.3516, -8.3364, -2.66762),
       POStoFIXED(26.0481, -8.60005, -7.29851),
       POStoFIXED(33.041, 14.8246, -7.02788),
       POStoFIXED(9.6003, 1.53836, -5.65807),
       POStoFIXED(33.0152, 14.6784, -5.55989),
       POStoFIXED(33.5069, 14.7235, -6.28113),
};

POLYGON polygon_spider_LL2[] = {
       NORMAL(-0.6763, -0.607849, 0.416046), VERTICES(3, 2, 1, 0),
       NORMAL(0.192001, -0.619614, -0.761047), VERTICES(2, 4, 6, 1),
       NORMAL(-0.00137329, -0.102142, 0.994766), VERTICES(8, 2, 3, 7),
       NORMAL(0.986588, -0.139175, -0.085144), VERTICES(8, 5, 4, 2),
       NORMAL(-0.162643, -0.607849, 0.777206), VERTICES(12, 11, 10, 9),
       NORMAL(-0.420792, -0.619614, -0.662552), VERTICES(11, 13, 15, 10),
       NORMAL(0.721588, -0.102142, 0.684738), VERTICES(17, 11, 12, 16),
       NORMAL(0.616272, -0.139175, -0.775116), VERTICES(17, 14, 13, 11),
};

ATTR attribute_spider_LL2[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(719),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(720),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(721),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(722),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(723),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(724),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(725),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(726),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_spider_LL2[] = {
       POStoFIXED(-0.6763, -0.607849, 0.416046),
       POStoFIXED(-0.242142, -0.613724, -0.172501),
       POStoFIXED(0.125229, -0.367188, 0.141144),
       POStoFIXED(-0.338837, -0.354996, 0.705399),
       POStoFIXED(0.589294, -0.379395, -0.423096),
       POStoFIXED(0.986588, -0.139175, -0.085144),
       POStoFIXED(0.192001, -0.619614, -0.761047),
       POStoFIXED(-0.00137329, -0.102142, 0.994766),
       POStoFIXED(0.492599, -0.120651, 0.454803),
       POStoFIXED(-0.162643, -0.607849, 0.777206),
       POStoFIXED(-0.291718, -0.613724, 0.0573273),
       POStoFIXED(0.188599, -0.367188, 0.00605774),
       POStoFIXED(0.279465, -0.354996, 0.730972),
       POStoFIXED(0.0977325, -0.379395, -0.718826),
       POStoFIXED(0.616272, -0.139175, -0.775116),
       POStoFIXED(-0.420792, -0.619614, -0.662552),
       POStoFIXED(0.721588, -0.102142, 0.684738),
       POStoFIXED(0.66893, -0.120651, -0.0451813),
};

XPDATA xpdata_spider_LL2[] = {
   {
       point_spider_LL2, sizeof(point_spider_LL2)/sizeof(POINT),
       polygon_spider_LL2, sizeof(polygon_spider_LL2)/sizeof(POLYGON),
       attribute_spider_LL2,
       normal_spider_LL2
  }
};

//MESH NO.2 : SPIDER_LL1_Sphere_Sphere.005
POINT point_spider_LL1[] = {
       POStoFIXED(8.41747, 1.88708, 4.72772),
       POStoFIXED(10.8272, -3.9975, 1.90224),
       POStoFIXED(29.7007, -12.4171, 5.89838),
       POStoFIXED(25.4514, -8.3364, 7.33127),
       POStoFIXED(26.8933, -8.60005, 2.9201),
       POStoFIXED(33.283, 14.8246, 5.77382),
       POStoFIXED(11.0164, 1.53836, -1.67868),
       POStoFIXED(32.7128, 14.6784, 7.12674),
       POStoFIXED(33.4376, 14.7235, 6.64035),
       POStoFIXED(9.21957, 1.88708, -2.86435),
       POStoFIXED(8.82364, -3.9975, -6.5567),
       POStoFIXED(24.6987, -12.4171, -17.5184),
       POStoFIXED(22.8188, -8.3364, -13.4472),
       POStoFIXED(20.6058, -8.60004, -17.5264),
       POStoFIXED(27.0705, 14.8246, -20.2061),
       POStoFIXED(7.68398, 6.73836, -9.15544),
       POStoFIXED(27.6612, 14.6784, -18.8619),
       POStoFIXED(27.8061, 14.7235, -19.7227),
};

POLYGON polygon_spider_LL1[] = {
       NORMAL(-0.440216, -0.607849, 0.660828), VERTICES(3, 2, 1, 0),
       NORMAL(-0.143982, -0.619614, -0.771576), VERTICES(2, 4, 6, 1),
       NORMAL(0.414902, -0.102142, 0.904099), VERTICES(8, 2, 3, 7),
       NORMAL(0.860489, -0.139175, -0.490082), VERTICES(8, 5, 4, 2),
       NORMAL(0.177383, -0.607849, 0.773972), VERTICES(12, 11, 10, 9),
       NORMAL(-0.739258, -0.522217, -0.425171), VERTICES(11, 13, 15, 10),
       NORMAL(0.941864, -0.102142, 0.320053), VERTICES(17, 11, 12, 16),
       NORMAL(0.235489, -0.139175, -0.961853), VERTICES(17, 14, 13, 11),
};

ATTR attribute_spider_LL1[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(727),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(728),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(729),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(730),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(731),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(732),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(733),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(734),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_spider_LL1[] = {
       POStoFIXED(-0.440216, -0.607849, 0.660828),
       POStoFIXED(-0.292099, -0.613724, -0.0553741),
       POStoFIXED(0.172791, -0.367188, 0.0758057),
       POStoFIXED(-0.0126495, -0.354996, 0.782455),
       POStoFIXED(0.358246, -0.379395, -0.630829),
       POStoFIXED(0.860489, -0.139175, -0.490082),
       POStoFIXED(-0.143982, -0.619614, -0.771576),
       POStoFIXED(0.414902, -0.102142, 0.904099),
       POStoFIXED(0.637695, -0.120651, 0.207001),
       POStoFIXED(0.177383, -0.607849, 0.773972),
       POStoFIXED(-0.28093, -0.565033, 0.174393),
       POStoFIXED(0.15387, -0.342834, -0.0732422),
       POStoFIXED(0.559616, -0.354996, 0.547012),
       POStoFIXED(-0.251877, -0.330688, -0.693512),
       POStoFIXED(0.235489, -0.139175, -0.961853),
       POStoFIXED(-0.739258, -0.522217, -0.425171),
       POStoFIXED(0.941864, -0.102142, 0.320053),
       POStoFIXED(0.588669, -0.120651, -0.320892),
};

XPDATA xpdata_spider_LL1[] = {
   {
       point_spider_LL1, sizeof(point_spider_LL1)/sizeof(POINT),
       polygon_spider_LL1, sizeof(polygon_spider_LL1)/sizeof(POLYGON),
       attribute_spider_LL1,
       normal_spider_LL1
  }
};

//MESH NO.3 : SPIDER_RL2_Sphere_Sphere.008
POINT point_spider_RL1[] = {
       POStoFIXED(-8.41747, 1.88708, -4.72772),
       POStoFIXED(-10.8272, -3.9975, -1.90224),
       POStoFIXED(-29.7007, -12.4171, -5.89838),
       POStoFIXED(-25.4514, -8.33641, -7.33127),
       POStoFIXED(-26.8933, -8.60005, -2.9201),
       POStoFIXED(-33.283, 14.8246, -5.77382),
       POStoFIXED(-11.0164, 1.53836, 1.67868),
       POStoFIXED(-32.7128, 14.6784, -7.12674),
       POStoFIXED(-33.4376, 14.7235, -6.64035),
       POStoFIXED(-9.21957, 1.88708, 2.86435),
       POStoFIXED(-8.82364, -3.9975, 6.5567),
       POStoFIXED(-24.6987, -12.4171, 17.5185),
       POStoFIXED(-22.8188, -8.3364, 13.4472),
       POStoFIXED(-20.6058, -8.60004, 17.5264),
       POStoFIXED(-27.0705, 14.8246, 20.206),
       POStoFIXED(-6.35274, 1.53836, 9.15544),
       POStoFIXED(-27.6612, 14.6784, 18.8619),
       POStoFIXED(-27.8061, 14.7235, 19.7227),
};

POLYGON polygon_spider_RL1[] = {
       NORMAL(0.440216, -0.607849, -0.660828), VERTICES(3, 2, 1, 0),
       NORMAL(0.143982, -0.619614, 0.771576), VERTICES(2, 4, 6, 1),
       NORMAL(-0.414902, -0.102142, -0.904099), VERTICES(8, 2, 3, 7),
       NORMAL(-0.860489, -0.139175, 0.490082), VERTICES(8, 5, 4, 2),
       NORMAL(-0.177383, -0.607849, -0.773972), VERTICES(12, 11, 10, 9),
       NORMAL(0.659393, -0.619614, 0.425751), VERTICES(11, 13, 15, 10),
       NORMAL(-0.941864, -0.102142, -0.320053), VERTICES(17, 11, 12, 16),
       NORMAL(-0.235474, -0.139175, 0.961853), VERTICES(17, 14, 13, 11),
};

ATTR attribute_spider_RL1[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(735),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(736),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(737),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(738),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(739),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(740),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(741),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(742),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_spider_RL1[] = {
       POStoFIXED(0.440216, -0.607849, -0.660828),
       POStoFIXED(0.292099, -0.613724, 0.0553741),
       POStoFIXED(-0.172791, -0.367188, -0.0758057),
       POStoFIXED(0.0126495, -0.354996, -0.782455),
       POStoFIXED(-0.358246, -0.379395, 0.630829),
       POStoFIXED(-0.860489, -0.139175, 0.490082),
       POStoFIXED(0.143982, -0.619614, 0.771576),
       POStoFIXED(-0.414902, -0.102142, -0.904099),
       POStoFIXED(-0.637695, -0.120651, -0.207001),
       POStoFIXED(-0.177383, -0.607849, -0.773972),
       POStoFIXED(0.240997, -0.613724, -0.174103),
       POStoFIXED(-0.173828, -0.367188, 0.0733948),
       POStoFIXED(-0.559616, -0.354996, -0.547012),
       POStoFIXED(0.21196, -0.379395, 0.693802),
       POStoFIXED(-0.235474, -0.139175, 0.961853),
       POStoFIXED(0.659393, -0.619614, 0.425751),
       POStoFIXED(-0.941864, -0.102142, -0.320053),
       POStoFIXED(-0.588669, -0.120651, 0.320892),
};

XPDATA xpdata_spider_RL1[] = {
   {
       point_spider_RL1, sizeof(point_spider_RL1)/sizeof(POINT),
       polygon_spider_RL1, sizeof(polygon_spider_RL1)/sizeof(POLYGON),
       attribute_spider_RL1,
       normal_spider_RL1
  }
};

//MESH NO.4 : SPIDER_RL1_Sphere_Sphere.009
POINT point_spider_RL2[] = {
       POStoFIXED(-8.56613, 5.74686, -7.81558),
       POStoFIXED(-9.03839, -3.9975, -6.25735),
       POStoFIXED(-24.5091, -12.4171, -17.7827),
       POStoFIXED(-20.0501, -8.3364, -17.3065),
       POStoFIXED(-23.2051, -8.60005, -13.9031),
       POStoFIXED(-27.815, 14.8246, -19.1683),
       POStoFIXED(-10.7083, 1.53836, -3.08401),
       POStoFIXED(-26.731, 14.6784, -20.1586),
       POStoFIXED(-27.5929, 14.7235, -20.02),
       POStoFIXED(-9.57231, 1.88708, -1.25537),
       POStoFIXED(-10.7574, -3.9975, 2.26398),
       POStoFIXED(-29.7623, -12.4171, 5.57901),
       POStoFIXED(-26.3516, -8.3364, 2.66762),
       POStoFIXED(-26.0481, -8.60004, 7.29851),
       POStoFIXED(-33.041, 14.8246, 7.02788),
       POStoFIXED(-9.6003, 1.53836, 5.65807),
       POStoFIXED(-33.0152, 14.6784, 5.55989),
       POStoFIXED(-33.5069, 14.7235, 6.28113),
};

POLYGON polygon_spider_RL2[] = {
       NORMAL(0.762054, -0.48262, -0.431641), VERTICES(3, 2, 1, 0),
       NORMAL(-0.192001, -0.619614, 0.761047), VERTICES(2, 4, 6, 1),
       NORMAL(0.00137329, -0.102142, -0.994766), VERTICES(8, 2, 3, 7),
       NORMAL(-0.986588, -0.139175, 0.085144), VERTICES(8, 5, 4, 2),
       NORMAL(0.162643, -0.607849, -0.777191), VERTICES(12, 11, 10, 9),
       NORMAL(0.420792, -0.619614, 0.662567), VERTICES(11, 13, 15, 10),
       NORMAL(-0.721588, -0.102142, -0.684738), VERTICES(17, 11, 12, 16),
       NORMAL(-0.616272, -0.139175, 0.775116), VERTICES(17, 14, 13, 11),
};

ATTR attribute_spider_RL2[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(743),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(744),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(745),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(746),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(747),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(748),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(749),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(750),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_spider_RL2[] = {
       POStoFIXED(0.762054, -0.48262, -0.431641),
       POStoFIXED(0.285019, -0.551117, 0.164703),
       POStoFIXED(-0.10379, -0.335876, -0.14505),
       POStoFIXED(0.381714, -0.292374, -0.713196),
       POStoFIXED(-0.589294, -0.379395, 0.423096),
       POStoFIXED(-0.986588, -0.139175, 0.085144),
       POStoFIXED(-0.192001, -0.619614, 0.761047),
       POStoFIXED(0.00137329, -0.102142, -0.994766),
       POStoFIXED(-0.492599, -0.120651, -0.454803),
       POStoFIXED(0.162643, -0.607849, -0.777191),
       POStoFIXED(0.291718, -0.613724, -0.057312),
       POStoFIXED(-0.188599, -0.367188, -0.00605774),
       POStoFIXED(-0.279465, -0.354996, -0.730957),
       POStoFIXED(-0.0977325, -0.379395, 0.718842),
       POStoFIXED(-0.616272, -0.139175, 0.775116),
       POStoFIXED(0.420792, -0.619614, 0.662567),
       POStoFIXED(-0.721588, -0.102142, -0.684738),
       POStoFIXED(-0.66893, -0.120651, 0.0451813),
};

XPDATA xpdata_spider_RL2[] = {
   {
       point_spider_RL2, sizeof(point_spider_RL2)/sizeof(POINT),
       polygon_spider_RL2, sizeof(polygon_spider_RL2)/sizeof(POLYGON),
       attribute_spider_RL2,
       normal_spider_RL2
  }
};

POINT point_bat_body[] = {
       POStoFIXED(6.82294, -1.94209, -8.80386),
       POStoFIXED(8.70102, 1.94209, 8.77037),
       POStoFIXED(2.84865, 3.90312, -8.9971),
       POStoFIXED(2.87335, 1.17407, 6.17368),
       POStoFIXED(-2.87941, 3.90312, -8.98071),
       POStoFIXED(-2.85471, 1.17407, 6.19006),
       POStoFIXED(-6.86087, -1.94209, -8.77434),
       POStoFIXED(-8.6631, 1.94209, 8.80785),
       POStoFIXED(0.0268097, 1.56329, 12.4297),
       POStoFIXED(-4.31927, -3.90312, 7.31537),
       POStoFIXED(4.36278, -3.90312, 7.29663),
       POStoFIXED(0.013031, -8.28371, -8.73933),
};

POLYGON polygon_bat_body[] = {
       NORMAL(-0.000167847, 0.998062, -0.0621643), VERTICES(5, 5, 3, 8),
       NORMAL(0.00050354, 0.984192, 0.177032), VERTICES(2, 3, 5, 4),
       NORMAL(-0.00285339, -0.0204773, -0.999771), VERTICES(2, 2, 4, 11),
       NORMAL(0.013031, -0.0241699, -0.999619), VERTICES(2, 2, 11, 0),
       NORMAL(-0.016861, -0.0237885, -0.999573), VERTICES(6, 6, 11, 4),
       NORMAL(-0.415512, 0.908615, -0.0419617), VERTICES(7, 6, 4, 5),
       NORMAL(-0.310257, 0.403793, 0.860626), VERTICES(8, 9, 7, 5),
       NORMAL(-0.743637, -0.66806, 0.0260468), VERTICES(11, 6, 7, 9),
       NORMAL(0.000564575, -0.964691, 0.263367), VERTICES(10, 10, 11, 9),
       NORMAL(0.00157166, -0.683853, 0.729599), VERTICES(10, 10, 9, 8),
       NORMAL(0.745651, -0.665909, 0.0231628), VERTICES(10, 1, 0, 11),
       NORMAL(0.415863, 0.908371, -0.0435638), VERTICES(3, 2, 0, 1),
       NORMAL(0.313843, 0.405029, 0.858734), VERTICES(1, 10, 8, 3),
};

ATTR attribute_bat_body[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(500),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(501),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(502),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(503),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(504),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(505),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(506),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(507),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(508),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(509),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(510),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(511),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(512),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_bat_body[] = {
       POStoFIXED(0.39151, 0.0727539, -0.339996),
       POStoFIXED(0.491776, 0.21582, 0.279434),
       POStoFIXED(0.0727844, 0.300537, -0.644211),
       POStoFIXED(0.18251, 0.823914, 0.232498),
       POStoFIXED(-0.108673, 0.462128, -0.466064),
       POStoFIXED(-0.145111, 0.858536, 0.174271),
       POStoFIXED(-0.298218, 0.048233, -0.503754),
       POStoFIXED(-0.489792, 0.214783, 0.28157),
       POStoFIXED(0.00123596, 0.280746, 0.596695),
       POStoFIXED(-0.262939, -0.478195, 0.46991),
       POStoFIXED(0.177292, -0.592987, 0.477966),
       POStoFIXED(-0.000671387, -0.394516, -0.447723),
};

XPDATA xpdata_bat_body = {
   
       point_bat_body, sizeof(point_bat_body)/sizeof(POINT),
       polygon_bat_body, sizeof(polygon_bat_body)/sizeof(POLYGON),
       attribute_bat_body,
       normal_bat_body
  
};

//MESH NO.1 : bat_head_Plane
POINT point_bat_head[] = {
       POStoFIXED(-12.5776, -19.0568, -5.44649),
       POStoFIXED(-9.49173, -3.85886, -6.76308),
       POStoFIXED(-10.316, -18.9499, -5.82071),
       POStoFIXED(-4.76868, -3.85446, -6.78427),
       POStoFIXED(-12.4103, -14.7585, -3.04517),
       POStoFIXED(-13.295, -8.79071, -4.36932),
       POStoFIXED(-3.78593, -8.92288, -5.58009),
       POStoFIXED(-5.30081, -14.0585, -4.92432),
       POStoFIXED(12.4676, -19.0568, -5.50052),
       POStoFIXED(9.37611, -3.85886, -6.8038),
       POStoFIXED(10.2044, -18.9499, -5.86499),
       POStoFIXED(4.65302, -3.85446, -6.80458),
       POStoFIXED(12.3107, -14.7585, -3.09851),
       POStoFIXED(13.1897, -8.7907, -4.42647),
       POStoFIXED(3.67546, -8.92288, -5.59619),
       POStoFIXED(5.19318, -14.0585, -4.94698),
       POStoFIXED(7.99515, -2.73457, -7.69533),
       POStoFIXED(7.24678, -6.58354, -7.69373),
       POStoFIXED(5.1539, -2.96938, -17.1906),
       POStoFIXED(5.1539, -4.23936, -17.1906),
       POStoFIXED(1.71107, -5.89156, -7.68176),
       POStoFIXED(1.69058, -3.34785, -17.1831),
       POStoFIXED(1.69058, -5.89153, -17.1831),
       POStoFIXED(5.15807, -2.96939, -15.2592),
       POStoFIXED(5.15807, -4.23936, -15.2592),
       POStoFIXED(1.69475, -5.89153, -15.2517),
       POStoFIXED(4.37071, -6.0882, -15.6961),
       POStoFIXED(4.36844, -6.0882, -16.7504),
       POStoFIXED(2.47794, -6.99005, -16.7463),
       POStoFIXED(2.48021, -6.99005, -15.692),
       POStoFIXED(-8.03627, -2.73457, -7.66071),
       POStoFIXED(-7.28792, -6.58354, -7.66234),
       POStoFIXED(-5.23604, -2.96938, -17.1682),
       POStoFIXED(-5.23604, -4.23936, -17.1682),
       POStoFIXED(-1.75221, -5.89156, -7.6743),
       POStoFIXED(-1.77271, -3.34785, -17.1756),
       POStoFIXED(-1.77271, -5.89153, -17.1756),
       POStoFIXED(-5.23186, -2.96939, -15.2368),
       POStoFIXED(-5.23186, -4.23936, -15.2368),
       POStoFIXED(-1.76855, -5.89153, -15.2443),
       POStoFIXED(-4.44641, -6.0882, -15.677),
       POStoFIXED(-4.44868, -6.0882, -16.7313),
       POStoFIXED(-2.55818, -6.99005, -16.7354),
       POStoFIXED(-2.55589, -6.99005, -15.6811),
       POStoFIXED(7.24678, 0.815567, -7.6937),
       POStoFIXED(5.1539, -2.79854, -17.1906),
       POStoFIXED(5.1539, -1.52853, -17.1906),
       POStoFIXED(1.71107, 0.123581, -7.68173),
       POStoFIXED(1.69058, -2.42007, -17.1831),
       POStoFIXED(1.69058, 0.123611, -17.1831),
       POStoFIXED(5.15807, -2.79854, -15.2592),
       POStoFIXED(1.69475, -2.42007, -15.2517),
       POStoFIXED(-7.28792, 0.815552, -7.66231),
       POStoFIXED(-5.23604, -2.79854, -17.1682),
       POStoFIXED(-5.23604, -1.52853, -17.1682),
       POStoFIXED(-1.75221, 0.123566, -7.67427),
       POStoFIXED(-1.77271, -2.42007, -17.1756),
       POStoFIXED(-1.77274, 0.123611, -17.1756),
       POStoFIXED(-5.23186, -2.79854, -15.2368),
       POStoFIXED(-1.76855, -2.42007, -15.2442),
       POStoFIXED(2.73457, -5.24364, -7.28256),
       POStoFIXED(2.73457, -8.4493, -6.12479),
       POStoFIXED(2.73457, -11.0548, -8.32208),
       POStoFIXED(-0.0726471, -5.93646, -9.20085),
       POStoFIXED(-0.0726471, -9.14212, -8.04308),
       POStoFIXED(0.999603, -7.05748, -12.3047),
       POStoFIXED(0.999603, -10.2631, -11.147),
       POStoFIXED(2.73457, -4.64348, -10.6376),
       POStoFIXED(4.46953, -7.05748, -12.3047),
       POStoFIXED(4.46953, -10.2631, -11.147),
       POStoFIXED(5.54179, -5.93646, -9.20087),
       POStoFIXED(5.54179, -9.14212, -8.04308),
       POStoFIXED(-2.8042, -5.24364, -7.28256),
       POStoFIXED(-2.8042, -8.4493, -6.12479),
       POStoFIXED(-2.8042, -11.0548, -8.32208),
       POStoFIXED(-5.61143, -5.93646, -9.20085),
       POStoFIXED(-5.61143, -9.14212, -8.04308),
       POStoFIXED(-4.53915, -7.05748, -12.3047),
       POStoFIXED(-4.53915, -10.2631, -11.147),
       POStoFIXED(-2.8042, -4.64348, -10.6376),
       POStoFIXED(-1.06924, -7.05748, -12.3047),
       POStoFIXED(-1.06924, -10.2631, -11.147),
       POStoFIXED(0.00302124, -5.93646, -9.20087),
       POStoFIXED(0.00302124, -9.14212, -8.04308),
};

POLYGON polygon_bat_head[] = {
       NORMAL(-0.0644379, -0.320175, -0.94516), VERTICES(6, 3, 1, 5),
       NORMAL(-0.218781, 0.436676, -0.872604), VERTICES(2, 7, 4, 0),
       NORMAL(-0.183273, -0.154221, -0.970886), VERTICES(7, 6, 5, 4),
       NORMAL(0.0603638, -0.32016, -0.945419), VERTICES(9, 11, 14, 13),
       NORMAL(0.215027, 0.436661, -0.873535), VERTICES(12, 15, 10, 8),
       NORMAL(0.179092, -0.154221, -0.971664), VERTICES(13, 14, 15, 12),
       NORMAL(-0.587784, 0.274811, 0.76091), VERTICES(64, 63, 60, 61),
       NORMAL(-0.55246, -0.826553, 0.107666), VERTICES(66, 66, 64, 62),
       NORMAL(-0.95105, -0.104965, -0.290634), VERTICES(66, 65, 63, 64),
       NORMAL(-0.55246, 0.70459, -0.445328), VERTICES(65, 65, 67, 63),
       NORMAL(0, -0.962891, -0.269852), VERTICES(69, 69, 66, 62),
       NORMAL(0, 0.568253, -0.822845), VERTICES(68, 68, 67, 65),
       NORMAL(0.55246, -0.826553, 0.107651), VERTICES(71, 71, 69, 62),
       NORMAL(0.95105, -0.104965, -0.290634), VERTICES(71, 70, 68, 69),
       NORMAL(0.55246, 0.70459, -0.445328), VERTICES(70, 70, 67, 68),
       NORMAL(-0.00230408, -0.638779, 0.769363), VERTICES(61, 71, 62, 83),
       NORMAL(0.587784, 0.274811, 0.760895), VERTICES(61, 60, 70, 71),
       NORMAL(-0.587784, 0.274811, 0.76091), VERTICES(76, 75, 72, 73),
       NORMAL(-0.55246, -0.826553, 0.107651), VERTICES(78, 78, 76, 74),
       NORMAL(-0.95105, -0.104965, -0.290634), VERTICES(78, 77, 75, 76),
       NORMAL(-0.55246, 0.70459, -0.445328), VERTICES(77, 77, 79, 75),
       NORMAL(0, -0.962891, -0.269852), VERTICES(81, 81, 78, 74),
       NORMAL(0, 0.568253, -0.822845), VERTICES(80, 80, 79, 77),
       NORMAL(0.55246, -0.826553, 0.107651), VERTICES(83, 83, 81, 74),
       NORMAL(0.95105, -0.104965, -0.290634), VERTICES(83, 82, 80, 81),
       NORMAL(0.55246, 0.70459, -0.445328), VERTICES(82, 82, 79, 80),
       NORMAL(0.00230408, -0.638779, 0.769363), VERTICES(74, 76, 73, 64),
       NORMAL(0.587784, 0.274811, 0.760895), VERTICES(73, 72, 82, 83),
       NORMAL(0, -0.339691, -0.940536), VERTICES(69, 68, 65, 66),
       NORMAL(0, -0.339691, -0.940536), VERTICES(81, 80, 77, 78),
       NORMAL(0.999985, 0, -0.00215149), VERTICES(18, 19, 24, 23),
       NORMAL(0.154495, -0.973709, -0.167313), VERTICES(25, 20, 17, 24),
       NORMAL(-0.00215149, 0, -0.999985), VERTICES(21, 22, 19, 18),
       NORMAL(-0.81311, -0.582092, 0.0017395), VERTICES(29, 28, 22, 25),
       NORMAL(0.943283, -0.0906525, -0.319351), VERTICES(23, 24, 17, 16),
       NORMAL(0.430557, -0.902557, -0.000915527), VERTICES(28, 29, 26, 27),
       NORMAL(0.136871, -0.282608, 0.949402), VERTICES(26, 29, 25, 24),
       NORMAL(0.920212, -0.391403, -0.00198364), VERTICES(27, 26, 24, 19),
       NORMAL(-0.999985, 0, 0.00215149), VERTICES(38, 33, 32, 37),
       NORMAL(-0.155228, -0.973709, -0.166641), VERTICES(31, 34, 39, 38),
       NORMAL(-0.00215149, 0, -0.999985), VERTICES(33, 36, 35, 32),
       NORMAL(-0.00215149, 0, -0.999985), VERTICES(35, 36, 22, 21),
       NORMAL(0.81311, -0.582077, -0.0017395), VERTICES(36, 42, 43, 39),
       NORMAL(-0.944641, -0.0906525, -0.315292), VERTICES(31, 38, 37, 30),
       NORMAL(-0.430557, -0.902557, 0.000915527), VERTICES(40, 43, 42, 41),
       NORMAL(-0.132767, -0.282623, 0.949982), VERTICES(39, 43, 40, 38),
       NORMAL(-0.920212, -0.391403, 0.00198364), VERTICES(38, 40, 41, 33),
       NORMAL(-0.108627, -0.99408, 0.000228882), VERTICES(45, 48, 51, 50),
       NORMAL(-0.00215149, 0, -0.999985), VERTICES(46, 49, 48, 45),
       NORMAL(0.959915, 0.0998993, -0.261841), VERTICES(46, 45, 16, 44),
       NORMAL(0.108627, -0.99408, -0.000228882), VERTICES(59, 56, 53, 58),
       NORMAL(-0.00215149, 0, -0.999985), VERTICES(56, 57, 54, 53),
       NORMAL(-0.00215149, 0, -0.999985), VERTICES(49, 57, 56, 48),
       NORMAL(0, -1, 0), VERTICES(48, 56, 59, 51),
       NORMAL(0, 1, 0), VERTICES(57, 49, 47, 55),
       NORMAL(-0.960831, 0.0998383, -0.258514), VERTICES(32, 54, 52, 30),
       NORMAL(-0.156784, 0.978378, -0.134811), VERTICES(54, 57, 55, 52),
       NORMAL(0.156204, 0.978378, -0.135483), VERTICES(44, 47, 49, 46),
       NORMAL(0, -1, 0), VERTICES(22, 36, 34, 20),
       NORMAL(0.132751, -0.282608, -0.949997), VERTICES(28, 27, 19, 22),
       NORMAL(-0.136871, -0.282608, -0.949417), VERTICES(33, 41, 42, 36),
};

ATTR attribute_bat_head[] = {
    ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(513),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(514),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(515),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(516),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(517),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(518),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(519),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(520),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(521),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(522),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(523),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(524),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(525),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(526),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(527),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(528),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(529),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(530),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(531),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(532),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(533),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(534),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(535),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(536),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(537),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(538),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(539),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+4, LUTidx(ENEMY_TILESET+4), GRreal(540),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+6, LUTidx(ENEMY_TILESET+6), GRreal(541),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+6, LUTidx(ENEMY_TILESET+6), GRreal(542),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(543),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(544),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(545),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(546),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(751),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(752),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(753),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(754),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(755),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(756),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(757),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(758),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(759),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(760),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(761),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(762),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(763),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(764),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(765),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(766),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(767),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(768),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(769),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(770),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(771),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(772),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(773),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(774),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(775),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+5, LUTidx(ENEMY_TILESET+5), GRreal(776),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+5, LUTidx(ENEMY_TILESET+5), GRreal(777),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_bat_head[] = {
       POStoFIXED(-0.218781, 0.436676, -0.872604),
       POStoFIXED(-0.0644379, -0.320175, -0.94516),
       POStoFIXED(-0.218781, 0.436676, -0.872604),
       POStoFIXED(-0.0644379, -0.320175, -0.94516),
       POStoFIXED(-0.201019, 0.14122, -0.921738),
       POStoFIXED(-0.123856, -0.237198, -0.958023),
       POStoFIXED(-0.123856, -0.237198, -0.958023),
       POStoFIXED(-0.201019, 0.14122, -0.921738),
       POStoFIXED(0.215027, 0.436661, -0.873535),
       POStoFIXED(0.0603638, -0.32016, -0.945419),
       POStoFIXED(0.215027, 0.436661, -0.873535),
       POStoFIXED(0.0603638, -0.32016, -0.945419),
       POStoFIXED(0.197052, 0.14122, -0.922592),
       POStoFIXED(0.11972, -0.237183, -0.958542),
       POStoFIXED(0.11972, -0.237183, -0.958542),
       POStoFIXED(0.197052, 0.14122, -0.922592),
       POStoFIXED(0.951599, 0.00462341, -0.290588),
       POStoFIXED(0.548889, -0.532181, -0.243332),
       POStoFIXED(0.498917, 0, -0.501068),
       POStoFIXED(0.512695, -0.168503, -0.488525),
       POStoFIXED(0.07724, -0.986847, -0.0836487),
       POStoFIXED(-0.00215149, 0, -0.999985),
       POStoFIXED(-0.136932, -0.37294, -0.589645),
       POStoFIXED(0.971634, -0.0453186, -0.160751),
       POStoFIXED(0.630966, -0.347672, 0.0917206),
       POStoFIXED(-0.173904, -0.612793, 0.261276),
       POStoFIXED(0.49588, -0.525513, 0.315491),
       POStoFIXED(0.494507, -0.525513, -0.317627),
       POStoFIXED(-0.0832672, -0.589081, -0.316391),
       POStoFIXED(-0.0818939, -0.589081, 0.316742),
       POStoFIXED(-0.952728, 0.0045929, -0.286896),
       POStoFIXED(-0.549927, -0.532181, -0.240967),
       POStoFIXED(-0.654312, 0.0332794, -0.418777),
       POStoFIXED(-0.514801, -0.168503, -0.486313),
       POStoFIXED(-0.0776062, -0.986847, -0.083313),
       POStoFIXED(-0.00215149, 0, -0.999985),
       POStoFIXED(0.134384, -0.372925, -0.590225),
       POStoFIXED(-0.972305, -0.0453186, -0.15657),
       POStoFIXED(-0.630554, -0.347672, 0.0944366),
       POStoFIXED(0.175034, -0.612793, 0.260529),
       POStoFIXED(-0.494507, -0.525528, 0.317627),
       POStoFIXED(-0.49588, -0.525513, -0.315506),
       POStoFIXED(0.0818939, -0.589081, -0.316742),
       POStoFIXED(0.083252, -0.589081, 0.316376),
       POStoFIXED(0.55806, 0.539139, -0.198654),
       POStoFIXED(0.283035, -0.29805, -0.420532),
       POStoFIXED(0.371323, 0.359421, -0.465759),
       POStoFIXED(0.0780945, 0.989182, -0.0677338),
       POStoFIXED(-0.0282288, -0.49852, -0.499924),
       POStoFIXED(0.0379639, 0.494583, -0.533859),
       POStoFIXED(-0.108627, -0.99408, 0.000228882),
       POStoFIXED(-0.054306, -0.99704, 0.000106812),
       POStoFIXED(-0.558807, 0.539108, -0.196655),
       POStoFIXED(0.0532379, -0.49704, -0.500107),
       POStoFIXED(-0.373245, 0.359406, -0.464432),
       POStoFIXED(-0.0783844, 0.989182, -0.0673981),
       POStoFIXED(0.0260773, -0.49852, -0.500046),
       POStoFIXED(-0.0402679, 0.494583, -0.533691),
       POStoFIXED(0.108627, -0.99408, -0.000228882),
       POStoFIXED(0.054306, -0.99704, -0.000106812),
       POStoFIXED(0, 0.274811, 0.760895),
       POStoFIXED(-0.000762939, -0.0297089, 0.763718),
       POStoFIXED(-0.000564575, -0.81369, 0.178696),
       POStoFIXED(-0.697098, 0.291473, 0.00831604),
       POStoFIXED(-0.522247, -0.323868, 0.336823),
       POStoFIXED(-0.411194, 0.306549, -0.588928),
       POStoFIXED(-0.411194, -0.612122, -0.257126),
       POStoFIXED(0, 0.659134, -0.571167),
       POStoFIXED(0.30069, 0.279282, -0.664429),
       POStoFIXED(0.30069, -0.639389, -0.332642),
       POStoFIXED(0.660934, 0.394745, -0.105087),
       POStoFIXED(0.52829, -0.424408, 0.290985),
       POStoFIXED(0, 0.274811, 0.760895),
       POStoFIXED(0.000762939, -0.0297089, 0.763718),
       POStoFIXED(0.000564575, -0.81369, 0.178696),
       POStoFIXED(-0.697098, 0.291473, 0.00831604),
       POStoFIXED(-0.522247, -0.323868, 0.336823),
       POStoFIXED(-0.411194, 0.306549, -0.588928),
       POStoFIXED(-0.411194, -0.612122, -0.257141),
       POStoFIXED(0, 0.659134, -0.571167),
       POStoFIXED(0.30069, 0.279282, -0.664429),
       POStoFIXED(0.30069, -0.639389, -0.332642),
       POStoFIXED(0.660934, 0.394745, -0.105087),
       POStoFIXED(0.52829, -0.424408, 0.290985),
};

XPDATA xpdata_bat_head[] = {
   {
       point_bat_head, sizeof(point_bat_head)/sizeof(POINT),
       polygon_bat_head, sizeof(polygon_bat_head)/sizeof(POLYGON),
       attribute_bat_head,
       normal_bat_head
  }
};

//MESH NO.2 : bat_Rwing_Plane.001
POINT point_bat_rwing[] = {
       POStoFIXED(-42.2947, 2.25458, 12.2372),
       POStoFIXED(-6.19234, 1.64513, 1.57445),
       POStoFIXED(-42.4453, 1.15567, 6.7979),
       POStoFIXED(-7.0332, -2.35555, -9.09428),
       POStoFIXED(-31.9507, -3.58501, 13.1958),
       POStoFIXED(-17.3983, -0.202103, 13.0425),
       POStoFIXED(-19.4341, -5.60678, -9.4173),
       POStoFIXED(-31.5479, -5.47296, -4.56841),
};

POLYGON polygon_bat_rwing[] = {
       NORMAL(-0.315353, 0.914536, -0.253281), VERTICES(6, 3, 1, 5),
       NORMAL(0.450943, 0.882019, -0.136597), VERTICES(2, 7, 4, 0),
       NORMAL(-0.141037, 0.97644, -0.163254), VERTICES(7, 6, 5, 4),
};

ATTR attribute_bat_rwing[] = {
    ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(778),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(779),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(780),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_bat_rwing[] = {
       POStoFIXED(0.450943, 0.882019, -0.136597),
       POStoFIXED(-0.315353, 0.914536, -0.253281),
       POStoFIXED(0.450943, 0.882019, -0.136597),
       POStoFIXED(-0.315353, 0.914536, -0.253281),
       POStoFIXED(0.154953, 0.92923, -0.149918),
       POStoFIXED(-0.228195, 0.94548, -0.208267),
       POStoFIXED(-0.228195, 0.94548, -0.208267),
       POStoFIXED(0.154953, 0.92923, -0.149918),
};

XPDATA xpdata_bat_rwing[] = {
   {
       point_bat_rwing, sizeof(point_bat_rwing)/sizeof(POINT),
       polygon_bat_rwing, sizeof(polygon_bat_rwing)/sizeof(POLYGON),
       attribute_bat_rwing,
       normal_bat_rwing
  }
};

//MESH NO.3 : bat_Lwing_Plane.002
POINT point_bat_lwing[] = {
       POStoFIXED(42.2448, 2.25459, 12.0547),
       POStoFIXED(6.09676, 1.64513, 1.54793),
       POStoFIXED(42.3719, 1.15569, 6.61485),
       POStoFIXED(6.89157, -2.35555, -9.12433),
       POStoFIXED(31.905, -3.58499, 13.058),
       POStoFIXED(17.3521, -0.202087, 12.9675),
       POStoFIXED(19.291, -5.60678, -9.50087),
       POStoFIXED(31.4256, -5.47296, -4.70432),
};

POLYGON polygon_bat_lwing[] = {
       NORMAL(0.314255, 0.914536, -0.254639), VERTICES(1, 3, 6, 5),
       NORMAL(-0.451538, 0.882019, -0.134644), VERTICES(4, 7, 2, 0),
       NORMAL(0.140335, 0.97644, -0.163864), VERTICES(5, 6, 7, 4),
};

ATTR attribute_bat_lwing[] = {
    ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(781),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(782),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+2, LUTidx(ENEMY_TILESET+2), GRreal(783),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_bat_lwing[] = {
       POStoFIXED(-0.451538, 0.882019, -0.134644),
       POStoFIXED(0.314255, 0.914536, -0.254639),
       POStoFIXED(-0.451538, 0.882019, -0.134644),
       POStoFIXED(0.314255, 0.914536, -0.254639),
       POStoFIXED(-0.155594, 0.92923, -0.149246),
       POStoFIXED(0.227295, 0.94548, -0.209244),
       POStoFIXED(0.227295, 0.94548, -0.209244),
       POStoFIXED(-0.155594, 0.92923, -0.149246),
};

XPDATA xpdata_bat_lwing[] = {
   {
       point_bat_lwing, sizeof(point_bat_lwing)/sizeof(POINT),
       polygon_bat_lwing, sizeof(polygon_bat_lwing)/sizeof(POLYGON),
       attribute_bat_lwing,
       normal_bat_lwing
  }
};


POINT point_frog_body[] = {
       POStoFIXED(0, 10.3226, -11.3894),
       POStoFIXED(0, -3.37538, -16.1071),
       POStoFIXED(0, -10.3226, -11.3894),
       POStoFIXED(9.86351, 10.3226, -5.6947),
       POStoFIXED(13.9491, 0, -8.05351),
       POStoFIXED(9.86351, -10.3226, -5.6947),
       POStoFIXED(9.86351, 10.3226, 5.6947),
       POStoFIXED(13.9491, 0, 8.05353),
       POStoFIXED(9.86351, -10.3226, 5.6947),
       POStoFIXED(0, 10.3226, 11.3894),
       POStoFIXED(0, 0, 16.1071),
       POStoFIXED(0, -10.3226, 11.3894),
       POStoFIXED(0, -14.5984, 0),
       POStoFIXED(0, 14.5984, 0),
       POStoFIXED(-9.86351, 10.3226, 5.6947),
       POStoFIXED(-13.9491, 0, 8.05351),
       POStoFIXED(-9.86351, -10.3226, 5.6947),
       POStoFIXED(-9.86351, 10.3226, -5.6947),
       POStoFIXED(-13.9491, 0, -8.05353),
       POStoFIXED(-9.86351, -10.3226, -5.6947),
       POStoFIXED(-8.49028, -15.5794, -11.7594),
       POStoFIXED(-3.07837, -10.067, -13.5279),
       POStoFIXED(-3.07837, -15.7061, -12.3835),
       POStoFIXED(0.396179, -9.06625, -9.12312),
       POStoFIXED(0.396179, -14.9106, -7.93709),
       POStoFIXED(-1.83665, -8.03452, -4.03929),
       POStoFIXED(-1.83665, -11.2085, -2.85323),
       POStoFIXED(-5.21271, -17.3479, -6.76897),
       POStoFIXED(-5.21271, -6.36642, -8.99754),
       POStoFIXED(-7.44556, -7.90326, -3.39243),
       POStoFIXED(-7.44556, -11.0772, -2.20638),
       POStoFIXED(-10.8216, -8.80371, -7.82944),
       POStoFIXED(-10.8216, -14.648, -6.64337),
       POStoFIXED(-8.49028, -9.94035, -12.9038),
       POStoFIXED(3.21689, -15.5794, -12.3152),
       POStoFIXED(8.90276, -10.067, -12.6106),
       POStoFIXED(8.6042, -15.7061, -11.5058),
       POStoFIXED(11.1078, -9.06625, -7.45186),
       POStoFIXED(10.7984, -14.9106, -6.30688),
       POStoFIXED(7.62602, -8.03452, -3.1266),
       POStoFIXED(7.31659, -11.3583, -1.98161),
       POStoFIXED(5.07899, -17.3479, -6.64252),
       POStoFIXED(5.66042, -6.36642, -8.79393),
       POStoFIXED(2.04259, -7.90324, -3.96544),
       POStoFIXED(1.73315, -11.227, -2.82045),
       POStoFIXED(-0.0590057, -8.80371, -9.12955),
       POStoFIXED(-0.368423, -14.648, -7.98457),
       POStoFIXED(3.51544, -9.94035, -13.42),
};

POLYGON polygon_frog_body[] = {
       NORMAL(0.488724, -0.435516, -0.755936), VERTICES(5, 4, 1, 2),
       NORMAL(0.198853, -0.917496, -0.344437), VERTICES(5, 5, 2, 12),
       NORMAL(0.92981, -0.368011, 0), VERTICES(8, 7, 4, 5),
       NORMAL(0.39772, 0.917496, 0), VERTICES(6, 6, 13, 3),
       NORMAL(0.39772, -0.917496, 0), VERTICES(8, 8, 5, 12),
       NORMAL(0.92981, 0.368011, 0), VERTICES(7, 6, 3, 4),
       NORMAL(0.464905, -0.368011, 0.805237), VERTICES(11, 10, 7, 8),
       NORMAL(0.198853, 0.917496, 0.344437), VERTICES(9, 9, 13, 6),
       NORMAL(0.198853, -0.917496, 0.344437), VERTICES(11, 11, 8, 12),
       NORMAL(0.464905, 0.368011, 0.805237), VERTICES(10, 9, 6, 7),
       NORMAL(-0.464905, -0.368011, 0.805237), VERTICES(16, 15, 10, 11),
       NORMAL(-0.198853, 0.917496, 0.344437), VERTICES(14, 14, 13, 9),
       NORMAL(-0.198853, -0.917496, 0.344437), VERTICES(16, 16, 11, 12),
       NORMAL(-0.464905, 0.368011, 0.805237), VERTICES(15, 14, 9, 10),
       NORMAL(-0.92981, 0.368011, 0), VERTICES(18, 17, 14, 15),
       NORMAL(-0.92981, -0.368011, 0), VERTICES(19, 18, 15, 16),
       NORMAL(-0.39772, 0.917496, 0), VERTICES(17, 17, 13, 14),
       NORMAL(-0.39772, -0.917496, 0), VERTICES(19, 19, 16, 12),
       NORMAL(-0.198853, -0.917496, -0.344437), VERTICES(2, 2, 19, 12),
       NORMAL(-0.488724, -0.435516, -0.755936), VERTICES(2, 1, 18, 19),
       NORMAL(0.413086, -0.640228, 0.647644), VERTICES(26, 26, 24, 27),
       NORMAL(0.926941, 0.103027, 0.360779), VERTICES(26, 25, 23, 24),
       NORMAL(0.0812225, -0.567322, 0.819473), VERTICES(30, 30, 26, 27),
       NORMAL(-0.286209, -0.628281, 0.723404), VERTICES(32, 32, 30, 27),
       NORMAL(-0.821304, 0.156662, 0.548538), VERTICES(32, 31, 29, 30),
       NORMAL(0.234604, -0.650055, 0.722748), VERTICES(40, 40, 38, 41),
       NORMAL(0.799637, 0.100769, 0.591934), VERTICES(40, 39, 37, 38),
       NORMAL(-0.134613, -0.576721, 0.805756), VERTICES(44, 44, 40, 41),
       NORMAL(-0.46698, -0.637741, 0.612518), VERTICES(46, 46, 44, 41),
       NORMAL(-0.935471, 0.153168, 0.318451), VERTICES(46, 45, 43, 44),
       NORMAL(0.198853, 0.917496, -0.344437), VERTICES(3, 3, 13, 0),
       NORMAL(0.443008, 0.325729, -0.835236), VERTICES(4, 3, 0, 1),
       NORMAL(-0.443008, 0.325729, -0.835236), VERTICES(1, 0, 17, 18),
       NORMAL(-0.198853, 0.917496, -0.344437), VERTICES(0, 0, 13, 17),
       NORMAL(-0.116867, -0.19751, -0.973297), VERTICES(22, 21, 33, 20),
       NORMAL(0.141098, -0.19751, -0.970078), VERTICES(36, 35, 47, 34),
       NORMAL(-0.0568848, -0.952209, -0.300064), VERTICES(22, 22, 20, 27),
       NORMAL(-0.0568848, 0.759903, -0.647522), VERTICES(21, 21, 28, 33),
       NORMAL(0.37294, -0.919113, -0.126984), VERTICES(24, 24, 22, 27),
       NORMAL(0.792542, -0.121277, -0.59761), VERTICES(24, 23, 21, 22),
       NORMAL(0.37294, 0.79689, -0.475235), VERTICES(23, 23, 28, 21),
       NORMAL(-0.434067, -0.900238, -0.033905), VERTICES(20, 20, 32, 27),
       NORMAL(-0.91246, -0.0813751, -0.400986), VERTICES(20, 33, 31, 32),
       NORMAL(-0.434082, 0.815781, -0.382156), VERTICES(33, 33, 28, 31),
       NORMAL(0.0233612, -0.952209, -0.304504), VERTICES(36, 36, 34, 41),
       NORMAL(0.114014, 0.759903, -0.639938), VERTICES(35, 35, 42, 47),
       NORMAL(0.393158, -0.919113, -0.0252838), VERTICES(38, 38, 36, 41),
       NORMAL(0.921005, -0.121277, -0.370148), VERTICES(38, 37, 35, 36),
       NORMAL(0.484009, 0.79689, -0.361481), VERTICES(37, 37, 42, 35),
       NORMAL(-0.410187, -0.900238, -0.145981), VERTICES(34, 34, 46, 41),
       NORMAL(-0.776245, -0.0813751, -0.625137), VERTICES(34, 47, 45, 46),
       NORMAL(-0.319336, 0.815781, -0.482178), VERTICES(47, 47, 42, 45),
};

ATTR attribute_frog_body[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(856),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(857),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(858),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(859),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(860),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(861),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(862),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(863),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(864),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(865),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(866),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(867),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(868),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(869),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(870),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(871),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(872),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(873),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(874),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(875),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(876),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(877),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(878),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(879),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(880),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(881),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(882),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(883),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(884),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(885),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(886),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(887),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(888),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(889),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+12, LUTidx(ENEMY_TILESET+12), GRreal(890),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+12, LUTidx(ENEMY_TILESET+12), GRreal(891),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(892),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(893),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(894),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(895),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(896),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(897),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(898),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(899),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(900),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(901),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(902),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(903),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(904),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(905),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(906),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(907),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};



VECTOR normal_frog_body[] = {
       POStoFIXED(-0.0397644, 0.680786, -0.540756),
       POStoFIXED(0, -0.0548859, -0.795578),
       POStoFIXED(-0.0397644, -0.724701, -0.509033),
       POStoFIXED(0.43364, 0.68924, -0.30481),
       POStoFIXED(0.69783, -0.0274353, -0.397781),
       POStoFIXED(0.44278, -0.711197, -0.288956),
       POStoFIXED(0.477798, 0.697693, 0.229935),
       POStoFIXED(0.697357, 0, 0.402618),
       POStoFIXED(0.477798, -0.697693, 0.229935),
       POStoFIXED(0.0397644, 0.697693, 0.528748),
       POStoFIXED(0, 0, 0.805237),
       POStoFIXED(0.0397644, -0.697693, 0.528748),
       POStoFIXED(0, -0.917496, 0),
       POStoFIXED(0, 0.917496, 0),
       POStoFIXED(-0.438019, 0.697693, 0.298813),
       POStoFIXED(-0.697357, 0, 0.402618),
       POStoFIXED(-0.438019, -0.697693, 0.298813),
       POStoFIXED(-0.473419, 0.68924, -0.235931),
       POStoFIXED(-0.69783, -0.0274353, -0.397781),
       POStoFIXED(-0.482559, -0.711197, -0.220062),
       POStoFIXED(-0.390869, -0.606308, -0.348419),
       POStoFIXED(0.186966, 0.399582, -0.668228),
       POStoFIXED(0.186966, -0.628464, -0.459595),
       POStoFIXED(0.616333, 0.393875, -0.296814),
       POStoFIXED(0.575684, -0.499329, 0.0313568),
       POStoFIXED(0.926941, 0.103027, 0.360779),
       POStoFIXED(0.458572, -0.436188, 0.618881),
       POStoFIXED(0.0150146, -0.767899, 0.288254),
       POStoFIXED(-0.0393372, 0.790848, -0.501633),
       POStoFIXED(-0.821304, 0.156662, 0.548538),
       POStoFIXED(-0.236267, -0.401566, 0.727722),
       POStoFIXED(-0.72261, 0.297012, -0.0782013),
       POStoFIXED(-0.54805, -0.41629, 0.312088),
       POStoFIXED(-0.390869, 0.422516, -0.55722),
       POStoFIXED(-0.286423, -0.606308, -0.438324),
       POStoFIXED(0.354828, 0.399582, -0.596313),
       POStoFIXED(0.300385, -0.628464, -0.394897),
       POStoFIXED(0.672165, 0.393311, -0.12529),
       POStoFIXED(0.548309, -0.501755, 0.178787),
       POStoFIXED(0.799637, 0.100769, 0.591934),
       POStoFIXED(0.283554, -0.444016, 0.710785),
       POStoFIXED(-0.0601044, -0.772675, 0.277542),
       POStoFIXED(0.0928955, 0.790848, -0.494522),
       POStoFIXED(-0.935471, 0.153168, 0.318451),
       POStoFIXED(-0.417908, -0.4095, 0.63562),
       POStoFIXED(-0.677017, 0.295853, -0.262955),
       POStoFIXED(-0.61116, -0.420776, 0.154465),
       POStoFIXED(-0.231949, 0.422516, -0.639893),
};

XPDATA xpdata_frog_body = {
   
       point_frog_body, sizeof(point_frog_body)/sizeof(POINT),
       polygon_frog_body, sizeof(polygon_frog_body)/sizeof(POLYGON),
       attribute_frog_body,
       normal_frog_body
  
};

//MESH NO.1 : Leg1_Cylinder.011
POINT point_frog_LLeg1[] = {
       POStoFIXED(0.00421143, 0.0381165, -6.65547),
       POStoFIXED(-0.0154266, 17.6866, -3.19588),
       POStoFIXED(5.76802, 0.0419312, 3.32771),
       POStoFIXED(2.75227, 17.6884, 1.59793),
       POStoFIXED(-5.75957, 0.034317, 3.32771),
       POStoFIXED(-2.78314, 17.6848, 1.59793),
};

POLYGON polygon_frog_LLeg1[] = {
       NORMAL(0.861786, 0.0984955, -0.497589), VERTICES(2, 3, 1, 0),
       NORMAL(-6.10352e-005, 0.0975342, 0.995224), VERTICES(4, 5, 3, 2),
       NORMAL(-0.000656128, 0.999985, 0), VERTICES(5, 5, 1, 3),
       NORMAL(-0.861984, 0.0965881, -0.49762), VERTICES(0, 1, 5, 4),
};

ATTR attribute_frog_LLeg1[] = {
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(908),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(909),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(910),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(911),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};



VECTOR normal_frog_LLeg1[] = {
       POStoFIXED(-9.15527e-005, 0.0975342, -0.497604),
       POStoFIXED(-0.000274658, 0.398346, -0.331726),
       POStoFIXED(0.430862, 0.0980072, 0.24881),
       POStoFIXED(0.287018, 0.398666, 0.165878),
       POStoFIXED(-0.431015, 0.0970612, 0.248795),
       POStoFIXED(-0.215836, 0.548523, 0.12439),
};

XPDATA xpdata_frog_LLeg1[] = {
   {
       point_frog_LLeg1, sizeof(point_frog_LLeg1)/sizeof(POINT),
       polygon_frog_LLeg1, sizeof(polygon_frog_LLeg1)/sizeof(POLYGON),
       attribute_frog_LLeg1,
       normal_frog_LLeg1
  }
};

//MESH NO.2 : Leg2_Cylinder.012
POINT point_frog_LLeg2[] = {
       POStoFIXED(0.00909424, 0.0756836, -3.19588),
       POStoFIXED(0.346436, 16.9734, -2.81),
       POStoFIXED(2.77679, 0.0872192, 1.59795),
       POStoFIXED(2.77995, 16.9835, 1.405),
       POStoFIXED(-2.75859, 0.0641632, 1.59795),
       POStoFIXED(-2.08705, 16.9633, 1.405),
};

POLYGON polygon_frog_LLeg2[] = {
       NORMAL(0.866013, -0.00585938, -0.499969), VERTICES(2, 3, 1, 0),
       NORMAL(-4.57764e-005, 0.0114136, 0.999924), VERTICES(4, 5, 3, 2),
       NORMAL(0.00415039, -0.999985, 0), VERTICES(4, 4, 2, 0),
       NORMAL(-0.865692, 0.0286865, -0.499725), VERTICES(0, 1, 5, 4),
};

ATTR attribute_frog_LLeg2[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(912),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(913),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(914),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(915),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};



VECTOR normal_frog_LLeg2[] = {
       POStoFIXED(0.0014801, -0.325714, -0.333221),
       POStoFIXED(0.000152588, 0.0114136, -0.499847),
       POStoFIXED(0.290039, -0.331467, 0.166641),
       POStoFIXED(0.432983, 0.0027771, 0.249969),
       POStoFIXED(-0.214355, -0.48996, 0.125046),
       POStoFIXED(-0.432861, 0.02005, 0.250092),
};

XPDATA xpdata_frog_LLeg2[] = {
   {
       point_frog_LLeg2, sizeof(point_frog_LLeg2)/sizeof(POINT),
       polygon_frog_LLeg2, sizeof(polygon_frog_LLeg2)/sizeof(POLYGON),
       attribute_frog_LLeg2,
       normal_frog_LLeg2
  }
};

//MESH NO.3 : Leg3_Cylinder.013
POINT point_frog_Leg3[] = {
       POStoFIXED(4.95888, 4.25948, -4.06778),
       POStoFIXED(3.68271, 4.25948, 2.29451),
       POStoFIXED(0.784271, 0.0507507, -4.90514),
       POStoFIXED(-0.491882, 0.0507507, 1.45714),
       POStoFIXED(-3.39035, 4.25948, -5.74248),
       POStoFIXED(-4.6665, 4.25948, 0.619797),
};

POLYGON polygon_frog_Leg3[] = {
       NORMAL(0.68927, -0.711182, 0.138245), VERTICES(2, 3, 1, 0),
       NORMAL(-0.689255, -0.711182, -0.138245), VERTICES(4, 5, 3, 2),
       NORMAL(-0.196655, 0, 0.980469), VERTICES(5, 5, 1, 3),
       NORMAL(0.196655, 0, -0.980469), VERTICES(4, 4, 2, 0),
       NORMAL(-0.0526123, -0.797775, 0.600647), VERTICES(1, 0, 2, 4),
};

ATTR attribute_frog_Leg3[] = {
    ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(916),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(917),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(918),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(919),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(920),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};



VECTOR normal_frog_Leg3[] = {
       POStoFIXED(0.277771, -0.502975, -0.0805206),
       POStoFIXED(0.146667, -0.502975, 0.57312),
       POStoFIXED(0.0360107, -0.555023, -0.0949554),
       POStoFIXED(-0.0655365, -0.474121, 0.326813),
       POStoFIXED(-0.0871277, -0.377228, -0.374634),
       POStoFIXED(-0.360855, -0.237061, 0.607559),
};

XPDATA xpdata_frog_Leg3[] = {
   {
       point_frog_Leg3, sizeof(point_frog_Leg3)/sizeof(POINT),
       polygon_frog_Leg3, sizeof(polygon_frog_Leg3)/sizeof(POLYGON),
       attribute_frog_Leg3,
       normal_frog_Leg3
  }
};

POINT point_frog_RLeg1[] = {
       POStoFIXED(5.76169, 0.0381165, 3.33139),
       POStoFIXED(2.77544, 17.6866, 1.58456),
       POStoFIXED(-5.76591, 0.0419312, 3.33139),
       POStoFIXED(-2.75999, 17.6884, 1.58456),
       POStoFIXED(-0.00210571, 0.034317, -6.65179),
       POStoFIXED(0.00770569, 17.6848, -3.20924),
};

POLYGON polygon_frog_RLeg1[] = {
       NORMAL(3.05176e-005, 0.0984955, 0.995132), VERTICES(2, 3, 1, 0),
       NORMAL(-0.861862, 0.0975342, -0.497665), VERTICES(4, 5, 3, 2),
       NORMAL(0.000320435, 0.999985, -0.000564575), VERTICES(5, 5, 1, 3),
       NORMAL(0.861954, 0.0965881, -0.497681), VERTICES(0, 1, 5, 4),
};

ATTR attribute_frog_RLeg1[] = {
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(921),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(922),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(923),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(924),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_frog_RLeg1[] = {
       POStoFIXED(0.430984, 0.0975342, 0.248718),
       POStoFIXED(0.28743, 0.398346, 0.165619),
       POStoFIXED(-0.430908, 0.0980072, 0.248734),
       POStoFIXED(-0.28717, 0.398666, 0.165634),
       POStoFIXED(4.57764e-005, 0.0970612, -0.497665),
       POStoFIXED(0.000183105, 0.548523, -0.249115),
};

XPDATA xpdata_frog_RLeg1[] = {
   {
       point_frog_RLeg1, sizeof(point_frog_RLeg1)/sizeof(POINT),
       polygon_frog_RLeg1, sizeof(polygon_frog_RLeg1)/sizeof(POLYGON),
       attribute_frog_RLeg1,
       normal_frog_RLeg1
  }
};

//MESH NO.2 : Leg2_Cylinder.012
POINT pointfrog_RLeg2[] = {
       POStoFIXED(2.76315, 0.0756836, 1.60583),
       POStoFIXED(2.2603, 16.9734, 1.70503),
       POStoFIXED(-2.77225, 0.0872192, 1.6058),
       POStoFIXED(-2.60675, 16.9835, 1.70502),
       POStoFIXED(-0.00454712, 0.0641632, -3.18797),
       POStoFIXED(-0.173218, 16.9633, -2.50995),
};

POLYGON polygonfrog_RLeg2[] = {
       NORMAL(-1.52588e-005, -0.00585938, 0.999969), VERTICES(2, 3, 1, 0),
       NORMAL(-0.865936, 0.0114136, -0.5), VERTICES(4, 5, 3, 2),
       NORMAL(-0.0020752, -0.999985, 0.00360107), VERTICES(4, 4, 2, 0),
       NORMAL(0.865631, 0.0286865, -0.499832), VERTICES(0, 1, 5, 4),
};

ATTR attributefrog_RLeg2[] = {
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(925),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(926),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(927),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(928),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normalfrog_RLeg2[] = {
       POStoFIXED(0.287842, -0.325714, 0.167908),
       POStoFIXED(0.4328, 0.0114136, 0.250061),
       POStoFIXED(-0.289337, -0.331467, 0.167847),
       POStoFIXED(-0.432968, 0.0027771, 0.249985),
       POStoFIXED(-0.00111389, -0.48996, -0.248154),
       POStoFIXED(-0.000152588, 0.02005, -0.499908),
};

XPDATA xpdata_frog_RLeg2[] = {
   {
       pointfrog_RLeg2, sizeof(pointfrog_RLeg2)/sizeof(POINT),
       polygonfrog_RLeg2, sizeof(polygonfrog_RLeg2)/sizeof(POLYGON),
       attributefrog_RLeg2,
       normalfrog_RLeg2
  }
};

/*POINT point_fish[] = {
       POStoFIXED(-1.01578, -8.80635, 3.50833),
       POStoFIXED(7.27519, 3.59703, 1.39037),
       POStoFIXED(7.20988, -7.35509, -1.74026),
       POStoFIXED(16.1038, 2.33878, 5.60808),
       POStoFIXED(16.0385, -8.61336, 2.47743),
       POStoFIXED(16.1013, -2.76743, 15.229),
       POStoFIXED(16.0456, -11.0086, 12.5555),
       POStoFIXED(7.78012, -15.5407, 6.16071),
       POStoFIXED(7.91074, 6.36359, 12.422),
       POStoFIXED(9.07671, -3.85947, 19.7112),
       POStoFIXED(9.02095, -12.1007, 17.0377),
       POStoFIXED(-0.34761, -0.563721, 16.1053),
       POStoFIXED(-0.412903, -11.5159, 12.9746),
       POStoFIXED(-0.950485, 2.14578, 6.63896),
       POStoFIXED(0, -5.78818, -17.6333),
       POStoFIXED(0, -17.718, -4.0565),
       POStoFIXED(0, -13.3696, 11.0516),
       POStoFIXED(3.12801, 1.16263, -17.0614),
       POStoFIXED(16.8306, -8.03896, -3.18011),
       POStoFIXED(11.901, -6.51324, 11.0918),
       POStoFIXED(3.12801, 4.76038, -16.7356),
       POStoFIXED(16.8306, 11.319, -1.99594),
       POStoFIXED(11.901, 8.46008, 9.76057),
       POStoFIXED(0, 9.52942, -16.1637),
       POStoFIXED(0, 18.0087, -0.550995),
       POStoFIXED(0, 14.0175, 12.6378),
       POStoFIXED(0, 4.6032, 17.5516),
       POStoFIXED(0, 3.50887, -22.9438),
       POStoFIXED(-3.12801, 4.76038, -16.7356),
       POStoFIXED(-16.8306, 11.319, -1.99594),
       POStoFIXED(-11.901, 8.46008, 9.76057),
       POStoFIXED(-3.12801, 1.16263, -17.0614),
       POStoFIXED(-16.8306, -8.03896, -3.18013),
       POStoFIXED(-11.901, -6.51326, 11.0918),
       POStoFIXED(0, -11.4339, -32.2547),
       POStoFIXED(0, 17.931, -29.0008),
       POStoFIXED(0, -18.009, -20.0925),
       POStoFIXED(0, -19.4679, -12.3794),
       POStoFIXED(-7.78937, -7.2196, -1.65172),
       POStoFIXED(0.951645, 2.70625, 5.56923),
       POStoFIXED(1.17152, -8.2184, 2.3508),
       POStoFIXED(1.86333, -0.0526733, 14.9965),
       POStoFIXED(2.08322, -10.9773, 11.778),
       POStoFIXED(-6.94839, -3.7538, 19.7913),
       POStoFIXED(-6.76686, -11.7508, 17.1344),
       POStoFIXED(-6.76773, -15.4409, 6.16629),
       POStoFIXED(-7.20753, 6.4084, 12.6032),
       POStoFIXED(-14.3459, -3.02266, 16.4871),
       POStoFIXED(-14.1644, -11.0197, 13.8301),
       POStoFIXED(-16.0585, 1.94487, 6.99141),
       POStoFIXED(-15.8386, -8.97975, 3.77298),
       POStoFIXED(-8.00928, 3.70503, 1.5667),
};

POLYGON polygon_fish[] = {
       NORMAL(-0.551971, 0.232208, -0.800858), VERTICES(2, 1, 13, 0),
       NORMAL(-0.301407, 0.928802, -0.215561), VERTICES(1, 1, 8, 13),
       NORMAL(0.446121, 0.2435, -0.861191), VERTICES(4, 3, 1, 2),
       NORMAL(0.252228, 0.935074, -0.249023), VERTICES(3, 3, 8, 1),
       NORMAL(-0.998108, -0.0112915, 0.060318), VERTICES(0, 13, 11, 12),
       NORMAL(-0.548874, 0.793732, 0.262131), VERTICES(13, 13, 8, 11),
       NORMAL(0.477982, -0.842392, 0.248749), VERTICES(19, 18, 15, 16),
       NORMAL(0.783508, -0.308197, -0.539551), VERTICES(17, 17, 27, 14),
       NORMAL(0.18927, -0.333954, 0.923386), VERTICES(19, 19, 16, 26),
       NORMAL(0.601395, -0.483215, -0.63623), VERTICES(18, 17, 14, 15),
       NORMAL(0.888916, 0.0413055, -0.456192), VERTICES(20, 20, 27, 17),
       NORMAL(0.529007, 0.0751495, 0.845276), VERTICES(22, 22, 19, 26),
       NORMAL(0.723663, 0.0521851, -0.688171), VERTICES(21, 20, 17, 18),
       NORMAL(0.934021, 0.00508118, 0.357162), VERTICES(22, 21, 18, 19),
       NORMAL(0.419098, 0.849518, 0.320419), VERTICES(25, 24, 21, 22),
       NORMAL(0.713593, 0.523834, -0.465149), VERTICES(23, 23, 27, 20),
       NORMAL(0.395325, 0.425003, 0.814285), VERTICES(25, 25, 22, 26),
       NORMAL(0.494095, 0.683945, -0.536713), VERTICES(24, 23, 20, 21),
       NORMAL(-0.419098, 0.849518, 0.320419), VERTICES(30, 29, 24, 25),
       NORMAL(-0.713593, 0.523834, -0.465149), VERTICES(28, 28, 27, 23),
       NORMAL(-0.395325, 0.425003, 0.814285), VERTICES(30, 30, 25, 26),
       NORMAL(-0.494095, 0.683945, -0.536713), VERTICES(29, 28, 23, 24),
       NORMAL(-0.934021, 0.00508118, 0.357162), VERTICES(33, 32, 29, 30),
       NORMAL(-0.888916, 0.0413055, -0.456192), VERTICES(31, 31, 27, 28),
       NORMAL(-0.529007, 0.0751495, 0.845276), VERTICES(33, 33, 30, 26),
       NORMAL(-0.723663, 0.0521851, -0.688171), VERTICES(32, 31, 28, 29),
       NORMAL(-0.477982, -0.842392, 0.248749), VERTICES(16, 15, 32, 33),
       NORMAL(-0.783508, -0.308197, -0.539551), VERTICES(14, 14, 27, 31),
       NORMAL(-0.18927, -0.333954, 0.923386), VERTICES(16, 16, 33, 26),
       NORMAL(-0.601395, -0.483215, -0.636246), VERTICES(15, 14, 31, 32),
       NORMAL(-1, 0, 0), VERTICES(34, 34, 27, 14),
       NORMAL(-1, 0, 0), VERTICES(23, 23, 27, 35),
       NORMAL(-1, 0, 0), VERTICES(37, 36, 14, 15),
       NORMAL(-0.310944, -0.671173, -0.672913), VERTICES(2, 2, 0, 7),
       NORMAL(0.242691, -0.664917, -0.706375), VERTICES(4, 4, 2, 7),
       NORMAL(0.580353, -0.792191, -0.18869), VERTICES(6, 6, 4, 7),
       NORMAL(0.999969, -0.00561523, -0.00236511), VERTICES(6, 5, 3, 4),
       NORMAL(0.635864, 0.681656, 0.361938), VERTICES(5, 5, 8, 3),
       NORMAL(0.305481, -0.917328, 0.255264), VERTICES(10, 10, 6, 7),
       NORMAL(0.379379, 0.565445, 0.732346), VERTICES(9, 9, 8, 5),
       NORMAL(-0.193604, -0.928833, 0.315842), VERTICES(12, 12, 10, 7),
       NORMAL(-0.409332, -0.263779, 0.873413), VERTICES(12, 11, 9, 10),
       NORMAL(-0.113129, 0.568237, 0.815033), VERTICES(11, 11, 8, 9),
       NORMAL(-0.558411, -0.806259, -0.195206), VERTICES(0, 0, 12, 7),
       NORMAL(0.247772, -0.651276, -0.717239), VERTICES(40, 40, 38, 45),
       NORMAL(0.417725, 0.264481, -0.869217), VERTICES(40, 39, 51, 38),
       NORMAL(0.215637, 0.944687, -0.247055), VERTICES(39, 39, 46, 51),
       NORMAL(0.568283, -0.773254, -0.28125), VERTICES(42, 42, 40, 45),
       NORMAL(0.995529, 0.0445557, -0.0832214), VERTICES(42, 41, 39, 40),
       NORMAL(0.536148, 0.822708, 0.188904), VERTICES(41, 41, 46, 39),
       NORMAL(0.265884, -0.913681, 0.307373), VERTICES(44, 44, 42, 45),
       NORMAL(0.528824, -0.243408, 0.813065), VERTICES(44, 43, 41, 42),
       NORMAL(0.195129, 0.569687, 0.798355), VERTICES(43, 43, 46, 41),
       NORMAL(-0.229782, -0.922424, 0.310349), VERTICES(48, 48, 44, 45),
       NORMAL(-0.295883, 0.54657, 0.783386), VERTICES(47, 47, 46, 43),
       NORMAL(-0.565887, -0.821289, -0.0723724), VERTICES(50, 50, 48, 45),
       NORMAL(-0.986862, -0.0671387, 0.146912), VERTICES(50, 49, 47, 48),
       NORMAL(-0.6129, 0.649323, 0.450226), VERTICES(49, 49, 46, 47),
       NORMAL(-0.304443, -0.67598, -0.671066), VERTICES(38, 38, 50, 45),
       NORMAL(-0.577789, 0.21991, -0.78598), VERTICES(38, 51, 49, 50),
       NORMAL(-0.336563, 0.919968, -0.200897), VERTICES(51, 51, 46, 49),
       NORMAL(0.547745, -0.26152, 0.794708), VERTICES(10, 9, 5, 6),
       NORMAL(-0.413803, -0.295471, 0.861069), VERTICES(48, 47, 43, 44),
};

ATTR attribute_fish[] = {
	ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(829),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(830),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(831),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(832),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(833),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(834),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(835),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(836),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(837),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(838),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(839),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(840),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(841),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(842),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(843),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(844),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(845),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(846),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(847),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(848),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(849),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(850),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(851),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(852),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(853),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(854),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(855),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(856),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(857),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(858),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(859),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(860),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+10, LUTidx(ENEMY_TILESET+10), GRreal(861),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(862),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(863),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(864),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(865),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(866),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(867),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(868),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(869),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(870),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(871),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(872),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(873),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(874),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(875),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(876),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(877),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(878),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(879),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(880),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(881),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(882),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(883),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(884),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(885),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(886),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(887),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(888),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(889),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 3, LUTidx(3), GRreal(890),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 3, LUTidx(3), GRreal(891),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),


};

VECTOR normal_fish[] = {
       POStoFIXED(-0.595566, -0.412552, -0.360764),
       POStoFIXED(-0.0912781, 0.653671, -0.46843),
       POStoFIXED(-0.0970001, -0.306305, -0.742844),
       POStoFIXED(0.517273, 0.557938, -0.199921),
       POStoFIXED(0.502365, -0.376816, -0.492996),
       POStoFIXED(0.639755, 0.332321, 0.449707),
       POStoFIXED(0.602768, -0.553757, 0.134033),
       POStoFIXED(0.0109253, -0.796783, -0.198669),
       POStoFIXED(0.0506744, 0.745483, 0.28447),
       POStoFIXED(0.156799, 0.234756, 0.789566),
       POStoFIXED(0.111145, -0.657745, 0.498886),
       POStoFIXED(-0.436508, 0.331024, 0.565186),
       POStoFIXED(-0.470612, -0.587799, 0.274033),
       POStoFIXED(-0.589844, 0.547424, -0.0863647),
       POStoFIXED(-0.397644, -0.270142, -0.41301),
       POStoFIXED(-0.199997, -0.530243, -0.154984),
       POStoFIXED(-0.0378418, -0.537323, 0.653519),
       POStoFIXED(0.756195, -0.201218, -0.57193),
       POStoFIXED(0.684265, -0.317078, -0.179611),
       POStoFIXED(0.463898, -0.286011, 0.659592),
       POStoFIXED(0.741837, 0.268509, -0.520477),
       POStoFIXED(0.642715, 0.397675, -0.136826),
       POStoFIXED(0.561279, 0.28598, 0.636475),
       POStoFIXED(-0.183762, 0.419907, -0.352692),
       POStoFIXED(0, 0.766724, -0.108139),
       POStoFIXED(0.0790558, 0.594803, 0.61673),
       POStoFIXED(0, 0.0553894, 0.860977),
       POStoFIXED(-0.25, 0.0642242, -0.365219),
       POStoFIXED(-0.706772, 0.365021, -0.522263),
       POStoFIXED(-0.642715, 0.397675, -0.136826),
       POStoFIXED(-0.534546, 0.355942, 0.63028),
       POStoFIXED(-0.777267, -0.131317, -0.555267),
       POStoFIXED(-0.684265, -0.317078, -0.179626),
       POStoFIXED(-0.531845, -0.204193, 0.643967),
       POStoFIXED(-1, 0, 0),
       POStoFIXED(-1, 0, 0),
       POStoFIXED(-1, 0, 0),
       POStoFIXED(-1, 0, 0),
       POStoFIXED(-0.104233, -0.303757, -0.742905),
       POStoFIXED(0.476135, 0.604218, -0.251526),
       POStoFIXED(0.495407, -0.353348, -0.53363),
       POStoFIXED(0.55835, 0.403244, 0.381195),
       POStoFIXED(0.585358, -0.531799, 0.0949402),
       POStoFIXED(0.0418701, 0.229401, 0.810837),
       POStoFIXED(0.0833893, -0.65773, 0.519836),
       POStoFIXED(-0.00302124, -0.792984, -0.187363),
       POStoFIXED(-0.0497284, 0.742157, 0.295486),
       POStoFIXED(-0.521057, 0.27597, 0.604996),
       POStoFIXED(-0.485214, -0.605743, 0.311249),
       POStoFIXED(-0.625397, 0.474274, 0.012085),
       POStoFIXED(-0.600174, -0.433151, -0.29097),
       POStoFIXED(-0.123505, 0.653793, -0.4608),
};

XPDATA xpdata_fish = {
   
       point_fish, sizeof(point_fish)/sizeof(POINT),
       polygon_fish, sizeof(polygon_fish)/sizeof(POLYGON),
       attribute_fish,
       normal_fish
  
};*/

POINT point_fish_body[] = {
       POStoFIXED(0.851532, -12.7732, -4.71637),
       POStoFIXED(-4.93854, -4.11118, -3.23729),
       POStoFIXED(-4.89293, -11.7597, -1.05096),
       POStoFIXED(-11.104, -4.9899, -6.18275),
       POStoFIXED(-11.0584, -12.6384, -3.99644),
       POStoFIXED(-11.1024, -8.55588, -12.9016),
       POStoFIXED(-11.0634, -14.3112, -11.0345),
       POStoFIXED(-5.29117, -17.4762, -6.5687),
       POStoFIXED(-5.38237, -2.17912, -10.9413),
       POStoFIXED(-6.19666, -9.31851, -16.0318),
       POStoFIXED(-6.1577, -15.0738, -14.1647),
       POStoFIXED(0.384888, -7.01689, -13.5136),
       POStoFIXED(0.430511, -14.6654, -11.3273),
       POStoFIXED(0.805908, -5.12468, -6.90268),
       POStoFIXED(0.142136, -10.6654, 10.048),
       POStoFIXED(0.142136, -18.9967, 0.566589),
       POStoFIXED(0.142136, -15.96, -9.98427),
       POStoFIXED(-2.04233, -5.81128, 9.64864),
       POStoFIXED(-11.6116, -12.2373, -0.0454254),
       POStoFIXED(-8.16902, -11.1718, -10.0124),
       POStoFIXED(-2.04233, -3.29875, 9.42113),
       POStoFIXED(-11.6116, 1.28152, -0.872406),
       POStoFIXED(-8.16902, -0.715027, -9.08269),
       POStoFIXED(0.142136, 0.031723, 9.02174),
       POStoFIXED(0.142136, 5.95331, -1.88152),
       POStoFIXED(0.142136, 3.16602, -11.0921),
       POStoFIXED(0.142136, -3.40852, -14.5236),
       POStoFIXED(2.32661, -3.29875, 9.42113),
       POStoFIXED(11.8959, 1.28152, -0.872406),
       POStoFIXED(8.45331, -0.715027, -9.0827),
       POStoFIXED(2.32661, -5.81128, 9.64864),
       POStoFIXED(11.8959, -12.2373, -0.0454254),
       POStoFIXED(8.45331, -11.1718, -10.0124),
       POStoFIXED(5.58191, -11.6651, -1.11281),
       POStoFIXED(-0.522446, -4.73328, -6.15562),
       POStoFIXED(-0.67601, -12.3626, -3.908),
       POStoFIXED(-1.15913, -6.66, -12.7392),
       POStoFIXED(-1.3127, -14.2893, -10.4916),
       POStoFIXED(4.9946, -9.24472, -16.0877),
       POStoFIXED(4.86783, -14.8295, -14.2322),
       POStoFIXED(4.86844, -17.4065, -6.5726),
       POStoFIXED(5.17558, -2.14783, -11.0678),
       POStoFIXED(10.1608, -8.73412, -13.7802),
       POStoFIXED(10.034, -14.3189, -11.9247),
       POStoFIXED(11.3567, -5.26498, -7.14882),
       POStoFIXED(11.2032, -12.8943, -4.90121),
       POStoFIXED(5.73547, -4.03577, -3.36043),
};

POLYGON polygon_fish_body[] = {
       NORMAL(0.551971, 0.232208, 0.800858), VERTICES(2, 1, 13, 0),
       NORMAL(0.301407, 0.928802, 0.215561), VERTICES(1, 1, 8, 13),
       NORMAL(-0.446121, 0.2435, 0.861191), VERTICES(4, 3, 1, 2),
       NORMAL(-0.252228, 0.935074, 0.249023), VERTICES(3, 3, 8, 1),
       NORMAL(0.998108, -0.0112915, -0.0603333), VERTICES(0, 13, 11, 12),
       NORMAL(0.548874, 0.793732, -0.262131), VERTICES(13, 13, 8, 11),
       NORMAL(-0.477982, -0.842392, -0.248749), VERTICES(19, 18, 15, 16),
       NORMAL(-0.18927, -0.333954, -0.923386), VERTICES(19, 19, 16, 26),
       NORMAL(-0.601395, -0.483215, 0.636246), VERTICES(18, 17, 14, 15),
       NORMAL(-0.529007, 0.0751495, -0.845276), VERTICES(22, 22, 19, 26),
       NORMAL(-0.723663, 0.0521851, 0.688171), VERTICES(21, 20, 17, 18),
       NORMAL(-0.934021, 0.00508118, -0.357147), VERTICES(22, 21, 18, 19),
       NORMAL(-0.419098, 0.849518, -0.320404), VERTICES(25, 24, 21, 22),
       NORMAL(-0.395325, 0.425003, -0.814285), VERTICES(25, 25, 22, 26),
       NORMAL(-0.494095, 0.683945, 0.536713), VERTICES(24, 23, 20, 21),
       NORMAL(0.419098, 0.849518, -0.320404), VERTICES(29, 28, 24, 25),
       NORMAL(0.395325, 0.425018, -0.814285), VERTICES(29, 29, 25, 26),
       NORMAL(0.494095, 0.683945, 0.536713), VERTICES(28, 27, 23, 24),
       NORMAL(0.934021, 0.00508118, -0.357147), VERTICES(32, 31, 28, 29),
       NORMAL(0.529007, 0.0751343, -0.845276), VERTICES(32, 32, 29, 26),
       NORMAL(0.723663, 0.0521851, 0.688171), VERTICES(31, 30, 27, 28),
       NORMAL(0.477982, -0.842392, -0.248749), VERTICES(16, 15, 31, 32),
       NORMAL(0.18927, -0.333954, -0.923386), VERTICES(16, 16, 32, 26),
       NORMAL(0.601395, -0.483215, 0.63623), VERTICES(15, 14, 30, 31),
       NORMAL(0.310944, -0.671173, 0.672913), VERTICES(2, 2, 0, 7),
       NORMAL(-0.242691, -0.664917, 0.706375), VERTICES(4, 4, 2, 7),
       NORMAL(-0.580353, -0.792191, 0.18869), VERTICES(6, 6, 4, 7),
       NORMAL(-0.999969, -0.00561523, 0.00236511), VERTICES(6, 5, 3, 4),
       NORMAL(-0.63588, 0.681641, -0.361938), VERTICES(5, 5, 8, 3),
       NORMAL(-0.305481, -0.917328, -0.255264), VERTICES(10, 10, 6, 7),
       NORMAL(-0.379379, 0.565445, -0.732346), VERTICES(9, 9, 8, 5),
       NORMAL(0.193604, -0.928833, -0.315842), VERTICES(12, 12, 10, 7),
       NORMAL(0.409332, -0.263779, -0.873413), VERTICES(12, 11, 9, 10),
       NORMAL(0.113129, 0.568237, -0.815048), VERTICES(11, 11, 8, 9),
       NORMAL(0.558411, -0.806259, 0.195206), VERTICES(0, 0, 12, 7),
       NORMAL(-0.247772, -0.651276, 0.717239), VERTICES(35, 35, 33, 40),
       NORMAL(-0.417725, 0.264481, 0.869217), VERTICES(35, 34, 46, 33),
       NORMAL(-0.215652, 0.944687, 0.24707), VERTICES(34, 34, 41, 46),
       NORMAL(-0.568283, -0.773254, 0.28125), VERTICES(37, 37, 35, 40),
       NORMAL(-0.995529, 0.0445557, 0.0832214), VERTICES(37, 36, 34, 35),
       NORMAL(-0.536148, 0.822708, -0.188904), VERTICES(36, 36, 41, 34),
       NORMAL(-0.265884, -0.913681, -0.307373), VERTICES(39, 39, 37, 40),
       NORMAL(-0.528824, -0.243408, -0.813065), VERTICES(39, 38, 36, 37),
       NORMAL(-0.195129, 0.569672, -0.798355), VERTICES(38, 38, 41, 36),
       NORMAL(0.229782, -0.922424, -0.310349), VERTICES(43, 43, 39, 40),
       NORMAL(0.295883, 0.54657, -0.783386), VERTICES(42, 42, 41, 38),
       NORMAL(0.565887, -0.821289, 0.0723724), VERTICES(45, 45, 43, 40),
       NORMAL(0.986862, -0.0671387, -0.146912), VERTICES(45, 44, 42, 43),
       NORMAL(0.6129, 0.649323, -0.450226), VERTICES(44, 44, 41, 42),
       NORMAL(0.304443, -0.67598, 0.671066), VERTICES(33, 33, 45, 40),
       NORMAL(0.577789, 0.21991, 0.78598), VERTICES(33, 46, 44, 45),
       NORMAL(0.336563, 0.919968, 0.200897), VERTICES(46, 46, 41, 44),
       NORMAL(-0.547745, -0.26152, -0.794708), VERTICES(10, 9, 5, 6),
       NORMAL(0.413803, -0.295471, -0.861069), VERTICES(43, 42, 38, 39),
};

ATTR attribute_fish_body[] = {
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(829),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(830),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(831),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(832),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(833),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(834),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(835),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(836),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(837),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(838),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(839),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(840),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(841),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(842),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(843),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(844),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(845),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(846),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(847),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(848),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(849),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(850),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(851),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(852),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(853),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(854),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(855),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(856),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(857),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(858),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(859),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(860),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(861),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(862),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(863),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(864),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(865),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(866),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(867),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(868),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(869),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(870),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(871),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(872),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(873),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(874),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(875),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(876),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(877),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(878),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(879),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 2, LUTidx(2), GRreal(880),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 3, LUTidx(3), GRreal(881),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 3, LUTidx(3), GRreal(882),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_fish_body[] = {
       POStoFIXED(0.595566, -0.412552, 0.360764),
       POStoFIXED(0.0912781, 0.653671, 0.46843),
       POStoFIXED(0.0970001, -0.306305, 0.742844),
       POStoFIXED(-0.517273, 0.557922, 0.199921),
       POStoFIXED(-0.502365, -0.376816, 0.492996),
       POStoFIXED(-0.639771, 0.332306, -0.449707),
       POStoFIXED(-0.602768, -0.553757, -0.134033),
       POStoFIXED(-0.0109253, -0.796783, 0.198669),
       POStoFIXED(-0.0506744, 0.745483, -0.28447),
       POStoFIXED(-0.156799, 0.234756, -0.789566),
       POStoFIXED(-0.111145, -0.657745, -0.498886),
       POStoFIXED(0.436508, 0.331024, -0.565186),
       POStoFIXED(0.470612, -0.587799, -0.274033),
       POStoFIXED(0.589844, 0.547424, 0.0863647),
       POStoFIXED(0, -0.483215, 0.63623),
       POStoFIXED(0, -0.662796, 0.193741),
       POStoFIXED(0.0378418, -0.537323, -0.653519),
       POStoFIXED(-0.662521, -0.215515, 0.662201),
       POStoFIXED(-0.684265, -0.317078, 0.179626),
       POStoFIXED(-0.463898, -0.286011, -0.659576),
       POStoFIXED(-0.608871, 0.368057, 0.612442),
       POStoFIXED(-0.642715, 0.397675, 0.136826),
       POStoFIXED(-0.561279, 0.28598, -0.636475),
       POStoFIXED(0, 0.683945, 0.536713),
       POStoFIXED(0, 0.766724, 0.108154),
       POStoFIXED(-0.0790558, 0.594803, -0.61673),
       POStoFIXED(0, 0.0553894, -0.860977),
       POStoFIXED(0.608871, 0.368057, 0.612442),
       POStoFIXED(0.642715, 0.397675, 0.136826),
       POStoFIXED(0.534546, 0.355942, -0.63028),
       POStoFIXED(0.662521, -0.215515, 0.662201),
       POStoFIXED(0.684265, -0.317078, 0.179626),
       POStoFIXED(0.531845, -0.204193, -0.643967),
       POStoFIXED(0.104233, -0.303757, 0.742905),
       POStoFIXED(-0.476135, 0.604218, 0.251526),
       POStoFIXED(-0.495407, -0.353348, 0.53363),
       POStoFIXED(-0.55835, 0.403244, -0.381195),
       POStoFIXED(-0.585358, -0.531799, -0.0949402),
       POStoFIXED(-0.0418701, 0.229401, -0.810837),
       POStoFIXED(-0.0833893, -0.65773, -0.519836),
       POStoFIXED(0.00302124, -0.792984, 0.187363),
       POStoFIXED(0.0497284, 0.742142, -0.295471),
       POStoFIXED(0.521057, 0.27597, -0.604996),
       POStoFIXED(0.485214, -0.605743, -0.311249),
       POStoFIXED(0.625397, 0.474274, -0.012085),
       POStoFIXED(0.600174, -0.433151, 0.29097),
       POStoFIXED(0.123505, 0.653793, 0.4608),
};

XPDATA xpdata_fish_body = {
   
       point_fish_body, sizeof(point_fish_body)/sizeof(POINT),
       polygon_fish_body, sizeof(polygon_fish_body)/sizeof(POLYGON),
       attribute_fish_body,
       normal_fish_body
  
};

//MESH NO.1 : TFIN_Sphere.003
POINT point_fish_tfin[] = {
       POStoFIXED(0.142136, -10.6654, 10.048),
       POStoFIXED(-2.04233, -5.81128, 9.64864),
       POStoFIXED(-2.04233, -3.29875, 9.42113),
       POStoFIXED(0.142136, 0.031723, 9.02174),
       POStoFIXED(0.142136, -4.17274, 13.7567),
       POStoFIXED(2.32661, -3.29875, 9.42113),
       POStoFIXED(2.32661, -5.81128, 9.64864),
       POStoFIXED(0.142136, -14.6082, 20.259),
       POStoFIXED(0.142136, 5.89906, 17.9866),
};

POLYGON polygon_fish_tfin[] = {
       NORMAL(-0.783508, -0.308197, 0.539551), VERTICES(1, 1, 4, 0),
       NORMAL(-0.888916, 0.0413055, 0.456192), VERTICES(2, 2, 4, 1),
       NORMAL(-0.713593, 0.523834, 0.465134), VERTICES(3, 3, 4, 2),
       NORMAL(0.713593, 0.523834, 0.465149), VERTICES(5, 5, 4, 3),
       NORMAL(0.888901, 0.0413055, 0.456207), VERTICES(6, 6, 4, 5),
       NORMAL(0.783493, -0.308197, 0.539551), VERTICES(0, 0, 4, 6),
       NORMAL(1, 0, 0), VERTICES(7, 7, 4, 0),
       NORMAL(1, 0, 0), VERTICES(3, 3, 4, 8),
};

ATTR attribute_fish_tfin[] = {
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(883),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(884),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(885),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(886),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(887),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(888),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(889),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(890),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_fish_tfin[] = {
       POStoFIXED(0.445862, -0.23114, 0.404663),
       POStoFIXED(-0.818634, -0.191696, 0.511765),
       POStoFIXED(-0.830475, 0.202148, 0.459167),
       POStoFIXED(0.257278, 0.314301, 0.279083),
       POStoFIXED(0.249985, 0.0642242, 0.365219),
       POStoFIXED(0.772018, 0.362991, 0.462158),
       POStoFIXED(0.85376, -0.0751953, 0.483978),
       POStoFIXED(1, 0, 0),
       POStoFIXED(1, 0, 0),
};

XPDATA xpdata_fish_tfin[] = {
   {
       point_fish_tfin, sizeof(point_fish_tfin)/sizeof(POINT),
       polygon_fish_tfin, sizeof(polygon_fish_tfin)/sizeof(POLYGON),
       attribute_fish_tfin,
       normal_fish_tfin
  }
};

//MESH NO.2 : DFIN_Sphere.004
POINT point_fish_dfin[] = {
       POStoFIXED(0.142136, -10.6654, 10.048),
       POStoFIXED(0.142136, -18.9967, 0.566589),
       POStoFIXED(0.142136, -19.2, 11.7654),
       POStoFIXED(0.142136, -20.2188, 6.37892),
};

POLYGON polygon_fish_dfin[] = {
       NORMAL(1, 0, 0), VERTICES(3, 2, 0, 1),
};

ATTR attribute_fish_dfin[] = {
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(891),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_fish_dfin[] = {
       POStoFIXED(1, 0, 0),
       POStoFIXED(1, 0, 0),
       POStoFIXED(1, 0, 0),
       POStoFIXED(1, 0, 0),
};

XPDATA xpdata_fish_dfin[] = {
   {
       point_fish_dfin, sizeof(point_fish_dfin)/sizeof(POINT),
       polygon_fish_dfin, sizeof(polygon_fish_dfin)/sizeof(POLYGON),
       attribute_fish_dfin,
       normal_fish_dfin
  }
};


POINT point_ham_tfin[] = {
       POStoFIXED(0.142136, -10.6654, 10.048),
       POStoFIXED(-2.04233, -5.81128, 9.64864),
       POStoFIXED(-2.04233, -3.29875, 9.42113),
       POStoFIXED(0.142136, 0.031723, 9.02174),
       POStoFIXED(0.142136, -4.17274, 13.7567),
       POStoFIXED(2.32661, -3.29875, 9.42113),
       POStoFIXED(2.32661, -5.81128, 9.64864),
       POStoFIXED(0.142136, -14.6082, 20.259),
       POStoFIXED(0.142136, 5.89906, 17.9866),
};

POLYGON polygon_ham_tfin[] = {
       NORMAL(-0.783508, -0.308197, 0.539551), VERTICES(1, 1, 4, 0),
       NORMAL(-0.888916, 0.0413055, 0.456192), VERTICES(2, 2, 4, 1),
       NORMAL(-0.713593, 0.523834, 0.465134), VERTICES(3, 3, 4, 2),
       NORMAL(0.713593, 0.523834, 0.465149), VERTICES(5, 5, 4, 3),
       NORMAL(0.888901, 0.0413055, 0.456207), VERTICES(6, 6, 4, 5),
       NORMAL(0.783493, -0.308197, 0.539551), VERTICES(0, 0, 4, 6),
       NORMAL(1, 0, 0), VERTICES(7, 7, 4, 0),
       NORMAL(1, 0, 0), VERTICES(3, 3, 4, 8),
};

ATTR attribute_ham_tfin[] = {
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(609),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(610),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(611),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(612),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(613),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(614),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(615),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(616),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_ham_tfin[] = {
       POStoFIXED(0.445862, -0.23114, 0.404663),
       POStoFIXED(-0.818634, -0.191696, 0.511765),
       POStoFIXED(-0.830475, 0.202148, 0.459167),
       POStoFIXED(0.257278, 0.314301, 0.279083),
       POStoFIXED(0.249985, 0.0642242, 0.365219),
       POStoFIXED(0.772018, 0.362991, 0.462158),
       POStoFIXED(0.85376, -0.0751953, 0.483978),
       POStoFIXED(1, 0, 0),
       POStoFIXED(1, 0, 0),
};

XPDATA xpdata_ham_tfin[] = {
   {
       point_ham_tfin, sizeof(point_ham_tfin)/sizeof(POINT),
       polygon_ham_tfin, sizeof(polygon_ham_tfin)/sizeof(POLYGON),
       attribute_ham_tfin,
       normal_ham_tfin
  }
};

//MESH NO.2 : DFIN_Sphere.004
POINT point_ham_dfin[] = {
       POStoFIXED(0.142136, -10.6654, 10.048),
       POStoFIXED(0.142136, -18.9967, 0.566589),
       POStoFIXED(0.142136, -19.2, 11.7654),
       POStoFIXED(0.142136, -20.2188, 6.37892),
};

POLYGON polygon_ham_dfin[] = {
       NORMAL(1, 0, 0), VERTICES(3, 2, 0, 1),
};

ATTR attribute_ham_dfin[] = {
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(617),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_ham_dfin[] = {
       POStoFIXED(1, 0, 0),
       POStoFIXED(1, 0, 0),
       POStoFIXED(1, 0, 0),
       POStoFIXED(1, 0, 0),
};

XPDATA xpdata_ham_dfin[] = {
   {
       point_ham_dfin, sizeof(point_ham_dfin)/sizeof(POINT),
       polygon_ham_dfin, sizeof(polygon_ham_dfin)/sizeof(POLYGON),
       attribute_ham_dfin,
       normal_ham_dfin
  }
};

//MESH NO.0 : Plane
POINT point_pup_heart[] = {
       POStoFIXED(-6.88625, 0.665329, 0),
       POStoFIXED(-7.76945, -3.46783, 0),
       POStoFIXED(0, 6.95189, 0),
       POStoFIXED(-3.60805, 4.05826, 0),
       POStoFIXED(-3.60805, -6.09918, 0),
       POStoFIXED(0, -3.05576, 0),
       POStoFIXED(6.88625, 0.665314, 0),
       POStoFIXED(7.76945, -3.46783, 0),
       POStoFIXED(3.60805, 4.05826, 0),
       POStoFIXED(3.60805, -6.09918, 0),
       POStoFIXED(-3.60805, -2.09276, -2.89598),
       POStoFIXED(-7.32785, -1.40125, 0),
       POStoFIXED(7.32785, -1.40125, 0),
       POStoFIXED(3.60805, -2.09276, -2.89598),
       POStoFIXED(0, 0.0873413, -1.94197),
       POStoFIXED(-3.60805, -2.09274, 2.89598),
       POStoFIXED(3.60805, -2.09276, 2.89598),
       POStoFIXED(0, 0.0873413, 1.94197),
};

POLYGON polygon_pup_heart[] = {
       NORMAL(-0.455368, -0.494873, -0.740082), VERTICES(5, 9, 13, 14),
       NORMAL(0.11824, 0.347275, -0.930267), VERTICES(14, 13, 8, 2),
       NORMAL(-0.400024, 0.229843, -0.887207), VERTICES(0, 11, 10, 3),
       NORMAL(-0.419235, -0.243698, -0.874542), VERTICES(11, 1, 4, 10),
       NORMAL(-0.11824, 0.347275, -0.930267), VERTICES(3, 10, 14, 2),
       NORMAL(0.419235, -0.243698, -0.874542), VERTICES(12, 13, 9, 7),
       NORMAL(0.400024, 0.229843, -0.887207), VERTICES(6, 8, 13, 12),
       NORMAL(0.455368, -0.494873, -0.740082), VERTICES(10, 4, 5, 14),
       NORMAL(-0.455368, -0.494873, 0.740082), VERTICES(16, 9, 5, 17),
       NORMAL(0.11824, 0.347275, 0.930267), VERTICES(8, 16, 17, 2),
       NORMAL(-0.400024, 0.229843, 0.887207), VERTICES(15, 11, 0, 3),
       NORMAL(-0.419235, -0.243698, 0.874542), VERTICES(4, 1, 11, 15),
       NORMAL(-0.11824, 0.347275, 0.930267), VERTICES(17, 15, 3, 2),
       NORMAL(0.419235, -0.243698, 0.874542), VERTICES(9, 16, 12, 7),
       NORMAL(0.400024, 0.229843, 0.887207), VERTICES(16, 8, 6, 12),
       NORMAL(0.455368, -0.494858, 0.740082), VERTICES(5, 4, 15, 17),
};

ATTR attribute_pup_heart[] = {
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(783),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(784),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(785),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(786),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(787),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(788),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(789),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(790),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(791),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(792),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(793),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(794),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(795),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(796),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(797),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
ATTRIBUTE(Single_Plane, SORT_CEN, 4, LUTidx(4), GRreal(798),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_pup_heart[] = {
       POStoFIXED(-0.400024, 0.229843, 0),
       POStoFIXED(-0.419235, -0.243698, 0),
       POStoFIXED(0, 0.347275, 0),
       POStoFIXED(-0.259125, 0.288559, 0),
       POStoFIXED(0.0180664, -0.369278, 0),
       POStoFIXED(0, -0.494858, 0),
       POStoFIXED(0.400024, 0.229843, 0),
       POStoFIXED(0.419235, -0.243698, 0),
       POStoFIXED(0.259125, 0.288559, 0),
       POStoFIXED(-0.0180664, -0.369278, 0),
       POStoFIXED(-0.120529, -0.0403595, -0.858017),
       POStoFIXED(-0.409622, -0.00692749, 0),
       POStoFIXED(0.409622, -0.00692749, 0),
       POStoFIXED(0.120529, -0.0403595, -0.858017),
       POStoFIXED(0, -0.0737915, -0.835175),
       POStoFIXED(-0.120529, -0.0403595, 0.858017),
       POStoFIXED(0.120529, -0.0403595, 0.858017),
       POStoFIXED(0, -0.0737915, 0.835175),
};

XPDATA xpdata_pup_heart = {
   
       point_pup_heart, sizeof(point_pup_heart)/sizeof(POINT),
       polygon_pup_heart, sizeof(polygon_pup_heart)/sizeof(POLYGON),
       attribute_pup_heart,
       normal_pup_heart
  
};

//TOTAL POINTS : 18
//TOTAL POLYGONS : 16

POINT point_pup_gem[] = {
       POStoFIXED(0, -4.18555, -16.1744),
       POStoFIXED(0, -9.64075, -10.1607),
       POStoFIXED(15.3828, -4.18555, -4.99815),
       POStoFIXED(9.66338, -9.64075, -3.13982),
       POStoFIXED(9.50705, -4.18555, 13.0853),
       POStoFIXED(5.97227, -9.64075, 8.22015),
       POStoFIXED(0, 12.7274, 0),
       POStoFIXED(-9.50705, -4.18555, 13.0853),
       POStoFIXED(-5.97229, -9.64075, 8.22015),
       POStoFIXED(-15.3828, -4.18555, -4.99815),
       POStoFIXED(-9.66338, -9.64075, -3.13982),
};

POLYGON polygon_pup_gem[] = {
       NORMAL(0.43866, -0.665588, -0.603775), VERTICES(3, 2, 0, 1),
       NORMAL(0.464874, 0.611923, -0.639862), VERTICES(2, 2, 6, 0),
       NORMAL(0.709778, -0.665588, 0.230621), VERTICES(5, 4, 2, 3),
       NORMAL(0.752197, 0.611923, 0.2444), VERTICES(4, 4, 6, 2),
       NORMAL(0, -0.665588, 0.746307), VERTICES(8, 7, 4, 5),
       NORMAL(0, 0.611923, 0.790909), VERTICES(7, 7, 6, 4),
       NORMAL(0, -1, 0), VERTICES(10, 10, 3, 1),
       NORMAL(-0.709778, -0.665588, 0.230621), VERTICES(10, 9, 7, 8),
       NORMAL(-0.752197, 0.611923, 0.2444), VERTICES(9, 9, 6, 7),
       NORMAL(0, -1, 0), VERTICES(10, 8, 5, 3),
       NORMAL(-0.43866, -0.665588, -0.603775), VERTICES(1, 0, 9, 10),
       NORMAL(-0.464874, 0.611923, -0.639862), VERTICES(0, 0, 6, 9),
};

ATTR attribute_pup_gem[] = {
       ATTRIBUTE(Single_Plane, SORT_CEN, 7, LUTidx(7), GRreal(799),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 7, LUTidx(7), GRreal(800),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 7, LUTidx(7), GRreal(801),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 7, LUTidx(7), GRreal(802),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 7, LUTidx(7), GRreal(803),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 7, LUTidx(7), GRreal(804),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 7, LUTidx(7), GRreal(805),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 7, LUTidx(7), GRreal(806),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 7, LUTidx(7), GRreal(807),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 7, LUTidx(7), GRreal(808),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 7, LUTidx(7), GRreal(809),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, 7, LUTidx(7), GRreal(810),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_pup_gem[] = {
       POStoFIXED(-0.0929718, 0.100906, -0.625427),
       POStoFIXED(0, -0.777054, -0.402512),
       POStoFIXED(0.566071, 0.100906, -0.281693),
       POStoFIXED(0.287109, -0.832794, -0.093277),
       POStoFIXED(0.442825, 0.100906, 0.451324),
       POStoFIXED(0.236588, -0.777054, 0.325638),
       POStoFIXED(0, 0.611923, 0),
       POStoFIXED(-0.292389, 0.100906, 0.560623),
       POStoFIXED(-0.236588, -0.777054, 0.325638),
       POStoFIXED(-0.623535, 0.100906, -0.104843),
       POStoFIXED(-0.229675, -0.866226, -0.0746307),
};

XPDATA xpdata_pup_gem = {
   
       point_pup_gem, sizeof(point_pup_gem)/sizeof(POINT),
       polygon_pup_gem, sizeof(polygon_pup_gem)/sizeof(POLYGON),
       attribute_pup_gem,
       normal_pup_gem
  
};

POINT point_goal[] = {
       POStoFIXED(0, -2.23358, -24),
       POStoFIXED(-20.7846, -2.23358, -12),
       POStoFIXED(-20.7846, -2.23358, 12),
       POStoFIXED(0, -2.23358, 24),
       POStoFIXED(20.7846, -2.23358, 12),
       POStoFIXED(20.7846, -2.23358, -12),
       POStoFIXED(0, 2.60585, -24),
       POStoFIXED(-20.7846, 2.60585, -12),
       POStoFIXED(-20.7846, 2.60585, 12),
       POStoFIXED(0, 2.60585, 24),
       POStoFIXED(20.7846, 2.60585, 12),
       POStoFIXED(20.7846, 2.60585, -12),
       POStoFIXED(0, -2.23358, 0),
       POStoFIXED(0, -64.387, -29.668),
       POStoFIXED(-25.6932, -64.387, -14.834),
       POStoFIXED(-25.6932, -64.387, 14.834),
       POStoFIXED(0, -64.387, 29.668),
       POStoFIXED(25.6932, -64.387, 14.834),
       POStoFIXED(25.6932, -64.387, -14.834),
};

POLYGON polygon_goal[] = {
       NORMAL(1, 0, 0), VERTICES(4, 10, 11, 5),
       NORMAL(-0.5, 0, 0.866013), VERTICES(2, 8, 9, 3),
       NORMAL(-0.5, 0, -0.866013), VERTICES(0, 6, 7, 1),
       NORMAL(0, -1, 0), VERTICES(5, 5, 12, 4),
       NORMAL(0, -1, 0), VERTICES(1, 1, 12, 0),
       NORMAL(0, -1, 0), VERTICES(3, 3, 12, 2),
       NORMAL(-1, 0, 0), VERTICES(1, 7, 8, 2),
       NORMAL(0.5, 0, -0.866013), VERTICES(5, 11, 6, 0),
       NORMAL(0.5, 0, 0.866013), VERTICES(3, 9, 10, 4),
       NORMAL(0, -1, 0), VERTICES(4, 4, 12, 3),
       NORMAL(0, -1, 0), VERTICES(0, 0, 12, 5),
       NORMAL(0, -1, 0), VERTICES(2, 2, 12, 1),
       NORMAL(0.498444, 0.0787201, 0.863327), VERTICES(4, 17, 16, 3),
       NORMAL(-0.996887, 0.0787201, 0), VERTICES(2, 15, 14, 1),
       NORMAL(0.996887, 0.0787201, 0), VERTICES(5, 18, 17, 4),
       NORMAL(-0.498444, 0.0787201, 0.863327), VERTICES(3, 16, 15, 2),
       NORMAL(-0.498444, 0.0787201, -0.863327), VERTICES(1, 14, 13, 0),
       NORMAL(0.498444, 0.0787201, -0.863327), VERTICES(0, 13, 18, 5),
};

ATTR attribute_goal[] = {
       ATTRIBUTE(Single_Plane, SORT_MIN, ENEMY_TILESET+1, LUTidx(ENEMY_TILESET+1), GRreal(817),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_MIN, ENEMY_TILESET+1, LUTidx(ENEMY_TILESET+1), GRreal(818),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_MIN, ENEMY_TILESET+1, LUTidx(ENEMY_TILESET+1), GRreal(819),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_MIN, ENEMY_TILESET+1, LUTidx(ENEMY_TILESET+1), GRreal(820),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_MIN, ENEMY_TILESET+1, LUTidx(ENEMY_TILESET+1), GRreal(821),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_MIN, ENEMY_TILESET+1, LUTidx(ENEMY_TILESET+1), GRreal(822),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_MIN, 2, LUTidx(2), GRreal(823),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_MIN, 2, LUTidx(2), GRreal(824),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_MIN, 2, LUTidx(2), GRreal(825),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_MIN, 2, LUTidx(2), GRreal(826),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_MIN, 2, LUTidx(2), GRreal(827),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_MIN, 2, LUTidx(2), GRreal(828),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_MIN, 7, LUTidx(7), GRreal(799),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Trans, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_MIN, 7, LUTidx(7), GRreal(800),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Trans, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_MIN, 7, LUTidx(7), GRreal(801),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Trans, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_MIN, 7, LUTidx(7), GRreal(802),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Trans, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_MIN, 7, LUTidx(7), GRreal(803),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Trans, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_MIN, 7, LUTidx(7), GRreal(804),Window_In|MESHon|HSSon|ECdis|SPdis|CL32KRGB|CL_Trans, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_goal[] = {
       POStoFIXED(0, -0.406067, -0.494095),
       POStoFIXED(-0.427902, -0.406067, -0.24704),
       POStoFIXED(-0.427902, -0.406067, 0.24704),
       POStoFIXED(0, -0.406067, 0.494095),
       POStoFIXED(0.427902, -0.406067, 0.24704),
       POStoFIXED(0.427902, -0.406067, -0.24704),
       POStoFIXED(0, 0, -0.866013),
       POStoFIXED(-0.75, 0, -0.432999),
       POStoFIXED(-0.75, 0, 0.432999),
       POStoFIXED(0, 0, 0.866013),
       POStoFIXED(0.75, 0, 0.432999),
       POStoFIXED(0.75, 0, -0.432999),
       POStoFIXED(0, -1, 0),
       POStoFIXED(0, 0.0787201, -0.863327),
       POStoFIXED(-0.747665, 0.0787201, -0.431656),
       POStoFIXED(-0.747665, 0.0787201, 0.431656),
       POStoFIXED(0, 0.0787201, 0.863327),
       POStoFIXED(0.747665, 0.0787201, 0.431656),
       POStoFIXED(0.747665, 0.0787201, -0.431656),
};

XPDATA xpdata_goal = {
   
       point_goal, sizeof(point_goal)/sizeof(POINT),
       polygon_goal, sizeof(polygon_goal)/sizeof(POLYGON),
       attribute_goal,
       normal_goal
  
};

POINT point_pup_spider[] = {
       POStoFIXED(8, 0, 0),
       POStoFIXED(4, 6.92821, 0),
       POStoFIXED(-4, 6.92821, 0),
       POStoFIXED(-8, 0, 0),
       POStoFIXED(-4, -6.92821, 0),
       POStoFIXED(4, -6.92821, 0),
       POStoFIXED(0, 0, -2.8533),
       POStoFIXED(0, 0, 2.8533),
       POStoFIXED(4.90205, -5.7169, 0),
       POStoFIXED(16.3359, -5.7169, 0),
       POStoFIXED(4.90205, 5.7169, 0),
       POStoFIXED(16.3359, 5.7169, 0),
       POStoFIXED(-4.90205, -5.7169, 0),
       POStoFIXED(-16.3359, -5.7169, 0),
       POStoFIXED(-4.90205, 5.7169, 0),
       POStoFIXED(-16.3359, 5.7169, 0),
};

POLYGON polygon_pup_spider[] = {
       NORMAL(0.329788, 0.190399, -0.924652), VERTICES(1, 1, 6, 0),
       NORMAL(0, 0.380798, -0.924652), VERTICES(2, 2, 6, 1),
       NORMAL(-0.329788, 0.190399, -0.924652), VERTICES(3, 3, 6, 2),
       NORMAL(-0.329788, -0.190399, -0.924652), VERTICES(4, 4, 6, 3),
       NORMAL(0, -0.380798, -0.924652), VERTICES(5, 5, 6, 4),
       NORMAL(0.329788, -0.190399, -0.924652), VERTICES(0, 0, 6, 5),
       NORMAL(0.329788, 0.190399, 0.924652), VERTICES(7, 7, 1, 0),
       NORMAL(0, 0.380798, 0.924652), VERTICES(7, 7, 2, 1),
       NORMAL(-0.329788, 0.190399, 0.924652), VERTICES(7, 7, 3, 2),
       NORMAL(-0.329788, -0.190399, 0.924652), VERTICES(7, 7, 4, 3),
       NORMAL(0, -0.380798, 0.924652), VERTICES(7, 7, 5, 4),
       NORMAL(0.329788, -0.190399, 0.924652), VERTICES(7, 7, 0, 5),
       NORMAL(0, 0, 1), VERTICES(10, 11, 9, 8),
       NORMAL(0, 0, 1), VERTICES(12, 13, 15, 14),
};

ATTR attribute_pup_spider[] = {
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(829),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(830),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(831),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(832),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(833),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(834),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(835),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(836),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(837),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(838),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(839),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET, LUTidx(ENEMY_TILESET), GRreal(840),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+7, LUTidx(ENEMY_TILESET+7), GRreal(841),Window_In|MESHoff|CL32KRGB|CL_Gouraud, sprVflip, UseGouraud|UseClip),
		ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+7, LUTidx(ENEMY_TILESET+7), GRreal(842),Window_In|MESHoff|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_pup_spider[] = {
       POStoFIXED(0.329788, -0.0380707, -0.184921),
       POStoFIXED(0.197861, 0.266556, -0.184921),
       POStoFIXED(-0.131912, 0.304626, -0.184921),
       POStoFIXED(-0.329788, 0.0380707, -0.184921),
       POStoFIXED(-0.197861, -0.266556, -0.184921),
       POStoFIXED(0.131912, -0.304626, -0.184921),
       POStoFIXED(0, 0, -0.924652),
       POStoFIXED(0, 0, 0.924652),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
};

XPDATA xpdata_pup_spider = {
   
       point_pup_spider, sizeof(point_pup_spider)/sizeof(POINT),
       polygon_pup_spider, sizeof(polygon_pup_spider)/sizeof(POLYGON),
       attribute_pup_spider,
       normal_pup_spider
  
};

POINT point_pup_bat[] = {
       POStoFIXED(8, 0, 0),
       POStoFIXED(4, 6.92821, 0),
       POStoFIXED(-4, 6.92821, 0),
       POStoFIXED(-8, 0, 0),
       POStoFIXED(-4, -6.92821, 0),
       POStoFIXED(4, -6.92821, 0),
       POStoFIXED(0, 0, -2.8533),
       POStoFIXED(0, 0, 2.8533),
       POStoFIXED(4.90205, -5.7169, 0),
       POStoFIXED(16.3359, -5.7169, 0),
       POStoFIXED(4.90205, 5.7169, 0),
       POStoFIXED(16.3359, 5.7169, 0),
       POStoFIXED(-4.90205, -5.7169, 0),
       POStoFIXED(-16.3359, -5.7169, 0),
       POStoFIXED(-4.90205, 5.7169, 0),
       POStoFIXED(-16.3359, 5.7169, 0),
};

POLYGON polygon_pup_bat[] = {
       NORMAL(0.329788, 0.190399, -0.924652), VERTICES(1, 1, 6, 0),
       NORMAL(0, 0.380798, -0.924652), VERTICES(2, 2, 6, 1),
       NORMAL(-0.329788, 0.190399, -0.924652), VERTICES(3, 3, 6, 2),
       NORMAL(-0.329788, -0.190399, -0.924652), VERTICES(4, 4, 6, 3),
       NORMAL(0, -0.380798, -0.924652), VERTICES(5, 5, 6, 4),
       NORMAL(0.329788, -0.190399, -0.924652), VERTICES(0, 0, 6, 5),
       NORMAL(0.329788, 0.190399, 0.924652), VERTICES(7, 7, 1, 0),
       NORMAL(0, 0.380798, 0.924652), VERTICES(7, 7, 2, 1),
       NORMAL(-0.329788, 0.190399, 0.924652), VERTICES(7, 7, 3, 2),
       NORMAL(-0.329788, -0.190399, 0.924652), VERTICES(7, 7, 4, 3),
       NORMAL(0, -0.380798, 0.924652), VERTICES(7, 7, 5, 4),
       NORMAL(0.329788, -0.190399, 0.924652), VERTICES(7, 7, 0, 5),
       NORMAL(0, 0, 1), VERTICES(9, 8, 10, 11),
       NORMAL(0, 0, 1), VERTICES(14, 12, 13, 15),
};

ATTR attribute_pup_bat[] = {
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(829),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(830),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(831),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(832),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(833),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(834),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(835),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(836),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(837),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(838),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(839),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+3, LUTidx(ENEMY_TILESET+3), GRreal(840),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+8, LUTidx(ENEMY_TILESET+8), GRreal(841),Window_In|MESHoff|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+8, LUTidx(ENEMY_TILESET+8), GRreal(842),Window_In|MESHoff|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_pup_bat[] = {
       POStoFIXED(0.329788, -0.0380707, -0.184921),
       POStoFIXED(0.197861, 0.266556, -0.184921),
       POStoFIXED(-0.131912, 0.304626, -0.184921),
       POStoFIXED(-0.329788, 0.0380707, -0.184921),
       POStoFIXED(-0.197861, -0.266556, -0.184921),
       POStoFIXED(0.131912, -0.304626, -0.184921),
       POStoFIXED(0, 0, -0.924652),
       POStoFIXED(0, 0, 0.924652),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
};

XPDATA xpdata_pup_bat = {
   
       point_pup_bat, sizeof(point_pup_bat)/sizeof(POINT),
       polygon_pup_bat, sizeof(polygon_pup_bat)/sizeof(POLYGON),
       attribute_pup_bat,
       normal_pup_bat
  
};

POINT point_pup_frog[] = {
       POStoFIXED(8, 0, 0),
       POStoFIXED(4, 6.92821, 0),
       POStoFIXED(-4, 6.92821, 0),
       POStoFIXED(-8, 0, 0),
       POStoFIXED(-4, -6.92821, 0),
       POStoFIXED(4, -6.92821, 0),
       POStoFIXED(0, 0, -2.8533),
       POStoFIXED(0, 0, 2.8533),
       POStoFIXED(4.90205, -5.7169, 0),
       POStoFIXED(16.3359, -5.7169, 0),
       POStoFIXED(4.90205, 5.7169, 0),
       POStoFIXED(16.3359, 5.7169, 0),
       POStoFIXED(-4.90205, -5.7169, 0),
       POStoFIXED(-16.3359, -5.7169, 0),
       POStoFIXED(-4.90205, 5.7169, 0),
       POStoFIXED(-16.3359, 5.7169, 0),
};

POLYGON polygon_pup_frog[] = {
       NORMAL(0.329788, 0.190399, -0.924652), VERTICES(1, 1, 6, 0),
       NORMAL(0, 0.380798, -0.924652), VERTICES(2, 2, 6, 1),
       NORMAL(-0.329788, 0.190399, -0.924652), VERTICES(3, 3, 6, 2),
       NORMAL(-0.329788, -0.190399, -0.924652), VERTICES(4, 4, 6, 3),
       NORMAL(0, -0.380798, -0.924652), VERTICES(5, 5, 6, 4),
       NORMAL(0.329788, -0.190399, -0.924652), VERTICES(0, 0, 6, 5),
       NORMAL(0.329788, 0.190399, 0.924652), VERTICES(7, 7, 1, 0),
       NORMAL(0, 0.380798, 0.924652), VERTICES(7, 7, 2, 1),
       NORMAL(-0.329788, 0.190399, 0.924652), VERTICES(7, 7, 3, 2),
       NORMAL(-0.329788, -0.190399, 0.924652), VERTICES(7, 7, 4, 3),
       NORMAL(0, -0.380798, 0.924652), VERTICES(7, 7, 5, 4),
       NORMAL(0.329788, -0.190399, 0.924652), VERTICES(7, 7, 0, 5),
       NORMAL(0, 0, 1), VERTICES(10, 11, 9, 8),
       NORMAL(0, 0, 1), VERTICES(12, 13, 15, 14),
};

ATTR attribute_pup_frog[] = {
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(829),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(830),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(831),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(832),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(833),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(834),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(835),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(836),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(837),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(838),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(839),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+9, LUTidx(ENEMY_TILESET+9), GRreal(840),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
		ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+13, LUTidx(ENEMY_TILESET+12), GRreal(841),Window_In|MESHoff|CL32KRGB|CL_Gouraud, sprVflip, UseGouraud|UseClip),
		ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+13, LUTidx(ENEMY_TILESET+12), GRreal(842),Window_In|MESHoff|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),

};

VECTOR normal_pup_frog[] = {
       POStoFIXED(0.329788, -0.0380707, -0.184921),
       POStoFIXED(0.197861, 0.266556, -0.184921),
       POStoFIXED(-0.131912, 0.304626, -0.184921),
       POStoFIXED(-0.329788, 0.0380707, -0.184921),
       POStoFIXED(-0.197861, -0.266556, -0.184921),
       POStoFIXED(0.131912, -0.304626, -0.184921),
       POStoFIXED(0, 0, -0.924652),
       POStoFIXED(0, 0, 0.924652),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
};

XPDATA xpdata_pup_frog = {
   
       point_pup_frog, sizeof(point_pup_frog)/sizeof(POINT),
       polygon_pup_frog, sizeof(polygon_pup_frog)/sizeof(POLYGON),
       attribute_pup_frog,
       normal_pup_frog
  
};

POINT point_pup_fish[] = {
       POStoFIXED(-4.90205, 3.31499, 0),
       POStoFIXED(-16.3359, 6.99278, 0),
       POStoFIXED(-4.90205, -3.31499, 0),
       POStoFIXED(-16.3359, -6.99277, 0),
       POStoFIXED(2.6373, -7.9585, 0),
       POStoFIXED(8.38394, 0.0489197, 0),
       POStoFIXED(2.54425, 7.98872, 0),
       POStoFIXED(-6.81151, 4.88838, 0),
       POStoFIXED(-6.754, -4.96754, 0),
       POStoFIXED(0, 0, -2.73775),
       POStoFIXED(0, 0, 2.73775),
       POStoFIXED(-4.90205, 0, 0),
       POStoFIXED(-11.8322, 0, 0),
};

POLYGON polygon_pup_fish[] = {
       NORMAL(-0.113571, -0.356628, -0.927307), VERTICES(4, 4, 9, 8),
       NORMAL(-0.374268, -0.00218201, -0.927307), VERTICES(8, 8, 9, 7),
       NORMAL(-0.117722, 0.355286, -0.927307), VERTICES(7, 7, 9, 6),
       NORMAL(0.301514, 0.221756, -0.927307), VERTICES(6, 6, 9, 5),
       NORMAL(0.304077, -0.218216, -0.927307), VERTICES(5, 5, 9, 4),
       NORMAL(-0.113571, -0.356628, 0.927307), VERTICES(10, 10, 4, 8),
       NORMAL(-0.374268, -0.00218201, 0.927307), VERTICES(10, 10, 8, 7),
       NORMAL(-0.117722, 0.355286, 0.927307), VERTICES(10, 10, 7, 6),
       NORMAL(0.301514, 0.221756, 0.927307), VERTICES(10, 10, 6, 5),
       NORMAL(0.304077, -0.218216, 0.927307), VERTICES(10, 10, 5, 4),
       NORMAL(0, 0, 1), VERTICES(2, 3, 12, 11),
       NORMAL(0, 0, 1), VERTICES(11, 12, 1, 0),
};

ATTR attribute_pup_fish[] = {
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(829),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(830),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(831),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(832),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(833),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(834),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(835),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(836),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(837),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Single_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(838),Window_In|MESHoff|HSSon|ECdis|SPdis|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
       ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(839),Window_In|MESHoff|CL32KRGB|CL_Gouraud, sprVflip, UseGouraud|UseClip),
	   ATTRIBUTE(Dual_Plane, SORT_CEN, ENEMY_TILESET+11, LUTidx(ENEMY_TILESET+11), GRreal(840),Window_In|MESHoff|CL32KRGB|CL_Gouraud, sprNoflip, UseGouraud|UseClip),
};

VECTOR normal_pup_fish[] = {
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0.0534821, -0.301254, -0.185455),
       POStoFIXED(0.30304, -0.0422211, -0.185455),
       POStoFIXED(0.13382, 0.275162, -0.185455),
       POStoFIXED(-0.220337, 0.212296, -0.185455),
       POStoFIXED(-0.269989, -0.143951, -0.185455),
       POStoFIXED(0, 0, -0.927307),
       POStoFIXED(0, 0, 0.927307),
       POStoFIXED(0, 0, 1),
       POStoFIXED(0, 0, 1),
};

XPDATA xpdata_pup_fish = {
   
       point_pup_fish, sizeof(point_pup_fish)/sizeof(POINT),
       polygon_pup_fish, sizeof(polygon_pup_fish)/sizeof(POLYGON),
       attribute_pup_fish,
       normal_pup_fish
  
};

POINT	point_ZERO[]={
};
POLYGON polygon_ZERO[]={
};
ATTR attribute_ZERO[]={
};

PDATA	PD_ZERO={
	point_ZERO,0,
	polygon_ZERO,0,
	attribute_ZERO
};


XPDATA *map_data[]={
	
&xpdata_pup_fish,

};

PDATA *map_data_lp[]={
	
&PD_ZERO,

};

XPDATA *pup_data[]={
	
&xpdata_pup_heart,
&xpdata_pup_gem,
&xpdata_goal,
&xpdata_pup_spider,
&xpdata_pup_bat,
&xpdata_pup_fish,
&xpdata_pup_frog,

};

XPDATA *enemy_data[]={
	
&xpdata_spider_body,
&xpdata_bat_body,
&xpdata_frog_body,
&xpdata_fish_body,

};


